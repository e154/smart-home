name: Build and Deploy

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
    branches:
      - main

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build_public:
    name: Build public
    strategy:
      matrix:
        node: [ 16 ]
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Build public
        id: build-public
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: make build_public

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: public_build
          path: ./build

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

  build_common:
    name: Build common
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build common
        id: build-common
        run: make build_common_structure

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: common_build
          path: ./tmp/common

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

      - name: upload common artifact
        uses: softprops/action-gh-release@v1
        with:
          files: ./common.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_x86:
    name: Build linux x86
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-x86
        run: make build_linux_x86

      - name: upload server linux x86
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-x86.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_amd64:
    name: Build linux amd64
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-amd64
        run: make build_linux_amd64

      - name: upload server linux amd64
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_armv5:
    name: Build linux arm5
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-arm-5
        run: make build_linux_armv5

      - name: upload server linux armv5
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-arm-5.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_arm6:
    name: Build linux arm6
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-arm-6
        run: make build_linux_armv6

      - name: upload server linux armv6
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-arm-6.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_arm7:
    name: Build linux arm7
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-armv7l
        run: make build_linux_armv7l

      - name: upload server linux armv7
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-arm-7.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux_arm64:
    name: Build linux arm64
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-linux-arm64
        run: make build_linux_arm64

      - name: upload server linux arm64
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-linux-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_windows_amd64:
    name: Build windows amd64
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-windows-amd64
        run: make build_windows_amd64

      - name: upload server linux arm64
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-windows-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_windows_x86:
    name: Build windows x86
    strategy:
      matrix:
        go: [ 1.23 ]
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:

      - env:
          OUTPUT1: ${{needs.build_public.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: Go mod tidy
        run: |
          echo -e "machine github.com\n  login ${{ secrets.GITHUBTOKEN }}" > ~/.netrc
          make get_deps

      - name: trying to build
        id: build-windows-x86
        run: make build_windows_x86

      - name: upload server linux 386
        uses: softprops/action-gh-release@v1
        with:
          files: ./server-windows-x86.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_image_upload:
    name: Upload docker images
    runs-on: ubuntu-latest
    needs: [ build_public ]
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: public_build
          path: ./build

      - name: trying to upload docker image
        run: make publish
