// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-11-08 22:57:17.167713 +0700 +07 m=+0.044124880

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "Smart Home System",
        "title": "Smart home API",
        "contact": {
            "name": "Alex Filippov",
            "url": "https://e154.github.io/smart-home/",
            "email": "support@e154.ru"
        },
        "license": {
            "name": "MIT License",
            "url": "https://raw.githubusercontent.com/e154/smart-home/master/LICENSE"
        },
        "version": "1"
    },
    "host": "{{.Host}}",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "index"
                ],
                "summary": "index page",
                "responses": {
                    "200": {}
                }
            }
        },
        "/node": {
            "get": {
                "description": "Get node list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Node list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "DESC",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseNodeList"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Add new node",
                "parameters": [
                    {
                        "description": "node params",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NewNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NewObjectSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            }
        },
        "/node/{id}": {
            "get": {
                "description": "Get node by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Show node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseNode"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update node by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Update node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update node",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UpdateNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete node by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Delete node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            }
        },
        "/script": {
            "get": {
                "description": "Get script list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Script list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "DESC",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseScriptList"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Add new script",
                "parameters": [
                    {
                        "description": "script params",
                        "name": "script",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NewScript"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NewObjectSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            }
        },
        "/script/{id}": {
            "get": {
                "description": "Get script by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Show script",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Script ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseScript"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update script by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Update script",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Script ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update script",
                        "name": "script",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UpdateScript"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete script by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Delete script",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Script ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            }
        },
        "/script/{id}/exec": {
            "post": {
                "description": "Execute script by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "script"
                ],
                "summary": "Execute script",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Script ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResponseScriptExec"
                        }
                    },
                    "400": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "some error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorModel": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "errors": {
                    "description": "errors",
                    "type": "object",
                    "$ref": "#/definitions/models.ErrorModelErrors"
                },
                "message": {
                    "description": "описание ошибки",
                    "type": "string"
                }
            }
        },
        "models.ErrorModelErrors": {
            "type": "object"
        },
        "models.NewNode": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.NewObjectSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.NewScript": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "models.Node": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ResponseNode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "node": {
                            "type": "object",
                            "$ref": "#/definitions/models.Node"
                        }
                    }
                }
            }
        },
        "models.ResponseNodeList": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Node"
                            }
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.ResponseScript": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "script": {
                            "type": "object",
                            "$ref": "#/definitions/models.Script"
                        }
                    }
                }
            }
        },
        "models.ResponseScriptExec": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "result": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.ResponseScriptList": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Script"
                            }
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.ResponseSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "models.Script": {
            "type": "object",
            "properties": {
                "compiled": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateNode": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateScript": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
