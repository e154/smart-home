basePath: /api/v1
consumes:
- application/json
definitions:
  AuthSignInResponse:
    properties:
      access_token:
        type: string
        x-go-name: AccessToken
      current_user:
        $ref: '#/definitions/CurrentUserModel'
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  CurrentUserModel:
    description: Current User represents the user for this application
    properties:
      email:
        type: string
        x-go-name: Email
      first_name:
        type: string
        x-go-name: FirstName
      history:
        items:
          $ref: '#/definitions/UserHistory'
        type: array
        x-go-name: History
      id:
        format: int64
        type: integer
        x-go-name: Id
      image:
        $ref: '#/definitions/Image'
      lang:
        type: string
        x-go-name: Lang
      last_name:
        type: string
        x-go-name: LastName
      meta:
        items:
          $ref: '#/definitions/UserByIdModelMeta'
        type: array
        x-go-name: Meta
      nickname:
        type: string
        x-go-name: Nickname
      role:
        $ref: '#/definitions/RoleModel'
      sign_in_count:
        format: int64
        type: integer
        x-go-name: SignInCount
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  Error:
    properties:
      code:
        $ref: '#/definitions/ResponseType'
      errors:
        $ref: '#/definitions/ErrorErrors'
      message:
        description: описание ошибки
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  ErrorErrors:
    items:
      $ref: '#/definitions/ErrorErrorsItems'
    type: array
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  ErrorErrorsItems:
    properties:
      code:
        description: тип ишибки
        type: string
        x-go-name: Code
      field:
        description: поле вызвавшее ошибку
        type: string
        x-go-name: Field
      message:
        description: описание
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  Image:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      image:
        type: string
        x-go-name: Image
      mime_type:
        type: string
        x-go-name: MimeType
      name:
        type: string
        x-go-name: Name
      size:
        format: int64
        type: integer
        x-go-name: Size
      thumb:
        type: string
        x-go-name: Thumb
      title:
        type: string
        x-go-name: Title
      url:
        type: string
        x-go-name: Url
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  NewNode:
    properties:
      description:
        type: string
        x-go-name: Description
      ip:
        type: string
        x-go-name: IP
      name:
        type: string
        x-go-name: Name
      port:
        format: int64
        type: integer
        x-go-name: Port
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  NewUser:
    properties:
      avatar:
        $ref: '#/definitions/NewUserImage'
      email:
        type: string
        x-go-name: Email
      first_name:
        type: string
        x-go-name: FirstName
      lang:
        type: string
        x-go-name: Lang
      last_name:
        type: string
        x-go-name: LastName
      meta:
        items:
          $ref: '#/definitions/NewUserMeta'
        type: array
        x-go-name: Meta
      nickname:
        type: string
        x-go-name: Nickname
      password:
        type: string
        x-go-name: Password
      password_repeat:
        type: string
        x-go-name: PasswordRepeat
      role:
        $ref: '#/definitions/NewUserRole'
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  NewUserImage:
    properties:
      id:
        format: int64
        type: integer
        x-go-name: Id
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  NewUserMeta:
    properties:
      key:
        type: string
        x-go-name: Key
      value:
        type: string
        x-go-name: Value
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  NewUserRole:
    properties:
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  Node:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      description:
        type: string
        x-go-name: Description
      id:
        format: int64
        type: integer
        x-go-name: Id
      ip:
        type: string
        x-go-name: Ip
      name:
        type: string
        x-go-name: Name
      port:
        format: int64
        type: integer
        x-go-name: Port
      status:
        type: string
        x-go-name: Status
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  ResponseType:
    type: string
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  RoleModel:
    properties:
      Parent:
        properties:
          name:
            type: string
            x-go-name: Name
        type: object
      access_list:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
        x-go-name: AccessList
      children:
        items:
          $ref: '#/definitions/RoleModel'
        type: array
        x-go-name: Children
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      description:
        type: string
        x-go-name: Description
      name:
        type: string
        x-go-name: Name
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UpdateNode:
    properties:
      description:
        type: string
        x-go-name: Description
      id:
        format: int64
        type: integer
        x-go-name: Id
      ip:
        type: string
        x-go-name: IP
      name:
        type: string
        x-go-name: Name
      port:
        format: int64
        type: integer
        x-go-name: Port
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UpdateUser:
    properties:
      avatar:
        $ref: '#/definitions/NewUserImage'
      email:
        type: string
        x-go-name: Email
      first_name:
        type: string
        x-go-name: FirstName
      id:
        format: int64
        type: integer
        x-go-name: Id
      lang:
        type: string
        x-go-name: Lang
      last_name:
        type: string
        x-go-name: LastName
      meta:
        items:
          $ref: '#/definitions/NewUserMeta'
        type: array
        x-go-name: Meta
      nickname:
        type: string
        x-go-name: Nickname
      password:
        type: string
        x-go-name: Password
      password_repeat:
        type: string
        x-go-name: PasswordRepeat
      role:
        $ref: '#/definitions/NewUserRole'
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserByIdModelMeta:
    properties:
      key:
        type: string
        x-go-name: Key
      value:
        type: string
        x-go-name: Value
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserByIdModelParent:
    properties:
      id:
        format: int64
        type: integer
        x-go-name: Id
      nickname:
        type: string
        x-go-name: Nickname
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserFullModel:
    properties:
      authentication_token:
        type: string
        x-go-name: AuthenticationToken
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      current_sign_in_at:
        format: date-time
        type: string
        x-go-name: CurrentSignInAt
      current_sign_in_ip:
        type: string
        x-go-name: CurrentSignInIp
      deleted_at:
        format: date-time
        type: string
        x-go-name: DeletedAt
      email:
        type: string
        x-go-name: Email
      first_name:
        type: string
        x-go-name: FirstName
      history:
        items:
          $ref: '#/definitions/UserHistory'
        type: array
        x-go-name: History
      id:
        format: int64
        type: integer
        x-go-name: Id
      image:
        $ref: '#/definitions/Image'
      lang:
        type: string
        x-go-name: Lang
      last_name:
        type: string
        x-go-name: LastName
      last_sign_in_at:
        format: date-time
        type: string
        x-go-name: LastSignInAt
      last_sign_in_ip:
        type: string
        x-go-name: LastSignInIp
      meta:
        items:
          $ref: '#/definitions/UserByIdModelMeta'
        type: array
        x-go-name: Meta
      nickname:
        type: string
        x-go-name: Nickname
      reset_password_sent_at:
        format: date-time
        type: string
        x-go-name: ResetPasswordSentAt
      role:
        $ref: '#/definitions/RoleModel'
      role_name:
        type: string
        x-go-name: RoleName
      sign_in_count:
        format: int64
        type: integer
        x-go-name: SignInCount
      status:
        type: string
        x-go-name: Status
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      user:
        $ref: '#/definitions/UserByIdModelParent'
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserHistory:
    properties:
      ip:
        type: string
        x-go-name: Ip
      time:
        format: date-time
        type: string
        x-go-name: Time
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserListModel:
    properties:
      Items:
        items:
          $ref: '#/definitions/UserShotModel'
        type: array
      Meta:
        properties:
          limit:
            format: int64
            type: integer
            x-go-name: Limit
          objects_count:
            format: int64
            type: integer
            x-go-name: ObjectsCount
          offset:
            format: int64
            type: integer
            x-go-name: Offset
        type: object
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserShotModel:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      email:
        type: string
        x-go-name: Email
      first_name:
        type: string
        x-go-name: FirstName
      id:
        format: int64
        type: integer
        x-go-name: Id
      image:
        $ref: '#/definitions/Image'
      lang:
        type: string
        x-go-name: Lang
      last_name:
        type: string
        x-go-name: LastName
      nickname:
        type: string
        x-go-name: Nickname
      role:
        $ref: '#/definitions/RoleModel'
      role_name:
        type: string
        x-go-name: RoleName
      status:
        type: string
        x-go-name: Status
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      user:
        $ref: '#/definitions/UserByIdModelParent'
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
  UserUpdateStatusRequest:
    properties:
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/e154/smart-home/api/server/v1/models
info:
  contact:
    email: support@e154.ru
    name: Alex Filippov
    url: https://e154.github.io/smart-home/
  description: This documentation describes APIs found under https://github.com/e154/smart-home
  license:
    name: MIT
    url: https://raw.githubusercontent.com/e154/smart-home/master/LICENSE
  title: Smart home
  version: 1.0.0
paths:
  /:
    get:
      consumes:
      - text/plain
      operationId: index
      produces:
      - text/plain
      responses:
        "200":
          description: Success response
      summary: index page
      tags:
      - index
  /access_list:
    get:
      operationId: authGetAccessList
      responses:
        "200":
          description: OK
          schema:
            properties:
              access_list:
                $ref: '#/definitions/AccessList'
            type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: get user access list
      tags:
      - auth
  /node:
    post:
      operationId: nodeAdd
      parameters:
      - description: node params
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/NewNode'
          type: object
      responses:
        "200":
          $ref: '#/responses/NewObjectSuccess'
        "400":
          $ref: '#/responses/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: add new node
      tags:
      - node
  /node/{id}:
    delete:
      operationId: nodeDeleteById
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/Success'
        "400":
          $ref: '#/responses/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/responses/Error'
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: delete node by id
      tags:
      - node
    get:
      operationId: nodeGetById
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            properties:
              node:
                $ref: '#/definitions/Node'
            type: object
        "400":
          $ref: '#/responses/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/responses/Error'
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: get node by id
      tags:
      - node
    put:
      operationId: nodeUpdateById
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update node params
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/UpdateNode'
          type: object
      responses:
        "200":
          $ref: '#/responses/Success'
        "400":
          $ref: '#/responses/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          $ref: '#/responses/Error'
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: update node by id
      tags:
      - node
  /nodes:
    get:
      operationId: nodeList
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      responses:
        "200":
          $ref: '#/responses/NodeList'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: get node list
      tags:
      - node
  /nodes/search:
    get:
      operationId: nodeSearch
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/NodeSearch'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: search node
      tags:
      - node
  /recovery:
    post:
      operationId: authRecovery
      responses:
        "200":
          $ref: '#/responses/Success'
        "500":
          $ref: '#/responses/Error'
      summary: recovery access
      tags:
      - auth
  /reset:
    post:
      operationId: authReset
      responses:
        "200":
          $ref: '#/responses/Success'
        "500":
          $ref: '#/responses/Error'
      summary: reset access
      tags:
      - auth
  /signin:
    post:
      operationId: authSignin
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthSignInResponse'
        "400":
          $ref: '#/responses/Error'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - BasicAuth: []
      summary: sign in
      tags:
      - auth
  /signout:
    post:
      operationId: authSignout
      responses:
        "200":
          $ref: '#/responses/Success'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          $ref: '#/responses/Error'
      security:
      - ApiKeyAuth: []
      summary: sign out
      tags:
      - auth
produces:
- application/json
responses:
  Error:
    description: Error response
    schema:
      properties:
        code:
          $ref: '#/definitions/ResponseType'
        errors:
          $ref: '#/definitions/ErrorErrors'
        message:
          description: описание ошибки
          type: string
          x-go-name: Message
      type: object
  NewObjectSuccess:
    description: Success with id response
    schema:
      properties:
        id:
          format: int64
          type: integer
          x-go-name: Id
      type: object
  NodeList:
    schema:
      properties:
        items:
          items:
            $ref: '#/definitions/Node'
          type: array
          x-go-name: Items
        meta:
          properties:
            limit:
              format: int64
              type: integer
              x-go-name: Limit
            object_count:
              format: int64
              type: integer
              x-go-name: ObjectCount
            offset:
              format: int64
              type: integer
              x-go-name: Offset
          type: object
          x-go-name: Meta
      type: object
  NodeSearch:
    schema:
      properties:
        nodes:
          items:
            $ref: '#/definitions/Node'
          type: array
          x-go-name: Nodes
      type: object
  Success:
    description: Success response
    schema:
      type: object
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
