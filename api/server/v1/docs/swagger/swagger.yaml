basePath: /api/v1
definitions:
  models.AccessList:
    type: object
  models.AccessListDiff:
    type: object
  models.AuthSignInResponse:
    properties:
      access_token:
        type: string
      current_user:
        $ref: '#/definitions/models.CurrentUserModel'
        type: object
    type: object
  models.CurrentUserModel:
    properties:
      email:
        type: string
      first_name:
        type: string
      history:
        items:
          $ref: '#/definitions/models.UserHistory'
        type: array
      id:
        type: integer
      image:
        $ref: '#/definitions/models.Image'
        type: object
      lang:
        type: string
      last_name:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.UserByIdModelMeta'
        type: array
      nickname:
        type: string
      role:
        $ref: '#/definitions/models.RoleModel'
        type: object
      sign_in_count:
        type: integer
    type: object
  models.Device:
    properties:
      actions:
        items:
          $ref: '#/definitions/models.DeviceAction'
        type: array
      created_at:
        type: string
      description:
        type: string
      device:
        $ref: '#/definitions/models.ParentDevice'
        type: object
      device_id:
        type: integer
      id:
        type: integer
      is_group:
        type: boolean
      name:
        type: string
      node:
        $ref: '#/definitions/models.NodeModel'
        type: object
      properties:
        $ref: '#/definitions/models.DeviceProperties'
        type: object
      states:
        items:
          $ref: '#/definitions/models.DeviceState'
        type: array
      status:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.DeviceAction:
    properties:
      created_at:
        type: string
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceActionDevice'
        type: object
      id:
        type: integer
      name:
        type: string
      script:
        $ref: '#/definitions/models.DeviceActionScript'
        type: object
      updated_at:
        type: string
    type: object
  models.DeviceActionDevice:
    properties:
      id:
        type: integer
    type: object
  models.DeviceActionScript:
    properties:
      id:
        type: integer
    type: object
  models.DeviceListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Device'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.DeviceProperties:
    type: object
  models.DeviceState:
    properties:
      created_at:
        type: string
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceStateDevice'
        type: object
      id:
        type: integer
      system_name:
        type: string
      updated_at:
        type: string
    type: object
  models.DeviceStateDevice:
    properties:
      id:
        type: integer
    type: object
  models.ErrorModel:
    properties:
      code:
        description: code
        type: string
      errors:
        $ref: '#/definitions/models.ErrorModelErrors'
        description: errors
        type: object
      message:
        description: описание ошибки
        type: string
    type: object
  models.ErrorModelErrors:
    type: object
  models.ExecScript:
    properties:
      description:
        type: string
      lang:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.FlowConnectionModel:
    properties:
      created_at:
        type: string
      direction:
        type: string
      element_from:
        type: string
      element_to:
        type: string
      flow_id:
        type: integer
      graph_settings:
        type: string
      name:
        type: string
      point_from:
        type: integer
      point_to:
        type: integer
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.FlowElementModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      flow_id:
        type: integer
      flow_link:
        type: integer
      graph_settings:
        type: string
      name:
        type: string
      prototype_type:
        type: string
      script:
        $ref: '#/definitions/models.Script'
        type: object
      script_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.FlowListModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      workers:
        items:
          type: '&{%!s(token.Pos=316) %!s(*ast.FieldList=&{323 [0xc0001e40c0] 349})
            %!s(bool=false)}'
        type: array
      workflow:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
    type: object
  models.FlowModel:
    properties:
      connections:
        items:
          $ref: '#/definitions/models.FlowConnectionModel'
        type: array
      created_at:
        type: string
      description:
        type: string
      flow_elements:
        items:
          $ref: '#/definitions/models.FlowElementModel'
        type: array
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      workers:
        items:
          $ref: '#/definitions/models.FlowWorkerModel'
        type: array
      workflow:
        $ref: '#/definitions/models.FlowWorkflowModel'
        type: object
      workflow_id:
        type: integer
      workflow_scenario_id:
        type: integer
    type: object
  models.FlowWorkerModel:
    properties:
      created_at:
        type: string
      device_action:
        $ref: '#/definitions/models.DeviceAction'
        type: object
      device_action_id:
        type: integer
      flow_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      time:
        type: string
      updated_at:
        type: string
      workflow:
        $ref: '#/definitions/models.FlowWorkflowModel'
        type: object
      workflow_id:
        type: integer
    type: object
  models.FlowWorkflowModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.Image:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image:
        type: string
      mime_type:
        type: string
      name:
        type: string
      size:
        type: integer
      thumb:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  models.ImageListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.Map:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      options:
        type: string
      updated_at:
        type: string
    type: object
  models.MapListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Map'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.NewDevice:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.ParentDevice'
        type: object
      name:
        type: string
      node:
        $ref: '#/definitions/models.NewDeviceNode'
        type: object
      properties:
        type: object
      status:
        type: string
      type:
        type: string
    type: object
  models.NewDeviceAction:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceActionDevice'
        type: object
      name:
        type: string
      script:
        $ref: '#/definitions/models.DeviceActionScript'
        type: object
    type: object
  models.NewDeviceNode:
    properties:
      id:
        type: integer
    type: object
  models.NewDeviceState:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceStateDevice'
        type: object
      system_name:
        type: string
    type: object
  models.NewFlowModel:
    properties:
      description:
        type: string
      name:
        type: string
      scenario:
        properties:
          id:
            type: integer
        type: object
      status:
        type: string
      workflow:
        properties:
          id:
            type: integer
        type: object
    type: object
  models.NewImage:
    properties:
      image:
        type: string
      mime_type:
        type: string
      name:
        type: string
      size:
        type: integer
      thumb:
        type: string
      title:
        type: string
    type: object
  models.NewMap:
    properties:
      description:
        type: string
      name:
        type: string
      options:
        type: string
    type: object
  models.NewNode:
    properties:
      description:
        type: string
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
    type: object
  models.NewObjectSuccess:
    properties:
      id:
        type: integer
    type: object
  models.NewRole:
    properties:
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
    type: object
  models.NewScript:
    properties:
      description:
        type: string
      lang:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.NewUser:
    properties:
      avatar:
        $ref: '#/definitions/models.NewUserImage'
        type: object
      email:
        type: string
      first_name:
        type: string
      lang:
        type: string
      last_name:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.NewUserMeta'
        type: array
      nickname:
        type: string
      password:
        type: string
      password_repeat:
        type: string
      role:
        $ref: '#/definitions/models.NewUserRole'
        type: object
      status:
        type: string
    type: object
  models.NewUserImage:
    properties:
      id:
        type: integer
    type: object
  models.NewUserMeta:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.NewUserRole:
    properties:
      name:
        type: string
    type: object
  models.NewWorkflow:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  models.NewWorkflowScenario:
    properties:
      name:
        type: string
      system_name:
        type: string
      workflow_id:
        type: integer
    type: object
  models.NodeListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.NodeModel'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.NodeModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.ParentDevice:
    properties:
      id:
        type: integer
    type: object
  models.RedactorConnector:
    properties:
      direction:
        type: string
      end:
        properties:
          object:
            type: string
          point:
            type: integer
        type: object
      flow_type:
        type: string
      id:
        type: string
      start:
        properties:
          object:
            type: string
          point:
            type: integer
        type: object
      title:
        type: string
    type: object
  models.RedactorFlowModel:
    properties:
      connectors:
        items:
          $ref: '#/definitions/models.RedactorConnector'
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      objects:
        items:
          $ref: '#/definitions/models.RedactorObject'
        type: array
      scenario:
        $ref: '#/definitions/models.WorkflowScenario'
        type: object
      status:
        type: string
      update_at:
        type: string
      workers:
        items:
          $ref: '#/definitions/models.WorkerModel'
        type: array
      workflow:
        $ref: '#/definitions/models.RedactorWorkflowModel'
        type: object
    type: object
  models.RedactorObject:
    properties:
      description:
        type: string
      error:
        type: string
      flow_link:
        $ref: '#/definitions/models.FlowModel'
        type: object
      id:
        type: string
      position:
        properties:
          left:
            type: integer
          top:
            type: integer
        type: object
      prototype_type:
        type: string
      script:
        $ref: '#/definitions/models.Script'
        type: object
      status:
        type: string
      title:
        type: string
      type:
        properties:
          action:
            type: string
          end:
            type: object
          name:
            type: string
          start:
            type: object
          status:
            type: string
        type: object
    type: object
  models.RedactorWorkflowModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.ResponseFlow:
    properties:
      flow:
        $ref: '#/definitions/models.FlowModel'
        type: object
    type: object
  models.ResponseFlowList:
    properties:
      items:
        items:
          $ref: '#/definitions/models.FlowListModel'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.ResponseNodeModel:
    properties:
      node:
        $ref: '#/definitions/models.NodeModel'
        type: object
    type: object
  models.ResponseRedactorFlowModel:
    properties:
      flow:
        $ref: '#/definitions/models.RedactorFlowModel'
        type: object
    type: object
  models.ResponseScript:
    properties:
      code:
        type: string
      data:
        properties:
          script:
            $ref: '#/definitions/models.Script'
            type: object
        type: object
    type: object
  models.ResponseScriptExec:
    properties:
      code:
        type: string
      data:
        properties:
          result:
            type: string
        type: object
    type: object
  models.ResponseScriptList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Script'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseSearchFlow:
    properties:
      flows:
        items:
          $ref: '#/definitions/models.FlowModel'
        type: array
    type: object
  models.ResponseSearchNode:
    properties:
      nodes:
        items:
          $ref: '#/definitions/models.NodeModel'
        type: array
    type: object
  models.ResponseSuccess:
    type: object
  models.ResponseWorkflowList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.WorkflowModel'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseWorkflowModel:
    properties:
      code:
        type: string
      data:
        properties:
          workflow:
            $ref: '#/definitions/models.WorkflowModel'
            type: object
        type: object
    type: object
  models.RoleListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.RoleModel'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.RoleModel:
    properties:
      access_list:
        type: object
      children:
        items:
          $ref: '#/definitions/models.RoleModel'
        type: array
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
      updated_at:
        type: string
    type: object
  models.Script:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      lang:
        type: string
      name:
        type: string
      source:
        type: string
      updated_at:
        type: string
    type: object
  models.SearchDeviceActionResponse:
    properties:
      actions:
        items:
          $ref: '#/definitions/models.DeviceAction'
        type: array
    type: object
  models.SearchDeviceResponse:
    properties:
      devices:
        items:
          $ref: '#/definitions/models.Device'
        type: array
    type: object
  models.SearchMapResponse:
    properties:
      nodes:
        items:
          $ref: '#/definitions/models.Map'
        type: array
    type: object
  models.SearchRoleResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/models.RoleModel'
        type: array
    type: object
  models.SearchScriptResponse:
    properties:
      scripts:
        items:
          $ref: '#/definitions/models.Script'
        type: array
    type: object
  models.SearchWorkflowResponse:
    properties:
      workflows:
        items:
          $ref: '#/definitions/models.WorkflowModel'
        type: array
    type: object
  models.SearchWorkflowScenarioResponse:
    properties:
      scenarios:
        items:
          $ref: '#/definitions/models.WorkflowScenario'
        type: array
    type: object
  models.UpdateDevice:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.ParentDevice'
        type: object
      name:
        type: string
      node:
        $ref: '#/definitions/models.NewDeviceNode'
        type: object
      properties:
        type: object
      status:
        type: string
      type:
        type: string
    type: object
  models.UpdateDeviceAction:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceActionDevice'
        type: object
      name:
        type: string
      script:
        $ref: '#/definitions/models.DeviceActionScript'
        type: object
    type: object
  models.UpdateDeviceState:
    properties:
      description:
        type: string
      device:
        $ref: '#/definitions/models.DeviceStateDevice'
        type: object
      system_name:
        type: string
    type: object
  models.UpdateFlowModel:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      scenario:
        properties:
          id:
            type: integer
        type: object
      status:
        type: string
      workflow:
        properties:
          id:
            type: integer
        type: object
    type: object
  models.UpdateImage:
    properties:
      id:
        type: integer
      image:
        type: string
      mime_type:
        type: string
      name:
        type: string
      size:
        type: integer
      thumb:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  models.UpdateMap:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      options:
        type: string
    type: object
  models.UpdateNodeModel:
    properties:
      description:
        type: string
      id:
        type: integer
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
    type: object
  models.UpdateRole:
    properties:
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
    type: object
  models.UpdateScript:
    properties:
      description:
        type: string
      lang:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.UpdateUser:
    properties:
      avatar:
        $ref: '#/definitions/models.NewUserImage'
        type: object
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      lang:
        type: string
      last_name:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.NewUserMeta'
        type: array
      nickname:
        type: string
      password:
        type: string
      password_repeat:
        type: string
      role:
        $ref: '#/definitions/models.NewUserRole'
        type: object
      status:
        type: string
    type: object
  models.UpdateWorkflow:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  models.UserByIdModelMeta:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.UserByIdModelParent:
    properties:
      id:
        type: integer
      nickname:
        type: string
    type: object
  models.UserFullModel:
    properties:
      authentication_token:
        type: string
      created_at:
        type: string
      current_sign_in_at:
        type: string
      current_sign_in_ip:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      history:
        items:
          $ref: '#/definitions/models.UserHistory'
        type: array
      id:
        type: integer
      image:
        $ref: '#/definitions/models.Image'
        type: object
      lang:
        type: string
      last_name:
        type: string
      last_sign_in_at:
        type: string
      last_sign_in_ip:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.UserByIdModelMeta'
        type: array
      nickname:
        type: string
      reset_password_sent_at:
        type: string
      role:
        $ref: '#/definitions/models.RoleModel'
        type: object
      role_name:
        type: string
      sign_in_count:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserByIdModelParent'
        type: object
    type: object
  models.UserHistory:
    properties:
      ip:
        type: string
      time:
        type: string
    type: object
  models.UserListModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.UserShotModel'
        type: array
      meta:
        properties:
          limit:
            type: integer
          objects_count:
            type: integer
          offset:
            type: integer
        type: object
    type: object
  models.UserShotModel:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/models.Image'
        type: object
      lang:
        type: string
      last_name:
        type: string
      nickname:
        type: string
      role:
        $ref: '#/definitions/models.RoleModel'
        type: object
      role_name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserByIdModelParent'
        type: object
    type: object
  models.UserUpdateStatusRequest:
    properties:
      status:
        type: string
    type: object
  models.WorkerModel:
    properties:
      created_at:
        type: string
      device_action:
        $ref: '#/definitions/models.DeviceAction'
        type: object
      device_action_id:
        type: integer
      flow:
        $ref: '#/definitions/models.FlowModel'
        type: object
      flow_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      time:
        type: string
      updated_at:
        type: string
      workflow:
        $ref: '#/definitions/models.WorkflowModel'
        type: object
      workflow_id:
        type: integer
    type: object
  models.WorkflowModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      scenario:
        $ref: '#/definitions/models.WorkflowScenario'
        type: object
      scenarios:
        items:
          $ref: '#/definitions/models.WorkflowScenario'
        type: array
      scripts:
        items:
          $ref: '#/definitions/models.Script'
        type: array
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.WorkflowScenario:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      scripts:
        items:
          $ref: '#/definitions/models.Script'
        type: array
      system_name:
        type: string
      updated_at:
        type: string
      workflow_id:
        type: integer
    type: object
  models.WorkflowScenarioListModel:
    properties:
      scenarios:
        items:
          $ref: '#/definitions/models.WorkflowScenario'
        type: array
    type: object
  models.WorkflowUpdateWorkflowScenario:
    properties:
      workflow_scenario_id:
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact:
    email: support@e154.ru
    name: Alex Filippov
    url: https://e154.github.io/smart-home/
  description: Smart Home System
  license:
    name: MIT License
    url: https://raw.githubusercontent.com/e154/smart-home/master/LICENSE
  title: Smart home API
  version: "1"
paths:
  /:
    get:
      consumes:
      - text/plain
      produces:
      - text/plain
      responses:
        "200": {}
      summary: index page
      tags:
      - index
  /access_list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccessList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user access list
      tags:
      - auth
  /device:
    post:
      consumes:
      - application/json
      parameters:
      - description: device params
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.NewDevice'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new device
      tags:
      - device
  /device/{id}:
    delete:
      consumes:
      - application/json
      description: Delete device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete device
      tags:
      - device
    get:
      consumes:
      - application/json
      description: Get device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show device
      tags:
      - device
    put:
      consumes:
      - application/json
      description: Update device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDevice'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update device
      tags:
      - device
  /device_action:
    post:
      consumes:
      - application/json
      parameters:
      - description: device action params
        in: body
        name: device_action
        required: true
        schema:
          $ref: '#/definitions/models.NewDeviceAction'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceAction'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new device action
      tags:
      - device_action
  /device_action/{id}:
    delete:
      consumes:
      - application/json
      description: Delete device action by id
      parameters:
      - description: DeviceAction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete device action
      tags:
      - device_action
    get:
      consumes:
      - application/json
      description: Get device action by id
      parameters:
      - description: DeviceAction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceAction'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show device action
      tags:
      - device_action
    put:
      consumes:
      - application/json
      description: Update device action by id
      parameters:
      - description: DeviceAction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update device action
        in: body
        name: action
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDeviceAction'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update device action
      tags:
      - device_action
  /device_action1/search:
    get:
      consumes:
      - application/json
      description: Search device_action by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchDeviceActionResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search device_action
      tags:
      - device_action
  /device_actions/{id}:
    get:
      consumes:
      - application/json
      description: Get device list
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceAction'
            type: array
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: DeviceAction list
      tags:
      - device_action
  /device_state:
    post:
      consumes:
      - application/json
      parameters:
      - description: device state params
        in: body
        name: device_state
        required: true
        schema:
          $ref: '#/definitions/models.NewDeviceState'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceState'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new device state
      tags:
      - device_state
  /device_state/{id}:
    delete:
      consumes:
      - application/json
      description: Delete device state by id
      parameters:
      - description: DeviceState ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete device state
      tags:
      - device_state
    get:
      consumes:
      - application/json
      description: Get device state by id
      parameters:
      - description: DeviceState ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceState'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show device state
      tags:
      - device_state
    put:
      consumes:
      - application/json
      description: Update device state by id
      parameters:
      - description: DeviceState ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update device state
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDeviceState'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update device state
      tags:
      - device_state
  /device_states/{id}:
    get:
      consumes:
      - application/json
      description: Get device list
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceState'
            type: array
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: DeviceState list
      tags:
      - device_state
  /devices:
    get:
      consumes:
      - application/json
      description: Get device list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Device list
      tags:
      - device
  /devices/search:
    get:
      consumes:
      - application/json
      description: Search device by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchDeviceResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search device
      tags:
      - device
  /flow:
    post:
      consumes:
      - application/json
      parameters:
      - description: flow params
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/models.NewFlowModel'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new flow
      tags:
      - flow
  /flow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete flow by id
      parameters:
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete flow
      tags:
      - flow
    get:
      consumes:
      - application/json
      description: Get flow by id
      parameters:
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseFlow'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show flow
      tags:
      - flow
    put:
      consumes:
      - application/json
      description: Update flow by id
      parameters:
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update flow
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/models.UpdateFlowModel'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseFlow'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update flow
      tags:
      - flow
  /flow/{id}/redactor:
    get:
      consumes:
      - application/json
      description: Get flow by id
      parameters:
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRedactorFlowModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show flow
      tags:
      - flow
    put:
      consumes:
      - application/json
      description: Update flow by id
      parameters:
      - description: Flow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update flow
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/models.RedactorFlowModel'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRedactorFlowModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update flow
      tags:
      - flow
  /flows:
    get:
      consumes:
      - application/json
      description: Get flow list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseFlowList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Flow list
      tags:
      - flow
  /flows/search:
    get:
      consumes:
      - application/json
      description: Search flow by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSearchFlow'
            type: object
        "401":
          description: Unauthorized
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search flow
      tags:
      - flow
  /image:
    post:
      consumes:
      - application/json
      parameters:
      - description: image params
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/models.NewImage'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new image
      tags:
      - image
  /image/{id}:
    delete:
      consumes:
      - application/json
      description: Delete image by id
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete image
      tags:
      - image
    get:
      consumes:
      - application/json
      description: Get image by id
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show image
      tags:
      - image
    put:
      consumes:
      - application/json
      description: Update image by id
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update image
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/models.UpdateImage'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update image
      tags:
      - image
  /images:
    get:
      consumes:
      - application/json
      description: Get image list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ImageListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Image list
      tags:
      - image
  /map:
    post:
      consumes:
      - application/json
      parameters:
      - description: map params
        in: body
        name: map
        required: true
        schema:
          $ref: '#/definitions/models.NewMap'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new map
      tags:
      - map
  /map/{id}:
    delete:
      consumes:
      - application/json
      description: Delete map by id
      parameters:
      - description: Map ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete map
      tags:
      - map
    get:
      consumes:
      - application/json
      description: Get map by id
      parameters:
      - description: Map ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Map'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show map
      tags:
      - map
    put:
      consumes:
      - application/json
      description: Update map by id
      parameters:
      - description: Map ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update map
        in: body
        name: map
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMap'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update map
      tags:
      - map
  /maps:
    get:
      consumes:
      - application/json
      description: Get map list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MapListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Map list
      tags:
      - map
  /maps/search:
    get:
      consumes:
      - application/json
      description: Search map by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchMapResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search map
      tags:
      - map
  /node:
    post:
      consumes:
      - application/json
      parameters:
      - description: node params
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/models.NewNode'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new node
      tags:
      - node
  /node/{id}:
    delete:
      consumes:
      - application/json
      description: Delete node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete node
      tags:
      - node
    get:
      consumes:
      - application/json
      description: Get node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseNodeModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show node
      tags:
      - node
    put:
      consumes:
      - application/json
      description: Update node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update node
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNodeModel'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update node
      tags:
      - node
  /nodes:
    get:
      consumes:
      - application/json
      description: Get node list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NodeListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Node list
      tags:
      - node
  /nodes/search:
    get:
      consumes:
      - application/json
      description: Search node by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSearchNode'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search node
      tags:
      - node
  /recovery:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Recovery access
      tags:
      - auth
  /reset:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Reset password
      tags:
      - auth
  /role:
    post:
      consumes:
      - application/json
      parameters:
      - description: role params
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.NewRole'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new role
      tags:
      - role
  /role/{name}:
    delete:
      consumes:
      - application/json
      description: Delete role by name
      parameters:
      - description: RoleModel name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete role
      tags:
      - role
    get:
      consumes:
      - application/json
      description: Get role by name
      parameters:
      - description: RoleModel name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show role
      tags:
      - role
    put:
      consumes:
      - application/json
      description: Update role by name
      parameters:
      - description: RoleModel name
        in: path
        name: name
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRole'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update role
      tags:
      - role
  /role/{name}/access_list:
    get:
      consumes:
      - application/json
      description: Get access list
      parameters:
      - description: RoleModel name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccessList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: get role access list
      tags:
      - role
    put:
      consumes:
      - application/json
      description: Update access list
      parameters:
      - description: RoleModel name
        in: path
        name: name
        required: true
        type: string
      - description: permission
        in: body
        name: diff
        required: true
        schema:
          $ref: '#/definitions/models.AccessListDiff'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: update role access list
      tags:
      - role
  /roles:
    get:
      consumes:
      - application/json
      description: Get role list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: name
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: RoleModel list
      tags:
      - role
  /roles/search:
    get:
      consumes:
      - application/json
      description: Search role by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchRoleResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "401":
          description: Unauthorized
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search role
      tags:
      - role
  /script:
    post:
      consumes:
      - application/json
      parameters:
      - description: script params
        in: body
        name: script
        required: true
        schema:
          $ref: '#/definitions/models.NewScript'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new script
      tags:
      - script
  /script/{id}:
    delete:
      consumes:
      - application/json
      description: Delete script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete script
      tags:
      - script
    get:
      consumes:
      - application/json
      description: Get script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScript'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show script
      tags:
      - script
    put:
      consumes:
      - application/json
      description: Update script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update script
        in: body
        name: script
        required: true
        schema:
          $ref: '#/definitions/models.UpdateScript'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update script
      tags:
      - script
  /script/{id}/exec:
    post:
      consumes:
      - application/json
      description: Execute script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScriptExec'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Execute script
      tags:
      - script
  /script/{id}/exec_src:
    post:
      consumes:
      - application/json
      description: Execute script by id
      parameters:
      - description: Exec script
        in: body
        name: script
        required: true
        schema:
          $ref: '#/definitions/models.ExecScript'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScriptExec'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Execute script
      tags:
      - script
  /scripts:
    get:
      consumes:
      - application/json
      description: Get script list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScriptList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Script list
      tags:
      - script
  /scripts/search:
    get:
      consumes:
      - application/json
      description: Search device by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchScriptResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search device
      tags:
      - script
  /signin:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthSignInResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - BasicAuth: []
      summary: Add new auth
      tags:
      - auth
  /signout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Sign out
      tags:
      - auth
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: user params
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.NewUser'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserFullModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserFullModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
  /user/{id}/update_status:
    put:
      consumes:
      - application/json
      description: Update user status
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateStatusRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user status
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: Get user list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: User list
      tags:
      - user
  /workflow:
    get:
      consumes:
      - application/json
      description: Get workflow list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseWorkflowList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Workflow list
      tags:
      - workflow
    post:
      consumes:
      - application/json
      parameters:
      - description: workflow params
        in: body
        name: workflow
        required: true
        schema:
          $ref: '#/definitions/models.NewWorkflow'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new workflow
      tags:
      - workflow
  /workflow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete workflow
      tags:
      - workflow
    get:
      consumes:
      - application/json
      description: Get workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseWorkflowModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show workflow
      tags:
      - workflow
    put:
      consumes:
      - application/json
      description: Update workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update workflow
        in: body
        name: workflow
        required: true
        schema:
          $ref: '#/definitions/models.UpdateWorkflow'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update workflow
      tags:
      - workflow
  /workflow/{id}/scenario:
    post:
      consumes:
      - application/json
      parameters:
      - description: workflow_scenario params
        in: body
        name: workflow_scenario
        required: true
        schema:
          $ref: '#/definitions/models.NewWorkflowScenario'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add new workflow_scenario
      tags:
      - workflow_scenario
  /workflow/{id}/scenario/{scenario_id}:
    delete:
      consumes:
      - application/json
      description: Delete workflow_scenario by id
      parameters:
      - description: WorkflowScenario ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete workflow_scenario
      tags:
      - workflow_scenario
    get:
      consumes:
      - application/json
      description: Get workflow_scenario by id
      parameters:
      - description: WorkflowScenario ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkflowScenario'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show workflow_scenario
      tags:
      - workflow_scenario
    put:
      consumes:
      - application/json
      description: Update workflow_scenario by id
      parameters:
      - description: WorkflowScenario ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update workflow_scenario
        in: body
        name: workflow_scenario
        required: true
        schema:
          $ref: '#/definitions/models.WorkflowUpdateWorkflowScenario'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update workflow_scenario
      tags:
      - workflow_scenario
  /workflow/{id}/scenarios:
    get:
      consumes:
      - application/json
      description: Get workflow_scenario list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkflowScenarioListModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: WorkflowScenario list
      tags:
      - workflow_scenario
  /workflow/{id}/scenarios/search:
    get:
      consumes:
      - application/json
      description: Search workflow by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchWorkflowScenarioResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search workflow
      tags:
      - workflow
  /workflow/{id}/update_scenario:
    put:
      consumes:
      - application/json
      description: Update workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update workflow scenario
        in: body
        name: scenario
        required: true
        schema:
          $ref: '#/definitions/models.WorkflowUpdateWorkflowScenario'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update workflow scenario
      tags:
      - workflow
  /workflows/search:
    get:
      consumes:
      - application/json
      description: Search workflow by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchWorkflowResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Search workflow
      tags:
      - workflow
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
