basePath: /api/v1
definitions:
  models.AccessList:
    type: object
  models.AccessListDiff:
    type: object
  models.Device:
    properties:
      address:
        type: integer
      baud:
        type: integer
      created_at:
        type: string
      description:
        type: string
      device_id:
        type: integer
      id:
        type: integer
      is_group:
        type: boolean
      name:
        type: string
      node_id:
        type: integer
      sleep:
        type: integer
      status:
        type: string
      stop_bite:
        type: integer
      timeout:
        type: integer
      tty:
        type: string
      updated_at:
        type: string
    type: object
  models.ErrorModel:
    properties:
      code:
        description: code
        type: string
      errors:
        $ref: '#/definitions/models.ErrorModelErrors'
        description: errors
        type: object
      message:
        description: описание ошибки
        type: string
    type: object
  models.ErrorModelErrors:
    type: object
  models.Image:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image:
        type: string
      mime_type:
        type: string
      name:
        type: string
      size:
        type: integer
      thumb:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  models.NewDevice:
    properties:
      address:
        type: integer
      baud:
        type: integer
      description:
        type: string
      device_id:
        type: integer
      id:
        type: integer
      is_group:
        type: boolean
      name:
        type: string
      node_id:
        type: integer
      sleep:
        type: integer
      status:
        type: string
      stop_bite:
        type: integer
      timeout:
        type: integer
      tty:
        type: string
    type: object
  models.NewNode:
    properties:
      description:
        type: string
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
    type: object
  models.NewObjectSuccess:
    properties:
      code:
        type: string
      data:
        properties:
          id:
            type: integer
        type: object
    type: object
  models.NewRole:
    properties:
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
    type: object
  models.NewScript:
    properties:
      description:
        type: string
      lang:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.NewUser:
    properties:
      avatar:
        $ref: '#/definitions/models.NewUserImage'
        type: object
      email:
        type: string
      first_name:
        type: string
      lang:
        type: string
      last_name:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.NewUserMeta'
        type: array
      nickname:
        type: string
      password:
        type: string
      password_repeat:
        type: string
      role:
        $ref: '#/definitions/models.NewUserRole'
        type: object
      status:
        type: string
    type: object
  models.NewUserImage:
    properties:
      id:
        type: integer
    type: object
  models.NewUserMeta:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.NewUserRole:
    properties:
      name:
        type: string
    type: object
  models.NewWorkflow:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  models.Node:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.Permission:
    properties:
      id:
        type: integer
      level_name:
        type: string
      package_name:
        type: string
    type: object
  models.ResponseDevice:
    properties:
      code:
        type: string
      data:
        properties:
          device:
            $ref: '#/definitions/models.Device'
            type: object
        type: object
    type: object
  models.ResponseDeviceList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Device'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseNode:
    properties:
      code:
        type: string
      data:
        properties:
          node:
            $ref: '#/definitions/models.Node'
            type: object
        type: object
    type: object
  models.ResponseNodeList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Node'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseRole:
    properties:
      code:
        type: string
      data:
        properties:
          role:
            $ref: '#/definitions/models.Role'
            type: object
        type: object
    type: object
  models.ResponseRoleList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Role'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseScript:
    properties:
      code:
        type: string
      data:
        properties:
          script:
            $ref: '#/definitions/models.Script'
            type: object
        type: object
    type: object
  models.ResponseScriptExec:
    properties:
      code:
        type: string
      data:
        properties:
          result:
            type: string
        type: object
    type: object
  models.ResponseScriptList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Script'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.ResponseSuccess:
    properties:
      code:
        type: string
      data:
        type: object
    type: object
  models.ResponseWorkflow:
    properties:
      code:
        type: string
      data:
        properties:
          workflow:
            $ref: '#/definitions/models.Workflow'
            type: object
        type: object
    type: object
  models.ResponseWorkflowList:
    properties:
      code:
        type: string
      data:
        properties:
          items:
            items:
              $ref: '#/definitions/models.Workflow'
            type: array
          limit:
            type: integer
          offset:
            type: integer
          total:
            type: integer
        type: object
    type: object
  models.Role:
    properties:
      access_list:
        type: object
      children:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
      permissions:
        items:
          $ref: '#/definitions/models.Permission'
        type: array
      updated_at:
        type: string
    type: object
  models.Script:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      lang:
        type: string
      name:
        type: string
      source:
        type: string
      updated_at:
        type: string
    type: object
  models.SearchRoleResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
    type: object
  models.UpdateDevice:
    properties:
      address:
        type: integer
      baud:
        type: integer
      description:
        type: string
      device_id:
        type: integer
      id:
        type: integer
      is_group:
        type: boolean
      name:
        type: string
      node_id:
        type: integer
      sleep:
        type: integer
      status:
        type: string
      stop_bite:
        type: integer
      timeout:
        type: integer
      tty:
        type: string
    type: object
  models.UpdateNode:
    properties:
      description:
        type: string
      ip:
        type: string
      name:
        type: string
      port:
        type: integer
      status:
        type: string
    type: object
  models.UpdateRole:
    properties:
      description:
        type: string
      name:
        type: string
      parent:
        properties:
          name:
            type: string
        type: object
    type: object
  models.UpdateScript:
    properties:
      description:
        type: string
      lang:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.UpdateWorkflow:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  models.UserByIdModel:
    properties:
      authentication_token:
        type: string
      created_at:
        type: string
      current_sign_in_at:
        type: string
      current_sign_in_ip:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      history:
        items:
          $ref: '#/definitions/models.UserByIdModelUserHistory'
        type: array
      id:
        type: integer
      image:
        $ref: '#/definitions/models.Image'
        type: object
      lang:
        type: string
      last_name:
        type: string
      last_sign_in_at:
        type: string
      last_sign_in_ip:
        type: string
      meta:
        items:
          $ref: '#/definitions/models.UserByIdModelMeta'
        type: array
      nickname:
        type: string
      reset_password_sent_at:
        type: string
      role:
        $ref: '#/definitions/models.Role'
        type: object
      role_name:
        type: string
      sign_in_count:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserByIdModelParent'
        type: object
    type: object
  models.UserByIdModelMeta:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.UserByIdModelParent:
    properties:
      id:
        type: integer
    type: object
  models.UserByIdModelUserHistory:
    properties:
      ip:
        type: string
      time:
        type: string
    type: object
  models.Workflow:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      scenario:
        $ref: '#/definitions/models.WorkflowScenario'
        type: object
      scenarios:
        items:
          $ref: '#/definitions/models.WorkflowScenario'
        type: array
      scripts:
        items:
          $ref: '#/definitions/models.Script'
        type: array
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.WorkflowScenario:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      scripts:
        items:
          $ref: '#/definitions/models.Script'
        type: array
      system_name:
        type: string
      updated_at:
        type: string
      workflow_id:
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact:
    email: support@e154.ru
    name: Alex Filippov
    url: https://e154.github.io/smart-home/
  description: Smart Home System
  license:
    name: MIT License
    url: https://raw.githubusercontent.com/e154/smart-home/master/LICENSE
  title: Smart home API
  version: "1"
paths:
  /:
    get:
      consumes:
      - text/plain
      produces:
      - text/plain
      responses:
        "200": {}
      summary: index page
      tags:
      - index
  /device:
    get:
      consumes:
      - application/json
      description: Get device list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDeviceList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Device list
      tags:
      - device
    post:
      consumes:
      - application/json
      parameters:
      - description: device params
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.NewDevice'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new device
      tags:
      - device
  /device/{id}:
    delete:
      consumes:
      - application/json
      description: Delete device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Delete device
      tags:
      - device
    get:
      consumes:
      - application/json
      description: Get device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDevice'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show device
      tags:
      - device
    put:
      consumes:
      - application/json
      description: Update device by id
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDevice'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Update device
      tags:
      - device
  /node:
    get:
      consumes:
      - application/json
      description: Get node list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseNodeList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Node list
      tags:
      - node
    post:
      consumes:
      - application/json
      parameters:
      - description: node params
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/models.NewNode'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new node
      tags:
      - node
  /node/{id}:
    delete:
      consumes:
      - application/json
      description: Delete node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Delete node
      tags:
      - node
    get:
      consumes:
      - application/json
      description: Get node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseNode'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show node
      tags:
      - node
    put:
      consumes:
      - application/json
      description: Update node by id
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update node
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNode'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Update node
      tags:
      - node
  /role:
    post:
      consumes:
      - application/json
      parameters:
      - description: role params
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.NewRole'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new role
      tags:
      - role
  /role/{name}:
    delete:
      consumes:
      - application/json
      description: Delete role by name
      parameters:
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Delete role
      tags:
      - role
    get:
      consumes:
      - application/json
      description: Get role by name
      parameters:
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRole'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show role
      tags:
      - role
    put:
      consumes:
      - application/json
      description: Update role by name
      parameters:
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRole'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Update role
      tags:
      - role
  /role/{name}/access_list:
    get:
      consumes:
      - application/json
      description: Get access list
      parameters:
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccessList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: get role access list
      tags:
      - role
    put:
      consumes:
      - application/json
      description: Update access list
      parameters:
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: permission
        in: body
        name: diff
        required: true
        schema:
          $ref: '#/definitions/models.AccessListDiff'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRole'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: update role access list
      tags:
      - role
  /roles:
    get:
      consumes:
      - application/json
      description: Get role list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: name
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRoleList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Role list
      tags:
      - role
  /roles/search:
    get:
      consumes:
      - application/json
      description: Search role by name
      parameters:
      - description: query
        in: query
        name: query
        type: string
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchRoleResponse'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Search role
      tags:
      - role
  /script:
    get:
      consumes:
      - application/json
      description: Get script list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScriptList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Script list
      tags:
      - script
    post:
      consumes:
      - application/json
      parameters:
      - description: script params
        in: body
        name: script
        required: true
        schema:
          $ref: '#/definitions/models.NewScript'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new script
      tags:
      - script
  /script/{id}:
    delete:
      consumes:
      - application/json
      description: Delete script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Delete script
      tags:
      - script
    get:
      consumes:
      - application/json
      description: Get script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScript'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show script
      tags:
      - script
    put:
      consumes:
      - application/json
      description: Update script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update script
        in: body
        name: script
        required: true
        schema:
          $ref: '#/definitions/models.UpdateScript'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Update script
      tags:
      - script
  /script/{id}/exec:
    post:
      consumes:
      - application/json
      description: Execute script by id
      parameters:
      - description: Script ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseScriptExec'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Execute script
      tags:
      - script
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: user params
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.NewUser'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new user
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserByIdModel'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show user
      tags:
      - user
  /workflow:
    get:
      consumes:
      - application/json
      description: Get workflow list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      - default: DESC
        description: order
        in: query
        name: order
        type: string
      - default: id
        description: sort_by
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseWorkflowList'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Workflow list
      tags:
      - workflow
    post:
      consumes:
      - application/json
      parameters:
      - description: workflow params
        in: body
        name: workflow
        required: true
        schema:
          $ref: '#/definitions/models.NewWorkflow'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewObjectSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Add new workflow
      tags:
      - workflow
  /workflow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Delete workflow
      tags:
      - workflow
    get:
      consumes:
      - application/json
      description: Get workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseWorkflow'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Show workflow
      tags:
      - workflow
    put:
      consumes:
      - application/json
      description: Update workflow by id
      parameters:
      - description: Workflow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update workflow
        in: body
        name: workflow
        required: true
        schema:
          $ref: '#/definitions/models.UpdateWorkflow'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
            type: object
        "400":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "404":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
        "500":
          description: some error
          schema:
            $ref: '#/definitions/models.ErrorModel'
            type: object
      summary: Update workflow
      tags:
      - workflow
swagger: "2.0"
