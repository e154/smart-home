// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Server API",
    "title": "Server API",
    "termsOfService": "https://e154.ru/",
    "contact": {
      "email": "filippov.a@e154.ru"
    },
    "version": "0.0.1"
  },
  "basePath": "/api/v1",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "index"
        ],
        "operationId": "index",
        "responses": {
          "200": {
            "description": "server api"
          },
          "default": {
            "description": "какая-то ошибка",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ResponseType"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "description": "тип ишибки",
                "type": "string"
              },
              "field": {
                "description": "поле вызвавшее ошибку",
                "type": "string"
              },
              "message": {
                "description": "описание",
                "type": "string"
              }
            }
          }
        },
        "message": {
          "description": "описание ошибки",
          "type": "string"
        }
      }
    },
    "ResponseType": {
      "description": "Тип ответов",
      "type": "string",
      "enum": [
        "success",
        "business_conflict",
        "unprocessable_entity",
        "bad_parameters",
        "internal_error",
        "not_found",
        "security_error",
        "permission_error"
      ]
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  }
}`))
}
