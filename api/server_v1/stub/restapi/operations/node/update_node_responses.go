// Code generated by go-swagger; DO NOT EDIT.

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/e154/smart-home/api/server_v1/stub/models"
)

// UpdateNodeOKCode is the HTTP code returned for type UpdateNodeOK
const UpdateNodeOKCode int = 200

/*UpdateNodeOK success

swagger:response updateNodeOK
*/
type UpdateNodeOK struct {

	/*
	  In: Body
	*/
	Payload *models.UpdateNodeOKBody `json:"body,omitempty"`
}

// NewUpdateNodeOK creates UpdateNodeOK with default headers values
func NewUpdateNodeOK() *UpdateNodeOK {
	return &UpdateNodeOK{}
}

// WithPayload adds the payload to the update node o k response
func (o *UpdateNodeOK) WithPayload(payload *models.UpdateNodeOKBody) *UpdateNodeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update node o k response
func (o *UpdateNodeOK) SetPayload(payload *models.UpdateNodeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateNodeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateNodeDefault error

swagger:response updateNodeDefault
*/
type UpdateNodeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdateNodeDefault creates UpdateNodeDefault with default headers values
func NewUpdateNodeDefault(code int) *UpdateNodeDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateNodeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update node default response
func (o *UpdateNodeDefault) WithStatusCode(code int) *UpdateNodeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update node default response
func (o *UpdateNodeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update node default response
func (o *UpdateNodeDefault) WithPayload(payload *models.ErrorModel) *UpdateNodeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update node default response
func (o *UpdateNodeDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateNodeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
