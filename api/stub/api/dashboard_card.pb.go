// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dashboard_card.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DashboardCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Height         int32                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Width          int32                  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Background     *string                `protobuf:"bytes,5,opt,name=background,proto3,oneof" json:"background,omitempty"`
	Weight         int32                  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Enabled        bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DashboardTabId int64                  `protobuf:"varint,8,opt,name=dashboard_tab_id,json=dashboardTabId,proto3" json:"dashboard_tab_id,omitempty"`
	Payload        []byte                 `protobuf:"bytes,9,opt,name=payload,proto3" json:"payload,omitempty"`
	Items          []*DashboardCardItem   `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	Entities       map[string]*Entity     `protobuf:"bytes,11,rep,name=entities,proto3" json:"entities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hidden         bool                   `protobuf:"varint,12,opt,name=hidden,proto3" json:"hidden,omitempty"`
	EntityId       *string                `protobuf:"bytes,13,opt,name=entity_id,json=entityId,proto3,oneof" json:"entity_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DashboardCard) Reset() {
	*x = DashboardCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardCard) ProtoMessage() {}

func (x *DashboardCard) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardCard.ProtoReflect.Descriptor instead.
func (*DashboardCard) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{0}
}

func (x *DashboardCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashboardCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DashboardCard) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DashboardCard) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DashboardCard) GetBackground() string {
	if x != nil && x.Background != nil {
		return *x.Background
	}
	return ""
}

func (x *DashboardCard) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *DashboardCard) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DashboardCard) GetDashboardTabId() int64 {
	if x != nil {
		return x.DashboardTabId
	}
	return 0
}

func (x *DashboardCard) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DashboardCard) GetItems() []*DashboardCardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DashboardCard) GetEntities() map[string]*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *DashboardCard) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *DashboardCard) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

func (x *DashboardCard) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DashboardCard) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type NewDashboardCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Height         int32   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Width          int32   `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Background     *string `protobuf:"bytes,5,opt,name=background,proto3,oneof" json:"background,omitempty"`
	Weight         int32   `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Enabled        bool    `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DashboardTabId int64   `protobuf:"varint,8,opt,name=dashboard_tab_id,json=dashboardTabId,proto3" json:"dashboard_tab_id,omitempty"`
	Payload        []byte  `protobuf:"bytes,9,opt,name=payload,proto3" json:"payload,omitempty"`
	Hidden         bool    `protobuf:"varint,10,opt,name=hidden,proto3" json:"hidden,omitempty"`
	EntityId       *string `protobuf:"bytes,11,opt,name=entity_id,json=entityId,proto3,oneof" json:"entity_id,omitempty"`
}

func (x *NewDashboardCardRequest) Reset() {
	*x = NewDashboardCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDashboardCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDashboardCardRequest) ProtoMessage() {}

func (x *NewDashboardCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDashboardCardRequest.ProtoReflect.Descriptor instead.
func (*NewDashboardCardRequest) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{1}
}

func (x *NewDashboardCardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewDashboardCardRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *NewDashboardCardRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *NewDashboardCardRequest) GetBackground() string {
	if x != nil && x.Background != nil {
		return *x.Background
	}
	return ""
}

func (x *NewDashboardCardRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *NewDashboardCardRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NewDashboardCardRequest) GetDashboardTabId() int64 {
	if x != nil {
		return x.DashboardTabId
	}
	return 0
}

func (x *NewDashboardCardRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *NewDashboardCardRequest) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *NewDashboardCardRequest) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

type UpdateDashboardCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Height         int32                              `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Width          int32                              `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Background     *string                            `protobuf:"bytes,5,opt,name=background,proto3,oneof" json:"background,omitempty"`
	Weight         int32                              `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Enabled        bool                               `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DashboardTabId int64                              `protobuf:"varint,8,opt,name=dashboard_tab_id,json=dashboardTabId,proto3" json:"dashboard_tab_id,omitempty"`
	Payload        []byte                             `protobuf:"bytes,9,opt,name=payload,proto3" json:"payload,omitempty"`
	Items          []*UpdateDashboardCardRequest_Item `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	Hidden         bool                               `protobuf:"varint,11,opt,name=hidden,proto3" json:"hidden,omitempty"`
	EntityId       *string                            `protobuf:"bytes,12,opt,name=entity_id,json=entityId,proto3,oneof" json:"entity_id,omitempty"`
}

func (x *UpdateDashboardCardRequest) Reset() {
	*x = UpdateDashboardCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDashboardCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardCardRequest) ProtoMessage() {}

func (x *UpdateDashboardCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardCardRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardCardRequest) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDashboardCardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDashboardCardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDashboardCardRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UpdateDashboardCardRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UpdateDashboardCardRequest) GetBackground() string {
	if x != nil && x.Background != nil {
		return *x.Background
	}
	return ""
}

func (x *UpdateDashboardCardRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateDashboardCardRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateDashboardCardRequest) GetDashboardTabId() int64 {
	if x != nil {
		return x.DashboardTabId
	}
	return 0
}

func (x *UpdateDashboardCardRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpdateDashboardCardRequest) GetItems() []*UpdateDashboardCardRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpdateDashboardCardRequest) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *UpdateDashboardCardRequest) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

type GetDashboardCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDashboardCardRequest) Reset() {
	*x = GetDashboardCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashboardCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardCardRequest) ProtoMessage() {}

func (x *GetDashboardCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardCardRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardCardRequest) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{3}
}

func (x *GetDashboardCardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDashboardCardListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DashboardCard `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Meta  *Meta            `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetDashboardCardListResult) Reset() {
	*x = GetDashboardCardListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashboardCardListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardCardListResult) ProtoMessage() {}

func (x *GetDashboardCardListResult) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardCardListResult.ProtoReflect.Descriptor instead.
func (*GetDashboardCardListResult) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{4}
}

func (x *GetDashboardCardListResult) GetItems() []*DashboardCard {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetDashboardCardListResult) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DeleteDashboardCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDashboardCardRequest) Reset() {
	*x = DeleteDashboardCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDashboardCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDashboardCardRequest) ProtoMessage() {}

func (x *DeleteDashboardCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDashboardCardRequest.ProtoReflect.Descriptor instead.
func (*DeleteDashboardCardRequest) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDashboardCardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDashboardCardRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type     string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Weight   int32    `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Enabled  bool     `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EntityId *string  `protobuf:"bytes,7,opt,name=entity_id,json=entityId,proto3,oneof" json:"entity_id,omitempty"`
	Payload  []byte   `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Hidden   bool     `protobuf:"varint,9,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Frozen   bool     `protobuf:"varint,10,opt,name=frozen,proto3" json:"frozen,omitempty"`
	ShowOn   []string `protobuf:"bytes,11,rep,name=show_on,json=showOn,proto3" json:"show_on,omitempty"`
	HideOn   []string `protobuf:"bytes,12,rep,name=hide_on,json=hideOn,proto3" json:"hide_on,omitempty"`
}

func (x *UpdateDashboardCardRequest_Item) Reset() {
	*x = UpdateDashboardCardRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dashboard_card_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDashboardCardRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardCardRequest_Item) ProtoMessage() {}

func (x *UpdateDashboardCardRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_dashboard_card_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardCardRequest_Item.ProtoReflect.Descriptor instead.
func (*UpdateDashboardCardRequest_Item) Descriptor() ([]byte, []int) {
	return file_dashboard_card_proto_rawDescGZIP(), []int{2, 0}
}

func (x *UpdateDashboardCardRequest_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDashboardCardRequest_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDashboardCardRequest_Item) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateDashboardCardRequest_Item) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateDashboardCardRequest_Item) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateDashboardCardRequest_Item) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

func (x *UpdateDashboardCardRequest_Item) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpdateDashboardCardRequest_Item) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *UpdateDashboardCardRequest_Item) GetFrozen() bool {
	if x != nil {
		return x.Frozen
	}
	return false
}

func (x *UpdateDashboardCardRequest_Item) GetShowOn() []string {
	if x != nil {
		return x.ShowOn
	}
	return nil
}

func (x *UpdateDashboardCardRequest_Item) GetHideOn() []string {
	if x != nil {
		return x.HideOn
	}
	return nil
}

var File_dashboard_card_proto protoreflect.FileDescriptor

var file_dashboard_card_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x81, 0x05, 0x0a, 0x0d, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3c, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x48, 0x0a,
	0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x22, 0xcf, 0x02, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x22, 0xbf, 0x05, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x61,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x9e, 0x02, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x77, 0x4f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x69, 0x64, 0x65, 0x4f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x32, 0x9b, 0x06, 0x0a, 0x14, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x78, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62,
	0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x00, 0x12, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0x34, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x12, 0x62,
	0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x78, 0x0a, 0x13,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0x39, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dashboard_card_proto_rawDescOnce sync.Once
	file_dashboard_card_proto_rawDescData = file_dashboard_card_proto_rawDesc
)

func file_dashboard_card_proto_rawDescGZIP() []byte {
	file_dashboard_card_proto_rawDescOnce.Do(func() {
		file_dashboard_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_dashboard_card_proto_rawDescData)
	})
	return file_dashboard_card_proto_rawDescData
}

var file_dashboard_card_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dashboard_card_proto_goTypes = []interface{}{
	(*DashboardCard)(nil),                   // 0: api.DashboardCard
	(*NewDashboardCardRequest)(nil),         // 1: api.NewDashboardCardRequest
	(*UpdateDashboardCardRequest)(nil),      // 2: api.UpdateDashboardCardRequest
	(*GetDashboardCardRequest)(nil),         // 3: api.GetDashboardCardRequest
	(*GetDashboardCardListResult)(nil),      // 4: api.GetDashboardCardListResult
	(*DeleteDashboardCardRequest)(nil),      // 5: api.DeleteDashboardCardRequest
	nil,                                     // 6: api.DashboardCard.EntitiesEntry
	(*UpdateDashboardCardRequest_Item)(nil), // 7: api.UpdateDashboardCardRequest.Item
	(*DashboardCardItem)(nil),               // 8: api.DashboardCardItem
	(*timestamppb.Timestamp)(nil),           // 9: google.protobuf.Timestamp
	(*Meta)(nil),                            // 10: api.Meta
	(*Entity)(nil),                          // 11: api.Entity
	(*PaginationRequest)(nil),               // 12: api.PaginationRequest
	(*emptypb.Empty)(nil),                   // 13: google.protobuf.Empty
}
var file_dashboard_card_proto_depIdxs = []int32{
	8,  // 0: api.DashboardCard.items:type_name -> api.DashboardCardItem
	6,  // 1: api.DashboardCard.entities:type_name -> api.DashboardCard.EntitiesEntry
	9,  // 2: api.DashboardCard.created_at:type_name -> google.protobuf.Timestamp
	9,  // 3: api.DashboardCard.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 4: api.UpdateDashboardCardRequest.items:type_name -> api.UpdateDashboardCardRequest.Item
	0,  // 5: api.GetDashboardCardListResult.items:type_name -> api.DashboardCard
	10, // 6: api.GetDashboardCardListResult.meta:type_name -> api.Meta
	11, // 7: api.DashboardCard.EntitiesEntry.value:type_name -> api.Entity
	1,  // 8: api.DashboardCardService.AddDashboardCard:input_type -> api.NewDashboardCardRequest
	2,  // 9: api.DashboardCardService.UpdateDashboardCard:input_type -> api.UpdateDashboardCardRequest
	3,  // 10: api.DashboardCardService.GetDashboardCardById:input_type -> api.GetDashboardCardRequest
	12, // 11: api.DashboardCardService.GetDashboardCardList:input_type -> api.PaginationRequest
	5,  // 12: api.DashboardCardService.DeleteDashboardCard:input_type -> api.DeleteDashboardCardRequest
	0,  // 13: api.DashboardCardService.ImportDashboardCard:input_type -> api.DashboardCard
	0,  // 14: api.DashboardCardService.AddDashboardCard:output_type -> api.DashboardCard
	0,  // 15: api.DashboardCardService.UpdateDashboardCard:output_type -> api.DashboardCard
	0,  // 16: api.DashboardCardService.GetDashboardCardById:output_type -> api.DashboardCard
	4,  // 17: api.DashboardCardService.GetDashboardCardList:output_type -> api.GetDashboardCardListResult
	13, // 18: api.DashboardCardService.DeleteDashboardCard:output_type -> google.protobuf.Empty
	0,  // 19: api.DashboardCardService.ImportDashboardCard:output_type -> api.DashboardCard
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dashboard_card_proto_init() }
func file_dashboard_card_proto_init() {
	if File_dashboard_card_proto != nil {
		return
	}
	file_pagination_proto_init()
	file_dashboard_card_item_proto_init()
	file_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dashboard_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDashboardCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDashboardCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashboardCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDashboardCardListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDashboardCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dashboard_card_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDashboardCardRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dashboard_card_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dashboard_card_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_dashboard_card_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_dashboard_card_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dashboard_card_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dashboard_card_proto_goTypes,
		DependencyIndexes: file_dashboard_card_proto_depIdxs,
		MessageInfos:      file_dashboard_card_proto_msgTypes,
	}.Build()
	File_dashboard_card_proto = out.File
	file_dashboard_card_proto_rawDesc = nil
	file_dashboard_card_proto_goTypes = nil
	file_dashboard_card_proto_depIdxs = nil
}
