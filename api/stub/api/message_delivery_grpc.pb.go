// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: message_delivery.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MessageDeliveryServiceClient is the client API for MessageDeliveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MessageDeliveryServiceClient interface {
	// get list
	GetMessageDeliveryList(ctx context.Context, in *PaginationRequest, opts ...grpc.CallOption) (*GetMessageDeliveryListResult, error)
}

type messageDeliveryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageDeliveryServiceClient(cc grpc.ClientConnInterface) MessageDeliveryServiceClient {
	return &messageDeliveryServiceClient{cc}
}

func (c *messageDeliveryServiceClient) GetMessageDeliveryList(ctx context.Context, in *PaginationRequest, opts ...grpc.CallOption) (*GetMessageDeliveryListResult, error) {
	out := new(GetMessageDeliveryListResult)
	err := c.cc.Invoke(ctx, "/api.MessageDeliveryService/GetMessageDeliveryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageDeliveryServiceServer is the server API for MessageDeliveryService service.
// All implementations should embed UnimplementedMessageDeliveryServiceServer
// for forward compatibility
type MessageDeliveryServiceServer interface {
	// get list
	GetMessageDeliveryList(context.Context, *PaginationRequest) (*GetMessageDeliveryListResult, error)
}

// UnimplementedMessageDeliveryServiceServer should be embedded to have forward compatible implementations.
type UnimplementedMessageDeliveryServiceServer struct {
}

func (UnimplementedMessageDeliveryServiceServer) GetMessageDeliveryList(context.Context, *PaginationRequest) (*GetMessageDeliveryListResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageDeliveryList not implemented")
}

// UnsafeMessageDeliveryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MessageDeliveryServiceServer will
// result in compilation errors.
type UnsafeMessageDeliveryServiceServer interface {
	mustEmbedUnimplementedMessageDeliveryServiceServer()
}

func RegisterMessageDeliveryServiceServer(s grpc.ServiceRegistrar, srv MessageDeliveryServiceServer) {
	s.RegisterService(&MessageDeliveryService_ServiceDesc, srv)
}

func _MessageDeliveryService_GetMessageDeliveryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaginationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageDeliveryServiceServer).GetMessageDeliveryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MessageDeliveryService/GetMessageDeliveryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageDeliveryServiceServer).GetMessageDeliveryList(ctx, req.(*PaginationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MessageDeliveryService_ServiceDesc is the grpc.ServiceDesc for MessageDeliveryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MessageDeliveryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.MessageDeliveryService",
	HandlerType: (*MessageDeliveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessageDeliveryList",
			Handler:    _MessageDeliveryService_GetMessageDeliveryList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message_delivery.proto",
}
