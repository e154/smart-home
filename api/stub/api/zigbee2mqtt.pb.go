// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: zigbee2mqtt.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewZigbee2MqttRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Login      string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Password   *string `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`
	PermitJoin bool    `protobuf:"varint,4,opt,name=permit_join,json=permitJoin,proto3" json:"permit_join,omitempty"`
	BaseTopic  string  `protobuf:"bytes,5,opt,name=base_topic,json=baseTopic,proto3" json:"base_topic,omitempty"`
}

func (x *NewZigbee2MqttRequest) Reset() {
	*x = NewZigbee2MqttRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZigbee2MqttRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZigbee2MqttRequest) ProtoMessage() {}

func (x *NewZigbee2MqttRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZigbee2MqttRequest.ProtoReflect.Descriptor instead.
func (*NewZigbee2MqttRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{0}
}

func (x *NewZigbee2MqttRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewZigbee2MqttRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *NewZigbee2MqttRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *NewZigbee2MqttRequest) GetPermitJoin() bool {
	if x != nil {
		return x.PermitJoin
	}
	return false
}

func (x *NewZigbee2MqttRequest) GetBaseTopic() string {
	if x != nil {
		return x.BaseTopic
	}
	return ""
}

type Zigbee2MqttShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Login      string                 `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	PermitJoin bool                   `protobuf:"varint,4,opt,name=permit_join,json=permitJoin,proto3" json:"permit_join,omitempty"`
	BaseTopic  string                 `protobuf:"bytes,5,opt,name=base_topic,json=baseTopic,proto3" json:"base_topic,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Zigbee2MqttShort) Reset() {
	*x = Zigbee2MqttShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zigbee2MqttShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zigbee2MqttShort) ProtoMessage() {}

func (x *Zigbee2MqttShort) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zigbee2MqttShort.ProtoReflect.Descriptor instead.
func (*Zigbee2MqttShort) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{1}
}

func (x *Zigbee2MqttShort) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Zigbee2MqttShort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Zigbee2MqttShort) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Zigbee2MqttShort) GetPermitJoin() bool {
	if x != nil {
		return x.PermitJoin
	}
	return false
}

func (x *Zigbee2MqttShort) GetBaseTopic() string {
	if x != nil {
		return x.BaseTopic
	}
	return ""
}

func (x *Zigbee2MqttShort) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Zigbee2MqttShort) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Zigbee2Mqtt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanInProcess bool                   `protobuf:"varint,1,opt,name=scan_in_process,json=scanInProcess,proto3" json:"scan_in_process,omitempty"`
	LastScan      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_scan,json=lastScan,proto3,oneof" json:"last_scan,omitempty"`
	Networkmap    string                 `protobuf:"bytes,3,opt,name=networkmap,proto3" json:"networkmap,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Id            int64                  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Login         string                 `protobuf:"bytes,7,opt,name=login,proto3" json:"login,omitempty"`
	PermitJoin    bool                   `protobuf:"varint,8,opt,name=permit_join,json=permitJoin,proto3" json:"permit_join,omitempty"`
	BaseTopic     string                 `protobuf:"bytes,9,opt,name=base_topic,json=baseTopic,proto3" json:"base_topic,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Zigbee2Mqtt) Reset() {
	*x = Zigbee2Mqtt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zigbee2Mqtt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zigbee2Mqtt) ProtoMessage() {}

func (x *Zigbee2Mqtt) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zigbee2Mqtt.ProtoReflect.Descriptor instead.
func (*Zigbee2Mqtt) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{2}
}

func (x *Zigbee2Mqtt) GetScanInProcess() bool {
	if x != nil {
		return x.ScanInProcess
	}
	return false
}

func (x *Zigbee2Mqtt) GetLastScan() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScan
	}
	return nil
}

func (x *Zigbee2Mqtt) GetNetworkmap() string {
	if x != nil {
		return x.Networkmap
	}
	return ""
}

func (x *Zigbee2Mqtt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Zigbee2Mqtt) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Zigbee2Mqtt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Zigbee2Mqtt) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Zigbee2Mqtt) GetPermitJoin() bool {
	if x != nil {
		return x.PermitJoin
	}
	return false
}

func (x *Zigbee2Mqtt) GetBaseTopic() string {
	if x != nil {
		return x.BaseTopic
	}
	return ""
}

func (x *Zigbee2Mqtt) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Zigbee2Mqtt) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetBridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBridgeRequest) Reset() {
	*x = GetBridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBridgeRequest) ProtoMessage() {}

func (x *GetBridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBridgeRequest.ProtoReflect.Descriptor instead.
func (*GetBridgeRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{3}
}

func (x *GetBridgeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateBridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Login      string  `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Password   *string `protobuf:"bytes,4,opt,name=password,proto3,oneof" json:"password,omitempty"`
	PermitJoin bool    `protobuf:"varint,5,opt,name=permit_join,json=permitJoin,proto3" json:"permit_join,omitempty"`
	BaseTopic  string  `protobuf:"bytes,6,opt,name=base_topic,json=baseTopic,proto3" json:"base_topic,omitempty"`
}

func (x *UpdateBridgeRequest) Reset() {
	*x = UpdateBridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBridgeRequest) ProtoMessage() {}

func (x *UpdateBridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBridgeRequest.ProtoReflect.Descriptor instead.
func (*UpdateBridgeRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBridgeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBridgeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBridgeRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateBridgeRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UpdateBridgeRequest) GetPermitJoin() bool {
	if x != nil {
		return x.PermitJoin
	}
	return false
}

func (x *UpdateBridgeRequest) GetBaseTopic() string {
	if x != nil {
		return x.BaseTopic
	}
	return ""
}

type GetBridgeListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Zigbee2MqttShort `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Meta  *Meta               `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetBridgeListResult) Reset() {
	*x = GetBridgeListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBridgeListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBridgeListResult) ProtoMessage() {}

func (x *GetBridgeListResult) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBridgeListResult.ProtoReflect.Descriptor instead.
func (*GetBridgeListResult) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{5}
}

func (x *GetBridgeListResult) GetItems() []*Zigbee2MqttShort {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetBridgeListResult) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DeleteBridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBridgeRequest) Reset() {
	*x = DeleteBridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBridgeRequest) ProtoMessage() {}

func (x *DeleteBridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBridgeRequest.ProtoReflect.Descriptor instead.
func (*DeleteBridgeRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteBridgeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResetBridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResetBridgeRequest) Reset() {
	*x = ResetBridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetBridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetBridgeRequest) ProtoMessage() {}

func (x *ResetBridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetBridgeRequest.ProtoReflect.Descriptor instead.
func (*ResetBridgeRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{7}
}

func (x *ResetBridgeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeviceBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FriendlyName string `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
}

func (x *DeviceBanRequest) Reset() {
	*x = DeviceBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceBanRequest) ProtoMessage() {}

func (x *DeviceBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceBanRequest.ProtoReflect.Descriptor instead.
func (*DeviceBanRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{8}
}

func (x *DeviceBanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceBanRequest) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

type DeviceWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FriendlyName string `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
}

func (x *DeviceWhitelistRequest) Reset() {
	*x = DeviceWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceWhitelistRequest) ProtoMessage() {}

func (x *DeviceWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceWhitelistRequest.ProtoReflect.Descriptor instead.
func (*DeviceWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceWhitelistRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceWhitelistRequest) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

type NetworkmapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NetworkmapRequest) Reset() {
	*x = NetworkmapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkmapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkmapRequest) ProtoMessage() {}

func (x *NetworkmapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkmapRequest.ProtoReflect.Descriptor instead.
func (*NetworkmapRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkmapRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NetworkmapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networkmap string `protobuf:"bytes,1,opt,name=networkmap,proto3" json:"networkmap,omitempty"`
}

func (x *NetworkmapResponse) Reset() {
	*x = NetworkmapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkmapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkmapResponse) ProtoMessage() {}

func (x *NetworkmapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkmapResponse.ProtoReflect.Descriptor instead.
func (*NetworkmapResponse) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkmapResponse) GetNetworkmap() string {
	if x != nil {
		return x.Networkmap
	}
	return ""
}

type DeviceRenameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendlyName string `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	NewName      string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *DeviceRenameRequest) Reset() {
	*x = DeviceRenameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRenameRequest) ProtoMessage() {}

func (x *DeviceRenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRenameRequest.ProtoReflect.Descriptor instead.
func (*DeviceRenameRequest) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{12}
}

func (x *DeviceRenameRequest) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *DeviceRenameRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type Zigbee2MqttDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Zigbee2MqttId int64                  `protobuf:"varint,2,opt,name=zigbee2mqtt_id,json=zigbee2mqttId,proto3" json:"zigbee2mqtt_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Model         string                 `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Manufacturer  string                 `protobuf:"bytes,7,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Functions     []string               `protobuf:"bytes,8,rep,name=functions,proto3" json:"functions,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Status        string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Zigbee2MqttDevice) Reset() {
	*x = Zigbee2MqttDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zigbee2MqttDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zigbee2MqttDevice) ProtoMessage() {}

func (x *Zigbee2MqttDevice) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zigbee2MqttDevice.ProtoReflect.Descriptor instead.
func (*Zigbee2MqttDevice) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{13}
}

func (x *Zigbee2MqttDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetZigbee2MqttId() int64 {
	if x != nil {
		return x.Zigbee2MqttId
	}
	return 0
}

func (x *Zigbee2MqttDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *Zigbee2MqttDevice) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Zigbee2MqttDevice) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Zigbee2MqttDevice) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SearchDeviceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Zigbee2MqttDevice `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SearchDeviceResult) Reset() {
	*x = SearchDeviceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zigbee2mqtt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDeviceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDeviceResult) ProtoMessage() {}

func (x *SearchDeviceResult) ProtoReflect() protoreflect.Message {
	mi := &file_zigbee2mqtt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDeviceResult.ProtoReflect.Descriptor instead.
func (*SearchDeviceResult) Descriptor() ([]byte, []int) {
	return file_zigbee2mqtt_proto_rawDescGZIP(), []int{14}
}

func (x *SearchDeviceResult) GetItems() []*Zigbee2MqttDevice {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_zigbee2mqtt_proto protoreflect.FileDescriptor

var file_zigbee2mqtt_proto_rawDesc = []byte{
	0x0a, 0x11, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x5a, 0x69, 0x67, 0x62,
	0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x5a, 0x69, 0x67, 0x62, 0x65,
	0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f,
	0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x03, 0x0a, 0x0b,
	0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x6a, 0x6f,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x61, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d,
	0x71, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x25,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x10, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x22, 0x55,
	0x0a, 0x13, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x03, 0x0a, 0x11, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65,
	0x32, 0x6d, 0x71, 0x74, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x7a,
	0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x42, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x69, 0x67, 0x62, 0x65,
	0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x32, 0x9b, 0x0c, 0x0a, 0x12, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d,
	0x71, 0x74, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x5a, 0x69, 0x67, 0x62,
	0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74,
	0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69,
	0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x79, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x5a,
	0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x69,
	0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71,
	0x74, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41,
	0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32,
	0x6d, 0x71, 0x74, 0x74, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x1a, 0x22, 0x2f, 0x76,
	0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32,
	0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x92, 0x41, 0x12, 0x62, 0x10,
	0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00,
	0x12, 0x7e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b,
	0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x12, 0x62, 0x10,
	0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00,
	0x12, 0x82, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x21, 0x2f,
	0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x76, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x6e, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x7a,
	0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x62, 0x61, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a,
	0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x88, 0x01,
	0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x7f, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d,
	0x71, 0x74, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x77, 0x0a, 0x0c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x92, 0x41, 0x12,
	0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61,
	0x70, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x2f,
	0x7a, 0x69, 0x67, 0x62, 0x65, 0x65, 0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d,
	0x61, 0x70, 0x92, 0x41, 0x12, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x67, 0x62, 0x65, 0x65,
	0x32, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x6d, 0x61, 0x70, 0x92, 0x41, 0x12, 0x62,
	0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_zigbee2mqtt_proto_rawDescOnce sync.Once
	file_zigbee2mqtt_proto_rawDescData = file_zigbee2mqtt_proto_rawDesc
)

func file_zigbee2mqtt_proto_rawDescGZIP() []byte {
	file_zigbee2mqtt_proto_rawDescOnce.Do(func() {
		file_zigbee2mqtt_proto_rawDescData = protoimpl.X.CompressGZIP(file_zigbee2mqtt_proto_rawDescData)
	})
	return file_zigbee2mqtt_proto_rawDescData
}

var file_zigbee2mqtt_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_zigbee2mqtt_proto_goTypes = []interface{}{
	(*NewZigbee2MqttRequest)(nil),  // 0: api.NewZigbee2mqttRequest
	(*Zigbee2MqttShort)(nil),       // 1: api.Zigbee2mqttShort
	(*Zigbee2Mqtt)(nil),            // 2: api.Zigbee2mqtt
	(*GetBridgeRequest)(nil),       // 3: api.GetBridgeRequest
	(*UpdateBridgeRequest)(nil),    // 4: api.UpdateBridgeRequest
	(*GetBridgeListResult)(nil),    // 5: api.GetBridgeListResult
	(*DeleteBridgeRequest)(nil),    // 6: api.DeleteBridgeRequest
	(*ResetBridgeRequest)(nil),     // 7: api.ResetBridgeRequest
	(*DeviceBanRequest)(nil),       // 8: api.DeviceBanRequest
	(*DeviceWhitelistRequest)(nil), // 9: api.DeviceWhitelistRequest
	(*NetworkmapRequest)(nil),      // 10: api.NetworkmapRequest
	(*NetworkmapResponse)(nil),     // 11: api.NetworkmapResponse
	(*DeviceRenameRequest)(nil),    // 12: api.DeviceRenameRequest
	(*Zigbee2MqttDevice)(nil),      // 13: api.Zigbee2mqttDevice
	(*SearchDeviceResult)(nil),     // 14: api.SearchDeviceResult
	(*timestamppb.Timestamp)(nil),  // 15: google.protobuf.Timestamp
	(*Meta)(nil),                   // 16: api.Meta
	(*PaginationRequest)(nil),      // 17: api.PaginationRequest
	(*SearchRequest)(nil),          // 18: api.SearchRequest
	(*emptypb.Empty)(nil),          // 19: google.protobuf.Empty
}
var file_zigbee2mqtt_proto_depIdxs = []int32{
	15, // 0: api.Zigbee2mqttShort.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: api.Zigbee2mqttShort.updated_at:type_name -> google.protobuf.Timestamp
	15, // 2: api.Zigbee2mqtt.last_scan:type_name -> google.protobuf.Timestamp
	15, // 3: api.Zigbee2mqtt.created_at:type_name -> google.protobuf.Timestamp
	15, // 4: api.Zigbee2mqtt.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 5: api.GetBridgeListResult.items:type_name -> api.Zigbee2mqttShort
	16, // 6: api.GetBridgeListResult.meta:type_name -> api.Meta
	15, // 7: api.Zigbee2mqttDevice.created_at:type_name -> google.protobuf.Timestamp
	15, // 8: api.Zigbee2mqttDevice.updated_at:type_name -> google.protobuf.Timestamp
	13, // 9: api.SearchDeviceResult.items:type_name -> api.Zigbee2mqttDevice
	0,  // 10: api.Zigbee2mqttService.AddZigbee2mqttBridge:input_type -> api.NewZigbee2mqttRequest
	3,  // 11: api.Zigbee2mqttService.GetZigbee2mqttBridge:input_type -> api.GetBridgeRequest
	4,  // 12: api.Zigbee2mqttService.UpdateBridgeById:input_type -> api.UpdateBridgeRequest
	17, // 13: api.Zigbee2mqttService.GetBridgeList:input_type -> api.PaginationRequest
	6,  // 14: api.Zigbee2mqttService.DeleteBridgeById:input_type -> api.DeleteBridgeRequest
	7,  // 15: api.Zigbee2mqttService.ResetBridgeById:input_type -> api.ResetBridgeRequest
	8,  // 16: api.Zigbee2mqttService.DeviceBan:input_type -> api.DeviceBanRequest
	9,  // 17: api.Zigbee2mqttService.DeviceWhitelist:input_type -> api.DeviceWhitelistRequest
	12, // 18: api.Zigbee2mqttService.DeviceRename:input_type -> api.DeviceRenameRequest
	18, // 19: api.Zigbee2mqttService.SearchDevice:input_type -> api.SearchRequest
	10, // 20: api.Zigbee2mqttService.Networkmap:input_type -> api.NetworkmapRequest
	10, // 21: api.Zigbee2mqttService.UpdateNetworkmap:input_type -> api.NetworkmapRequest
	2,  // 22: api.Zigbee2mqttService.AddZigbee2mqttBridge:output_type -> api.Zigbee2mqtt
	2,  // 23: api.Zigbee2mqttService.GetZigbee2mqttBridge:output_type -> api.Zigbee2mqtt
	2,  // 24: api.Zigbee2mqttService.UpdateBridgeById:output_type -> api.Zigbee2mqtt
	5,  // 25: api.Zigbee2mqttService.GetBridgeList:output_type -> api.GetBridgeListResult
	19, // 26: api.Zigbee2mqttService.DeleteBridgeById:output_type -> google.protobuf.Empty
	19, // 27: api.Zigbee2mqttService.ResetBridgeById:output_type -> google.protobuf.Empty
	19, // 28: api.Zigbee2mqttService.DeviceBan:output_type -> google.protobuf.Empty
	19, // 29: api.Zigbee2mqttService.DeviceWhitelist:output_type -> google.protobuf.Empty
	19, // 30: api.Zigbee2mqttService.DeviceRename:output_type -> google.protobuf.Empty
	14, // 31: api.Zigbee2mqttService.SearchDevice:output_type -> api.SearchDeviceResult
	11, // 32: api.Zigbee2mqttService.Networkmap:output_type -> api.NetworkmapResponse
	19, // 33: api.Zigbee2mqttService.UpdateNetworkmap:output_type -> google.protobuf.Empty
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_zigbee2mqtt_proto_init() }
func file_zigbee2mqtt_proto_init() {
	if File_zigbee2mqtt_proto != nil {
		return
	}
	file_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zigbee2mqtt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZigbee2MqttRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zigbee2MqttShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zigbee2Mqtt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBridgeListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetBridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkmapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkmapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRenameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zigbee2MqttDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zigbee2mqtt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDeviceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zigbee2mqtt_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_zigbee2mqtt_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_zigbee2mqtt_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zigbee2mqtt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zigbee2mqtt_proto_goTypes,
		DependencyIndexes: file_zigbee2mqtt_proto_depIdxs,
		MessageInfos:      file_zigbee2mqtt_proto_msgTypes,
	}.Build()
	File_zigbee2mqtt_proto = out.File
	file_zigbee2mqtt_proto_rawDesc = nil
	file_zigbee2mqtt_proto_goTypes = nil
	file_zigbee2mqtt_proto_depIdxs = nil
}
