// Package stub provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package stub

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	ApiKeGetLogListyAuthScopes = "ApiKeGetLogListyAuth.Scopes"
	ApiKeyAuthScopes           = "ApiKeyAuth.Scopes"
	BasicAuthScopes            = "BasicAuth.Scopes"
)

// Defines values for ApiTypes.
const (
	ARRAY     ApiTypes = "ARRAY"
	BOOL      ApiTypes = "BOOL"
	ENCRYPTED ApiTypes = "ENCRYPTED"
	FLOAT     ApiTypes = "FLOAT"
	ICON      ApiTypes = "ICON"
	IMAGE     ApiTypes = "IMAGE"
	INT       ApiTypes = "INT"
	MAP       ApiTypes = "MAP"
	POINT     ApiTypes = "POINT"
	STRING    ApiTypes = "STRING"
	TIME      ApiTypes = "TIME"
)

// Defines values for MetricRange.
const (
	MetricRangeN12h MetricRange = "12h"
	MetricRangeN1m  MetricRange = "1m"
	MetricRangeN24h MetricRange = "24h"
	MetricRangeN30d MetricRange = "30d"
	MetricRangeN6h  MetricRange = "6h"
	MetricRangeN7d  MetricRange = "7d"
)

// Defines values for MetricServiceGetMetricParamsRange.
const (
	MetricServiceGetMetricParamsRangeN12h MetricServiceGetMetricParamsRange = "12h"
	MetricServiceGetMetricParamsRangeN1m  MetricServiceGetMetricParamsRange = "1m"
	MetricServiceGetMetricParamsRangeN24h MetricServiceGetMetricParamsRange = "24h"
	MetricServiceGetMetricParamsRangeN30d MetricServiceGetMetricParamsRange = "30d"
	MetricServiceGetMetricParamsRangeN6h  MetricServiceGetMetricParamsRange = "6h"
	MetricServiceGetMetricParamsRangeN7d  MetricServiceGetMetricParamsRange = "7d"
)

// AccessListListOfString defines model for AccessListListOfString.
type AccessListListOfString struct {
	Items []string `json:"items"`
}

// GenericErrorResponse Generic Error Response
type GenericErrorResponse struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// GetImageFilterListResultfilter defines model for GetImageFilterListResultfilter.
type GetImageFilterListResultfilter struct {
	Count int32  `json:"count"`
	Date  string `json:"date"`
}

// UpdateDashboardCardRequestItem defines model for UpdateDashboardCardRequestItem.
type UpdateDashboardCardRequestItem struct {
	Enabled  bool      `json:"enabled"`
	EntityId *string   `json:"entityId,omitempty"`
	Frozen   bool      `json:"frozen"`
	Hidden   bool      `json:"hidden"`
	HideOn   *[]string `json:"hideOn,omitempty"`
	Id       int64     `json:"id"`
	Payload  []byte    `json:"payload"`
	ShowOn   *[]string `json:"showOn,omitempty"`
	Title    string    `json:"title"`
	Type     string    `json:"type"`
	Weight   int32     `json:"weight"`
}

// UpdateRoleAccessListRequestAccessListDiff defines model for UpdateRoleAccessListRequestAccessListDiff.
type UpdateRoleAccessListRequestAccessListDiff struct {
	Items map[string]bool `json:"items"`
}

// ApiAccessItem defines model for apiAccessItem.
type ApiAccessItem struct {
	Actions     []string `json:"actions"`
	Description string   `json:"description"`
	Method      string   `json:"method"`
	RoleName    string   `json:"roleName"`
}

// ApiAccessLevels defines model for apiAccessLevels.
type ApiAccessLevels struct {
	Items map[string]ApiAccessItem `json:"items"`
}

// ApiAccessList defines model for apiAccessList.
type ApiAccessList struct {
	Levels map[string]ApiAccessLevels `json:"levels"`
}

// ApiAccessListResponse defines model for apiAccessListResponse.
type ApiAccessListResponse struct {
	AccessList *ApiAccessList `json:"accessList,omitempty"`
}

// ApiAction defines model for apiAction.
type ApiAction struct {
	Area             *ApiArea   `json:"area,omitempty"`
	AreaId           *int64     `json:"areaId,omitempty"`
	Completed        *bool      `json:"completed,omitempty"`
	CreatedAt        time.Time  `json:"createdAt"`
	Description      string     `json:"description"`
	Entity           *ApiEntity `json:"entity,omitempty"`
	EntityActionName *string    `json:"entityActionName,omitempty"`
	EntityId         *string    `json:"entityId,omitempty"`
	Id               int64      `json:"id"`
	Name             string     `json:"name"`
	Script           *ApiScript `json:"script,omitempty"`
	ScriptId         *int64     `json:"scriptId,omitempty"`
	UpdatedAt        time.Time  `json:"updatedAt"`
}

// ApiArea defines model for apiArea.
type ApiArea struct {
	Center      *ApiAreaLocation  `json:"center,omitempty"`
	CreatedAt   time.Time         `json:"createdAt"`
	Description string            `json:"description"`
	Id          int64             `json:"id"`
	Name        string            `json:"name"`
	Polygon     []ApiAreaLocation `json:"polygon"`
	Resolution  float32           `json:"resolution"`
	UpdatedAt   time.Time         `json:"updatedAt"`
	Zoom        float32           `json:"zoom"`
}

// ApiAreaLocation defines model for apiAreaLocation.
type ApiAreaLocation struct {
	Lat float64 `json:"lat"`
	Lon float64 `json:"lon"`
}

// ApiAttribute defines model for apiAttribute.
type ApiAttribute struct {
	Array     *[]ApiAttribute          `json:"array,omitempty"`
	Bool      *bool                    `json:"bool,omitempty"`
	Encrypted *string                  `json:"encrypted,omitempty"`
	Float     *float32                 `json:"float,omitempty"`
	Icon      *string                  `json:"icon,omitempty"`
	ImageUrl  *string                  `json:"imageUrl,omitempty"`
	Int       *int64                   `json:"int,omitempty"`
	Map       *map[string]ApiAttribute `json:"map,omitempty"`
	Name      string                   `json:"name"`
	Point     *string                  `json:"point,omitempty"`
	String    *string                  `json:"string,omitempty"`
	Time      *time.Time               `json:"time,omitempty"`
	Type      ApiTypes                 `json:"type"`
}

// ApiAutomationRequest defines model for apiAutomationRequest.
type ApiAutomationRequest struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

// ApiBackup defines model for apiBackup.
type ApiBackup struct {
	FileMode uint32    `json:"fileMode"`
	ModTime  time.Time `json:"modTime"`
	Name     string    `json:"name"`
	Size     int64     `json:"size"`
}

// ApiBusStateItem defines model for apiBusStateItem.
type ApiBusStateItem struct {
	Avg         int64   `json:"avg"`
	Max         int64   `json:"max"`
	Min         int64   `json:"min"`
	Rps         float64 `json:"rps"`
	Subscribers int32   `json:"subscribers"`
	Topic       string  `json:"topic"`
}

// ApiClient defines model for apiClient.
type ApiClient struct {
	ClientId             string     `json:"clientId"`
	ConnectedAt          time.Time  `json:"connectedAt"`
	DisconnectedAt       *time.Time `json:"disconnectedAt,omitempty"`
	InflightLen          uint32     `json:"inflightLen"`
	KeepAlive            uint16     `json:"keepAlive"`
	LocalAddr            string     `json:"localAddr"`
	MessageDropped       uint64     `json:"messageDropped"`
	PacketsReceivedBytes uint64     `json:"packetsReceivedBytes"`
	PacketsReceivedNums  uint64     `json:"packetsReceivedNums"`
	PacketsSendBytes     uint64     `json:"packetsSendBytes"`
	PacketsSendNums      uint64     `json:"packetsSendNums"`
	QueueLen             uint32     `json:"queueLen"`
	RemoteAddr           string     `json:"remoteAddr"`
	SubscriptionsCurrent uint32     `json:"subscriptionsCurrent"`
	SubscriptionsTotal   uint32     `json:"subscriptionsTotal"`
	Username             string     `json:"username"`
	Version              int32      `json:"version"`
	WillPayload          string     `json:"willPayload"`
	WillQos              uint8      `json:"willQos"`
	WillRetain           bool       `json:"willRetain"`
	WillTopic            string     `json:"willTopic"`
}

// ApiCondition defines model for apiCondition.
type ApiCondition struct {
	Area        *ApiArea   `json:"area,omitempty"`
	AreaId      *int64     `json:"areaId,omitempty"`
	CreatedAt   time.Time  `json:"createdAt"`
	Description string     `json:"description"`
	Id          int64      `json:"id"`
	Name        string     `json:"name"`
	Script      *ApiScript `json:"script,omitempty"`
	ScriptId    *int64     `json:"scriptId,omitempty"`
	UpdatedAt   time.Time  `json:"updatedAt"`
}

// ApiCurrentUser defines model for apiCurrentUser.
type ApiCurrentUser struct {
	CreatedAt       *time.Time        `json:"createdAt,omitempty"`
	CurrentSignInAt *time.Time        `json:"currentSignInAt,omitempty"`
	Email           *string           `json:"email,omitempty"`
	FirstName       *string           `json:"firstName,omitempty"`
	History         *[]ApiUserHistory `json:"history,omitempty"`
	Id              *int64            `json:"id,omitempty"`
	Image           *ApiImage         `json:"image,omitempty"`
	Lang            *string           `json:"lang,omitempty"`
	LastName        *string           `json:"lastName,omitempty"`
	LastSignInAt    *time.Time        `json:"lastSignInAt,omitempty"`
	Meta            *[]ApiUserMeta    `json:"meta,omitempty"`
	Nickname        *string           `json:"nickname,omitempty"`
	Role            *ApiRole          `json:"role,omitempty"`
	SignInCount     *int64            `json:"signInCount,omitempty"`
	Status          *string           `json:"status,omitempty"`
	UpdatedAt       *time.Time        `json:"updatedAt,omitempty"`
}

// ApiDashboard defines model for apiDashboard.
type ApiDashboard struct {
	Area        *ApiArea             `json:"area,omitempty"`
	AreaId      *int64               `json:"areaId,omitempty"`
	CreatedAt   time.Time            `json:"createdAt"`
	Description string               `json:"description"`
	Enabled     bool                 `json:"enabled"`
	Entities    map[string]ApiEntity `json:"entities"`
	Id          int64                `json:"id"`
	Name        string               `json:"name"`
	Tabs        []ApiDashboardTab    `json:"tabs"`
	UpdatedAt   time.Time            `json:"updatedAt"`
}

// ApiDashboardCard defines model for apiDashboardCard.
type ApiDashboardCard struct {
	Background     *string                `json:"background,omitempty"`
	CreatedAt      time.Time              `json:"createdAt"`
	DashboardTabId int64                  `json:"dashboardTabId"`
	Enabled        bool                   `json:"enabled"`
	Entities       map[string]ApiEntity   `json:"entities"`
	EntityId       *string                `json:"entityId,omitempty"`
	Height         int32                  `json:"height"`
	Hidden         bool                   `json:"hidden"`
	Id             int64                  `json:"id"`
	Items          []ApiDashboardCardItem `json:"items"`
	Payload        []byte                 `json:"payload"`
	Title          string                 `json:"title"`
	UpdatedAt      time.Time              `json:"updatedAt"`
	Weight         int32                  `json:"weight"`
	Width          int32                  `json:"width"`
}

// ApiDashboardCardItem defines model for apiDashboardCardItem.
type ApiDashboardCardItem struct {
	CreatedAt       time.Time `json:"createdAt"`
	DashboardCardId int64     `json:"dashboardCardId"`
	Enabled         bool      `json:"enabled"`
	EntityId        *string   `json:"entityId,omitempty"`
	Frozen          bool      `json:"frozen"`
	Hidden          bool      `json:"hidden"`
	Id              int64     `json:"id"`
	Payload         []byte    `json:"payload"`
	Title           string    `json:"title"`
	Type            string    `json:"type"`
	UpdatedAt       time.Time `json:"updatedAt"`
	Weight          int32     `json:"weight"`
}

// ApiDashboardShort defines model for apiDashboardShort.
type ApiDashboardShort struct {
	Area        *ApiArea  `json:"area,omitempty"`
	AreaId      *int64    `json:"areaId,omitempty"`
	CreatedAt   time.Time `json:"createdAt"`
	Description string    `json:"description"`
	Enabled     bool      `json:"enabled"`
	Id          int64     `json:"id"`
	Name        string    `json:"name"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// ApiDashboardTab defines model for apiDashboardTab.
type ApiDashboardTab struct {
	Background  *string              `json:"background,omitempty"`
	Cards       []ApiDashboardCard   `json:"cards"`
	ColumnWidth int32                `json:"columnWidth"`
	CreatedAt   time.Time            `json:"createdAt"`
	DashboardId int64                `json:"dashboardId"`
	Enabled     bool                 `json:"enabled"`
	Entities    map[string]ApiEntity `json:"entities"`
	Gap         bool                 `json:"gap"`
	Icon        string               `json:"icon"`
	Id          int64                `json:"id"`
	Name        string               `json:"name"`
	Payload     []byte               `json:"payload"`
	UpdatedAt   time.Time            `json:"updatedAt"`
	Weight      int32                `json:"weight"`
}

// ApiDashboardTabShort defines model for apiDashboardTabShort.
type ApiDashboardTabShort struct {
	Background  *string    `json:"background,omitempty"`
	ColumnWidth *int32     `json:"columnWidth,omitempty"`
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	DashboardId *int64     `json:"dashboardId,omitempty"`
	Enabled     *bool      `json:"enabled,omitempty"`
	Gap         *bool      `json:"gap,omitempty"`
	Icon        *string    `json:"icon,omitempty"`
	Id          *int64     `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty"`
	Weight      *int32     `json:"weight,omitempty"`
}

// ApiDeviceBanRequest defines model for apiDeviceBanRequest.
type ApiDeviceBanRequest struct {
	FriendlyName string `json:"friendlyName"`
	Id           int64  `json:"id"`
}

// ApiDeviceListResult defines model for apiDeviceListResult.
type ApiDeviceListResult struct {
	Items []ApiZigbee2mqttDevice `json:"items"`
	Meta  *ApiMeta               `json:"meta,omitempty"`
}

// ApiDeviceRenameRequest defines model for apiDeviceRenameRequest.
type ApiDeviceRenameRequest struct {
	FriendlyName string `json:"friendlyName"`
	NewName      string `json:"newName"`
}

// ApiDeviceWhitelistRequest defines model for apiDeviceWhitelistRequest.
type ApiDeviceWhitelistRequest struct {
	FriendlyName string `json:"friendlyName"`
	Id           int64  `json:"id"`
}

// ApiDisablePluginResult defines model for apiDisablePluginResult.
type ApiDisablePluginResult = map[string]interface{}

// ApiEnablePluginResult defines model for apiEnablePluginResult.
type ApiEnablePluginResult = map[string]interface{}

// ApiEntity defines model for apiEntity.
type ApiEntity struct {
	Actions      []ApiEntityAction       `json:"actions"`
	Area         *ApiArea                `json:"area,omitempty"`
	Attributes   map[string]ApiAttribute `json:"attributes"`
	AutoLoad     bool                    `json:"autoLoad"`
	CreatedAt    time.Time               `json:"createdAt"`
	Description  string                  `json:"description"`
	Icon         *string                 `json:"icon,omitempty"`
	Id           string                  `json:"id"`
	Image        *ApiImage               `json:"image,omitempty"`
	IsLoaded     *bool                   `json:"isLoaded,omitempty"`
	Metrics      []ApiMetric             `json:"metrics"`
	Parent       *ApiEntityParent        `json:"parent,omitempty"`
	PluginName   string                  `json:"pluginName"`
	RestoreState bool                    `json:"restoreState"`
	ScriptIds    []int64                 `json:"scriptIds"`
	Scripts      []ApiScript             `json:"scripts"`
	Settings     map[string]ApiAttribute `json:"settings"`
	States       []ApiEntityState        `json:"states"`
	Tags         []string                `json:"tags"`
	UpdatedAt    time.Time               `json:"updatedAt"`
}

// ApiEntityAction defines model for apiEntityAction.
type ApiEntityAction struct {
	Description string     `json:"description"`
	Icon        *string    `json:"icon,omitempty"`
	Image       *ApiImage  `json:"image,omitempty"`
	Name        string     `json:"name"`
	Script      *ApiScript `json:"script,omitempty"`
	ScriptId    *int64     `json:"scriptId,omitempty"`
	Type        string     `json:"type"`
}

// ApiEntityCallActionRequest defines model for apiEntityCallActionRequest.
type ApiEntityCallActionRequest struct {
	AreaId     *int64                  `json:"areaId,omitempty"`
	Attributes map[string]ApiAttribute `json:"attributes"`
	Id         *string                 `json:"id,omitempty"`
	Name       string                  `json:"name"`
	Tags       []string                `json:"tags"`
}

// ApiEntityParent defines model for apiEntityParent.
type ApiEntityParent struct {
	Id string `json:"id"`
}

// ApiEntityRequest defines model for apiEntityRequest.
type ApiEntityRequest struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// ApiEntityShort defines model for apiEntityShort.
type ApiEntityShort struct {
	Area         *ApiArea  `json:"area,omitempty"`
	AutoLoad     bool      `json:"autoLoad"`
	CreatedAt    time.Time `json:"createdAt"`
	Description  string    `json:"description"`
	Icon         *string   `json:"icon,omitempty"`
	Id           string    `json:"id"`
	IsLoaded     *bool     `json:"isLoaded,omitempty"`
	ParentId     *string   `json:"parentId,omitempty"`
	PluginName   string    `json:"pluginName"`
	RestoreState bool      `json:"restoreState"`
	Tags         []string  `json:"tags"`
	UpdatedAt    time.Time `json:"updatedAt"`
}

// ApiEntityState defines model for apiEntityState.
type ApiEntityState struct {
	Description string    `json:"description"`
	Icon        *string   `json:"icon,omitempty"`
	Image       *ApiImage `json:"image,omitempty"`
	Name        string    `json:"name"`
	Style       string    `json:"style"`
}

// ApiEntityStorage defines model for apiEntityStorage.
type ApiEntityStorage struct {
	Attributes        map[string]ApiAttribute `json:"attributes"`
	CreatedAt         time.Time               `json:"createdAt"`
	EntityId          string                  `json:"entityId"`
	EntityDescription string                  `json:"entity_description"`
	Id                int64                   `json:"id"`
	State             string                  `json:"state"`
	StateDescription  string                  `json:"state_description"`
}

// ApiEntityStorageFilter defines model for apiEntityStorageFilter.
type ApiEntityStorageFilter struct {
	Description string `json:"description"`
	EntityId    string `json:"entityId"`
}

// ApiEventBusStateListResult defines model for apiEventBusStateListResult.
type ApiEventBusStateListResult struct {
	Items []ApiBusStateItem `json:"items"`
	Meta  *ApiMeta          `json:"meta,omitempty"`
}

// ApiExecScriptResult defines model for apiExecScriptResult.
type ApiExecScriptResult struct {
	Result string `json:"result"`
}

// ApiExecSrcScriptRequest defines model for apiExecSrcScriptRequest.
type ApiExecSrcScriptRequest struct {
	Description string `json:"description"`
	Lang        string `json:"lang"`
	Name        string `json:"name"`
	Source      string `json:"source"`
}

// ApiGetActionListResult defines model for apiGetActionListResult.
type ApiGetActionListResult struct {
	Items []ApiAction `json:"items"`
	Meta  *ApiMeta    `json:"meta,omitempty"`
}

// ApiGetAreaListResult defines model for apiGetAreaListResult.
type ApiGetAreaListResult struct {
	Items []ApiArea `json:"items"`
	Meta  *ApiMeta  `json:"meta,omitempty"`
}

// ApiGetBackupListResult defines model for apiGetBackupListResult.
type ApiGetBackupListResult struct {
	Items []string `json:"items"`
	Meta  *ApiMeta `json:"meta,omitempty"`
}

// ApiGetBridgeListResult defines model for apiGetBridgeListResult.
type ApiGetBridgeListResult struct {
	Items []ApiZigbee2mqttShort `json:"items"`
	Meta  *ApiMeta              `json:"meta,omitempty"`
}

// ApiGetClientListResult defines model for apiGetClientListResult.
type ApiGetClientListResult struct {
	Items []ApiClient `json:"items"`
	Meta  *ApiMeta    `json:"meta,omitempty"`
}

// ApiGetConditionListResult defines model for apiGetConditionListResult.
type ApiGetConditionListResult struct {
	Items []ApiCondition `json:"items"`
	Meta  *ApiMeta       `json:"meta,omitempty"`
}

// ApiGetDashboardCardItemListResult defines model for apiGetDashboardCardItemListResult.
type ApiGetDashboardCardItemListResult struct {
	Items []ApiDashboardCardItem `json:"items"`
	Meta  *ApiMeta               `json:"meta,omitempty"`
}

// ApiGetDashboardCardListResult defines model for apiGetDashboardCardListResult.
type ApiGetDashboardCardListResult struct {
	Items []ApiDashboardCard `json:"items"`
	Meta  *ApiMeta           `json:"meta,omitempty"`
}

// ApiGetDashboardListResult defines model for apiGetDashboardListResult.
type ApiGetDashboardListResult struct {
	Items []ApiDashboardShort `json:"items"`
	Meta  *ApiMeta            `json:"meta,omitempty"`
}

// ApiGetDashboardTabListResult defines model for apiGetDashboardTabListResult.
type ApiGetDashboardTabListResult struct {
	Items []ApiDashboardTabShort `json:"items"`
	Meta  *ApiMeta               `json:"meta,omitempty"`
}

// ApiGetEntityListResult defines model for apiGetEntityListResult.
type ApiGetEntityListResult struct {
	Items []ApiEntityShort `json:"items"`
	Meta  *ApiMeta         `json:"meta,omitempty"`
}

// ApiGetEntityStorageResult defines model for apiGetEntityStorageResult.
type ApiGetEntityStorageResult struct {
	Filter []ApiEntityStorageFilter `json:"filter"`
	Items  []ApiEntityStorage       `json:"items"`
	Meta   ApiMeta                  `json:"meta"`
}

// ApiGetImageFilterListResult defines model for apiGetImageFilterListResult.
type ApiGetImageFilterListResult struct {
	Items []GetImageFilterListResultfilter `json:"items"`
}

// ApiGetImageListByDateResult defines model for apiGetImageListByDateResult.
type ApiGetImageListByDateResult struct {
	Items []ApiImage `json:"items"`
}

// ApiGetImageListResult defines model for apiGetImageListResult.
type ApiGetImageListResult struct {
	Items []ApiImage `json:"items"`
	Meta  *ApiMeta   `json:"meta,omitempty"`
}

// ApiGetLogListResult defines model for apiGetLogListResult.
type ApiGetLogListResult struct {
	Items []ApiLog `json:"items"`
	Meta  *ApiMeta `json:"meta,omitempty"`
}

// ApiGetMessageDeliveryListResult defines model for apiGetMessageDeliveryListResult.
type ApiGetMessageDeliveryListResult struct {
	Items []ApiMessageDelivery `json:"items"`
	Meta  *ApiMeta             `json:"meta,omitempty"`
}

// ApiGetPluginListResult defines model for apiGetPluginListResult.
type ApiGetPluginListResult struct {
	Items []ApiPluginShort `json:"items"`
	Meta  *ApiMeta         `json:"meta,omitempty"`
}

// ApiGetRoleListResult defines model for apiGetRoleListResult.
type ApiGetRoleListResult struct {
	Items []ApiRole `json:"items"`
	Meta  *ApiMeta  `json:"meta,omitempty"`
}

// ApiGetScriptListResult defines model for apiGetScriptListResult.
type ApiGetScriptListResult struct {
	Items []ApiScript `json:"items"`
	Meta  *ApiMeta    `json:"meta,omitempty"`
}

// ApiGetSubscriptionListResult defines model for apiGetSubscriptionListResult.
type ApiGetSubscriptionListResult struct {
	Items []ApiSubscription `json:"items"`
	Meta  *ApiMeta          `json:"meta,omitempty"`
}

// ApiGetTagListResult defines model for apiGetTagListResult.
type ApiGetTagListResult struct {
	Items []ApiTag `json:"items"`
	Meta  *ApiMeta `json:"meta,omitempty"`
}

// ApiGetTaskListResult defines model for apiGetTaskListResult.
type ApiGetTaskListResult struct {
	Items []ApiTask `json:"items"`
	Meta  *ApiMeta  `json:"meta,omitempty"`
}

// ApiGetTriggerListResult defines model for apiGetTriggerListResult.
type ApiGetTriggerListResult struct {
	Items []ApiTrigger `json:"items"`
	Meta  *ApiMeta     `json:"meta,omitempty"`
}

// ApiGetUserListResult defines model for apiGetUserListResult.
type ApiGetUserListResult struct {
	Items []ApiUserShot `json:"items"`
	Meta  *ApiMeta      `json:"meta,omitempty"`
}

// ApiGetVariableListResult defines model for apiGetVariableListResult.
type ApiGetVariableListResult struct {
	Items []ApiVariable `json:"items"`
	Meta  *ApiMeta      `json:"meta,omitempty"`
}

// ApiImage defines model for apiImage.
type ApiImage struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        int64     `json:"id"`
	Image     string    `json:"image"`
	MimeType  string    `json:"mimeType"`
	Name      string    `json:"name"`
	Size      int64     `json:"size"`
	Thumb     string    `json:"thumb"`
	Title     string    `json:"title"`
	Url       string    `json:"url"`
}

// ApiLog defines model for apiLog.
type ApiLog struct {
	Body      string    `json:"body"`
	CreatedAt time.Time `json:"createdAt"`
	Id        int64     `json:"id"`
	Level     string    `json:"level"`
	Owner     string    `json:"owner"`
}

// ApiMessage defines model for apiMessage.
type ApiMessage struct {
	Attributes map[string]string `json:"attributes"`
	CreatedAt  time.Time         `json:"createdAt"`
	EntityId   *string           `json:"entityId,omitempty"`
	Id         int64             `json:"id"`
	Type       string            `json:"type"`
	UpdatedAt  time.Time         `json:"updatedAt"`
}

// ApiMessageDelivery defines model for apiMessageDelivery.
type ApiMessageDelivery struct {
	Address            string     `json:"address"`
	CreatedAt          time.Time  `json:"createdAt"`
	ErrorMessageBody   *string    `json:"errorMessageBody,omitempty"`
	ErrorMessageStatus *string    `json:"errorMessageStatus,omitempty"`
	Id                 int64      `json:"id"`
	Message            ApiMessage `json:"message"`
	Status             string     `json:"status"`
	UpdatedAt          time.Time  `json:"updatedAt"`
}

// ApiMeta defines model for apiMeta.
type ApiMeta struct {
	Pagination ApiPagination `json:"pagination"`
	Sort       string        `json:"sort"`
}

// ApiMetric defines model for apiMetric.
type ApiMetric struct {
	CreatedAt   time.Time             `json:"createdAt"`
	Data        []ApiMetricOptionData `json:"data"`
	Description string                `json:"description"`
	Id          int64                 `json:"id"`
	Name        string                `json:"name"`
	Options     *ApiMetricOption      `json:"options,omitempty"`
	Ranges      []string              `json:"ranges"`
	Type        string                `json:"type"`
	UpdatedAt   time.Time             `json:"updatedAt"`
}

// ApiMetricOption defines model for apiMetricOption.
type ApiMetricOption struct {
	Items []ApiMetricOptionItem `json:"items"`
}

// ApiMetricOptionData defines model for apiMetricOptionData.
type ApiMetricOptionData struct {
	MetricId *int64                 `json:"metricId,omitempty"`
	Time     time.Time              `json:"time"`
	Value    map[string]interface{} `json:"value"`
}

// ApiMetricOptionItem defines model for apiMetricOptionItem.
type ApiMetricOptionItem struct {
	Color       string `json:"color"`
	Description string `json:"description"`
	Label       string `json:"label"`
	Name        string `json:"name"`
	Translate   string `json:"translate"`
}

// ApiNetworkmapResponse defines model for apiNetworkmapResponse.
type ApiNetworkmapResponse struct {
	Networkmap string `json:"networkmap"`
}

// ApiNewActionRequest defines model for apiNewActionRequest.
type ApiNewActionRequest struct {
	AreaId           *int64  `json:"areaId,omitempty"`
	Description      string  `json:"description"`
	EntityActionName *string `json:"entityActionName,omitempty"`
	EntityId         *string `json:"entityId,omitempty"`
	Name             string  `json:"name"`
	ScriptId         *int64  `json:"scriptId,omitempty"`
}

// ApiNewAreaRequest defines model for apiNewAreaRequest.
type ApiNewAreaRequest struct {
	Center      *ApiAreaLocation  `json:"center,omitempty"`
	Description string            `json:"description"`
	Name        string            `json:"name"`
	Polygon     []ApiAreaLocation `json:"polygon"`
	Resolution  float32           `json:"resolution"`
	Zoom        float32           `json:"zoom"`
}

// ApiNewConditionRequest defines model for apiNewConditionRequest.
type ApiNewConditionRequest struct {
	AreaId      *int64 `json:"areaId,omitempty"`
	Description string `json:"description"`
	Name        string `json:"name"`
	ScriptId    *int64 `json:"scriptId,omitempty"`
}

// ApiNewDashboardCardItemRequest defines model for apiNewDashboardCardItemRequest.
type ApiNewDashboardCardItemRequest struct {
	DashboardCardId int64   `json:"dashboardCardId"`
	Enabled         bool    `json:"enabled"`
	EntityId        *string `json:"entityId,omitempty"`
	Frozen          bool    `json:"frozen"`
	Hidden          bool    `json:"hidden"`
	Payload         []byte  `json:"payload"`
	Title           string  `json:"title"`
	Type            string  `json:"type"`
	Weight          int32   `json:"weight"`
}

// ApiNewDashboardCardRequest defines model for apiNewDashboardCardRequest.
type ApiNewDashboardCardRequest struct {
	Background     *string `json:"background,omitempty"`
	DashboardTabId int64   `json:"dashboardTabId"`
	Enabled        bool    `json:"enabled"`
	EntityId       *string `json:"entityId,omitempty"`
	Height         int32   `json:"height"`
	Hidden         bool    `json:"hidden"`
	Payload        []byte  `json:"payload"`
	Title          string  `json:"title"`
	Weight         int32   `json:"weight"`
	Width          int32   `json:"width"`
}

// ApiNewDashboardRequest defines model for apiNewDashboardRequest.
type ApiNewDashboardRequest struct {
	AreaId      *int64 `json:"areaId,omitempty"`
	Description string `json:"description"`
	Enabled     bool   `json:"enabled"`
	Name        string `json:"name"`
}

// ApiNewDashboardTabRequest defines model for apiNewDashboardTabRequest.
type ApiNewDashboardTabRequest struct {
	Background  *string `json:"background,omitempty"`
	ColumnWidth int32   `json:"columnWidth"`
	DashboardId int64   `json:"dashboardId"`
	Enabled     bool    `json:"enabled"`
	Gap         bool    `json:"gap"`
	Icon        string  `json:"icon"`
	Name        string  `json:"name"`
	Payload     []byte  `json:"payload"`
	Weight      int32   `json:"weight"`
}

// ApiNewEntityRequest defines model for apiNewEntityRequest.
type ApiNewEntityRequest struct {
	Actions      []ApiNewEntityRequestAction `json:"actions"`
	AreaId       *int64                      `json:"areaId,omitempty"`
	Attributes   map[string]ApiAttribute     `json:"attributes"`
	AutoLoad     bool                        `json:"autoLoad"`
	Description  string                      `json:"description"`
	Icon         *string                     `json:"icon,omitempty"`
	ImageId      *int64                      `json:"imageId,omitempty"`
	Metrics      []ApiMetric                 `json:"metrics"`
	Name         string                      `json:"name"`
	ParentId     *string                     `json:"parentId,omitempty"`
	PluginName   string                      `json:"pluginName"`
	RestoreState bool                        `json:"restoreState"`
	ScriptIds    []int64                     `json:"scriptIds"`
	Settings     map[string]ApiAttribute     `json:"settings"`
	States       []ApiNewEntityRequestState  `json:"states"`
	Tags         []string                    `json:"tags"`
}

// ApiNewEntityRequestAction defines model for apiNewEntityRequestAction.
type ApiNewEntityRequestAction struct {
	Description string  `json:"description"`
	Icon        *string `json:"icon,omitempty"`
	ImageId     *int64  `json:"imageId,omitempty"`
	Name        string  `json:"name"`
	ScriptId    *int64  `json:"scriptId,omitempty"`
	Type        string  `json:"type"`
}

// ApiNewEntityRequestState defines model for apiNewEntityRequestState.
type ApiNewEntityRequestState struct {
	Description string  `json:"description"`
	Icon        *string `json:"icon,omitempty"`
	ImageId     *int64  `json:"imageId,omitempty"`
	Name        string  `json:"name"`
	Style       string  `json:"style"`
}

// ApiNewImageRequest defines model for apiNewImageRequest.
type ApiNewImageRequest struct {
	Image    string `json:"image"`
	MimeType string `json:"mimeType"`
	Name     string `json:"name"`
	Size     int64  `json:"size"`
	Thumb    string `json:"thumb"`
	Title    string `json:"title"`
}

// ApiNewRoleRequest defines model for apiNewRoleRequest.
type ApiNewRoleRequest struct {
	Description string  `json:"description"`
	Name        string  `json:"name"`
	Parent      *string `json:"parent,omitempty"`
}

// ApiNewScriptRequest defines model for apiNewScriptRequest.
type ApiNewScriptRequest struct {
	Description string `json:"description"`
	Lang        string `json:"lang"`
	Name        string `json:"name"`
	Source      string `json:"source"`
}

// ApiNewTaskRequest defines model for apiNewTaskRequest.
type ApiNewTaskRequest struct {
	ActionIds    []int64 `json:"actionIds"`
	AreaId       *int64  `json:"areaId,omitempty"`
	Condition    string  `json:"condition"`
	ConditionIds []int64 `json:"conditionIds"`
	Description  string  `json:"description"`
	Enabled      bool    `json:"enabled"`
	Name         string  `json:"name"`
	TriggerIds   []int64 `json:"triggerIds"`
}

// ApiNewTriggerRequest defines model for apiNewTriggerRequest.
type ApiNewTriggerRequest struct {
	AreaId      *int64                  `json:"areaId,omitempty"`
	Attributes  map[string]ApiAttribute `json:"attributes"`
	Description string                  `json:"description"`
	Enabled     bool                    `json:"enabled"`
	EntityIds   []string                `json:"entityIds"`
	Name        string                  `json:"name"`
	PluginName  string                  `json:"pluginName"`
	ScriptId    *int64                  `json:"scriptId,omitempty"`
}

// ApiNewVariableRequest defines model for apiNewVariableRequest.
type ApiNewVariableRequest struct {
	Name  string   `json:"name"`
	Tags  []string `json:"tags"`
	Value string   `json:"value"`
}

// ApiNewZigbee2mqttRequest defines model for apiNewZigbee2mqttRequest.
type ApiNewZigbee2mqttRequest struct {
	BaseTopic  string  `json:"baseTopic"`
	Login      string  `json:"login"`
	Name       string  `json:"name"`
	Password   *string `json:"password,omitempty"`
	PermitJoin bool    `json:"permitJoin"`
}

// ApiNewtUserRequest defines model for apiNewtUserRequest.
type ApiNewtUserRequest struct {
	Email          string         `json:"email"`
	FirstName      *string        `json:"firstName,omitempty"`
	ImageId        *int64         `json:"imageId,omitempty"`
	Lang           *string        `json:"lang,omitempty"`
	LastName       *string        `json:"lastName,omitempty"`
	Meta           *[]ApiUserMeta `json:"meta,omitempty"`
	Nickname       string         `json:"nickname"`
	Password       string         `json:"password"`
	PasswordRepeat string         `json:"passwordRepeat"`
	RoleName       string         `json:"roleName"`
	Status         *string        `json:"status,omitempty"`
}

// ApiPagination defines model for apiPagination.
type ApiPagination struct {
	Limit uint64 `json:"limit"`
	Page  uint64 `json:"page"`
	Total uint64 `json:"total"`
}

// ApiPasswordResetRequest defines model for apiPasswordResetRequest.
type ApiPasswordResetRequest struct {
	Email       string  `json:"email"`
	NewPassword *string `json:"newPassword,omitempty"`
	Token       *string `json:"token,omitempty"`
}

// ApiPlugin defines model for apiPlugin.
type ApiPlugin struct {
	Actor    bool                    `json:"actor"`
	Enabled  bool                    `json:"enabled"`
	IsLoaded *bool                   `json:"isLoaded,omitempty"`
	Name     string                  `json:"name"`
	Options  *ApiPluginOptionsResult `json:"options,omitempty"`
	Settings map[string]ApiAttribute `json:"settings"`
	System   bool                    `json:"system"`
	Version  string                  `json:"version"`
}

// ApiPluginOptionsResult defines model for apiPluginOptionsResult.
type ApiPluginOptionsResult struct {
	ActorActions       map[string]ApiPluginOptionsResultEntityAction `json:"actorActions"`
	ActorAttrs         map[string]ApiAttribute                       `json:"actorAttrs"`
	ActorCustomActions bool                                          `json:"actorCustomActions"`
	ActorCustomAttrs   bool                                          `json:"actorCustomAttrs"`
	ActorCustomSetts   bool                                          `json:"actorCustomSetts"`
	ActorCustomStates  bool                                          `json:"actorCustomStates"`
	ActorSetts         map[string]ApiAttribute                       `json:"actorSetts"`
	ActorStates        map[string]ApiPluginOptionsResultEntityState  `json:"actorStates"`
	Actors             bool                                          `json:"actors"`
	Setts              map[string]ApiAttribute                       `json:"setts"`
	TriggerParams      ApiTriggerParams                              `json:"triggerParams"`
	Triggers           bool                                          `json:"triggers"`
}

// ApiPluginOptionsResultEntityAction defines model for apiPluginOptionsResultEntityAction.
type ApiPluginOptionsResultEntityAction struct {
	Description string `json:"description"`
	Icon        string `json:"icon"`
	ImageUrl    string `json:"imageUrl"`
	Name        string `json:"name"`
}

// ApiPluginOptionsResultEntityState defines model for apiPluginOptionsResultEntityState.
type ApiPluginOptionsResultEntityState struct {
	Description string `json:"description"`
	Icon        string `json:"icon"`
	ImageUrl    string `json:"imageUrl"`
	Name        string `json:"name"`
}

// ApiPluginShort defines model for apiPluginShort.
type ApiPluginShort struct {
	Actor    *bool  `json:"actor,omitempty"`
	Enabled  bool   `json:"enabled"`
	IsLoaded *bool  `json:"isLoaded,omitempty"`
	Name     string `json:"name"`
	System   bool   `json:"system"`
	Version  string `json:"version"`
}

// ApiReloadRequest defines model for apiReloadRequest.
type ApiReloadRequest struct {
	Id string `json:"id"`
}

// ApiResponse defines model for apiResponse.
type ApiResponse struct {
	Body  *[]byte `json:"body,omitempty"`
	Id    *string `json:"id,omitempty"`
	Query *string `json:"query,omitempty"`
}

// ApiRole defines model for apiRole.
type ApiRole struct {
	AccessList  *ApiRoleAccessList `json:"accessList,omitempty"`
	Children    []ApiRole          `json:"children"`
	CreatedAt   time.Time          `json:"createdAt"`
	Description string             `json:"description"`
	Name        string             `json:"name"`
	Parent      *ApiRole           `json:"parent,omitempty"`
	UpdatedAt   time.Time          `json:"updatedAt"`
}

// ApiRoleAccessList defines model for apiRoleAccessList.
type ApiRoleAccessList struct {
	Levels map[string]AccessListListOfString `json:"levels"`
}

// ApiRoleAccessListResult defines model for apiRoleAccessListResult.
type ApiRoleAccessListResult struct {
	Levels map[string]ApiAccessLevels `json:"levels"`
}

// ApiScript defines model for apiScript.
type ApiScript struct {
	CreatedAt   time.Time          `json:"createdAt"`
	Description string             `json:"description"`
	Id          int64              `json:"id"`
	Lang        string             `json:"lang"`
	Name        string             `json:"name"`
	ScriptInfo  *ApiScriptInfo     `json:"scriptInfo,omitempty"`
	Source      string             `json:"source"`
	UpdatedAt   time.Time          `json:"updatedAt"`
	Versions    []ApiScriptVersion `json:"versions"`
}

// ApiScriptInfo defines model for apiScriptInfo.
type ApiScriptInfo struct {
	AlexaIntents         int32 `json:"alexaIntents"`
	AutomationActions    int32 `json:"automationActions"`
	AutomationConditions int32 `json:"automationConditions"`
	AutomationTriggers   int32 `json:"automationTriggers"`
	EntityActions        int32 `json:"entityActions"`
	EntityScripts        int32 `json:"entityScripts"`
}

// ApiScriptVersion defines model for apiScriptVersion.
type ApiScriptVersion struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        int64     `json:"id"`
	Lang      string    `json:"lang"`
	Source    string    `json:"source"`
}

// ApiSearchActionResult defines model for apiSearchActionResult.
type ApiSearchActionResult struct {
	Items []ApiAction `json:"items"`
}

// ApiSearchAreaResult defines model for apiSearchAreaResult.
type ApiSearchAreaResult struct {
	Items []ApiArea `json:"items"`
}

// ApiSearchConditionResult defines model for apiSearchConditionResult.
type ApiSearchConditionResult struct {
	Items []ApiCondition `json:"items"`
}

// ApiSearchDashboardResult defines model for apiSearchDashboardResult.
type ApiSearchDashboardResult struct {
	Items []ApiDashboard `json:"items"`
}

// ApiSearchDeviceResult defines model for apiSearchDeviceResult.
type ApiSearchDeviceResult struct {
	Items []ApiZigbee2mqttDevice `json:"items"`
}

// ApiSearchEntityResult defines model for apiSearchEntityResult.
type ApiSearchEntityResult struct {
	Items []ApiEntityShort `json:"items"`
}

// ApiSearchPluginResult defines model for apiSearchPluginResult.
type ApiSearchPluginResult struct {
	Items []ApiPluginShort `json:"items"`
}

// ApiSearchRoleListResult defines model for apiSearchRoleListResult.
type ApiSearchRoleListResult struct {
	Items []ApiRole `json:"items"`
}

// ApiSearchScriptListResult defines model for apiSearchScriptListResult.
type ApiSearchScriptListResult struct {
	Items []ApiScript `json:"items"`
}

// ApiSearchTagListResult defines model for apiSearchTagListResult.
type ApiSearchTagListResult struct {
	Items []ApiTag `json:"items"`
}

// ApiSearchTriggerResult defines model for apiSearchTriggerResult.
type ApiSearchTriggerResult struct {
	Items []ApiTrigger `json:"items"`
}

// ApiSearchVariableResult defines model for apiSearchVariableResult.
type ApiSearchVariableResult struct {
	Items []ApiVariable `json:"items"`
}

// ApiSigninResponse defines model for apiSigninResponse.
type ApiSigninResponse struct {
	AccessToken string          `json:"accessToken"`
	CurrentUser *ApiCurrentUser `json:"currentUser,omitempty"`
}

// ApiStatistic defines model for apiStatistic.
type ApiStatistic struct {
	Description string `json:"description"`
	Diff        int32  `json:"diff"`
	Name        string `json:"name"`
	Value       int32  `json:"value"`
}

// ApiStatistics defines model for apiStatistics.
type ApiStatistics struct {
	Items []ApiStatistic `json:"items"`
}

// ApiSubscription defines model for apiSubscription.
type ApiSubscription struct {
	ClientId          string `json:"clientId"`
	Id                uint32 `json:"id"`
	Name              string `json:"name"`
	NoLocal           bool   `json:"noLocal"`
	Qos               uint32 `json:"qos"`
	RetainAsPublished bool   `json:"retainAsPublished"`
	RetainHandling    uint32 `json:"retainHandling"`
	TopicName         string `json:"topicName"`
}

// ApiTag defines model for apiTag.
type ApiTag struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

// ApiTask defines model for apiTask.
type ApiTask struct {
	ActionIds    []int64            `json:"actionIds"`
	Actions      []ApiAction        `json:"actions"`
	Area         *ApiArea           `json:"area,omitempty"`
	AreaId       *int64             `json:"areaId,omitempty"`
	Completed    *bool              `json:"completed,omitempty"`
	Condition    string             `json:"condition"`
	ConditionIds []int64            `json:"conditionIds"`
	Conditions   []ApiCondition     `json:"conditions"`
	CreatedAt    time.Time          `json:"createdAt"`
	Description  string             `json:"description"`
	Enabled      bool               `json:"enabled"`
	Id           int64              `json:"id"`
	IsLoaded     *bool              `json:"isLoaded,omitempty"`
	Name         string             `json:"name"`
	Telemetry    []ApiTelemetryItem `json:"telemetry"`
	TriggerIds   []int64            `json:"triggerIds"`
	Triggers     []ApiTrigger       `json:"triggers"`
	UpdatedAt    time.Time          `json:"updatedAt"`
}

// ApiTelemetryItem defines model for apiTelemetryItem.
type ApiTelemetryItem struct {
	Attributes   map[string]string `json:"attributes"`
	End          *int64            `json:"end,omitempty"`
	Level        int32             `json:"level"`
	Name         string            `json:"name"`
	Num          int32             `json:"num"`
	Start        int64             `json:"start"`
	Status       string            `json:"status"`
	TimeEstimate int64             `json:"timeEstimate"`
}

// ApiTrigger defines model for apiTrigger.
type ApiTrigger struct {
	Area        *ApiArea                `json:"area,omitempty"`
	AreaId      *int64                  `json:"areaId,omitempty"`
	Attributes  map[string]ApiAttribute `json:"attributes"`
	Completed   *bool                   `json:"completed,omitempty"`
	CreatedAt   time.Time               `json:"createdAt"`
	Description string                  `json:"description"`
	Enabled     bool                    `json:"enabled"`
	Entities    []ApiEntityShort        `json:"entities"`
	EntityIds   []string                `json:"entityIds"`
	Id          int64                   `json:"id"`
	IsLoaded    *bool                   `json:"isLoaded,omitempty"`
	Name        string                  `json:"name"`
	PluginName  string                  `json:"pluginName"`
	Script      *ApiScript              `json:"script,omitempty"`
	ScriptId    *int64                  `json:"scriptId,omitempty"`
	UpdatedAt   time.Time               `json:"updatedAt"`
}

// ApiTriggerParams defines model for apiTriggerParams.
type ApiTriggerParams struct {
	Attributes map[string]ApiAttribute `json:"attributes"`
	Entities   bool                    `json:"entities"`
	Required   []string                `json:"required"`
	Script     bool                    `json:"script"`
}

// ApiTypes defines model for apiTypes.
type ApiTypes string

// ApiUpdateEntityRequestAction defines model for apiUpdateEntityRequestAction.
type ApiUpdateEntityRequestAction struct {
	Description string  `json:"description"`
	Icon        *string `json:"icon,omitempty"`
	ImageId     *int64  `json:"imageId,omitempty"`
	Name        string  `json:"name"`
	ScriptId    *int64  `json:"scriptId,omitempty"`
	Type        string  `json:"type"`
}

// ApiUpdateEntityRequestState defines model for apiUpdateEntityRequestState.
type ApiUpdateEntityRequestState struct {
	Description string  `json:"description"`
	Icon        *string `json:"icon,omitempty"`
	ImageId     *int64  `json:"imageId,omitempty"`
	Name        string  `json:"name"`
	Style       string  `json:"style"`
}

// ApiUserFull defines model for apiUserFull.
type ApiUserFull struct {
	AuthenticationToken string             `json:"authenticationToken"`
	CreatedAt           time.Time          `json:"createdAt"`
	CurrentSignInAt     *time.Time         `json:"currentSignInAt,omitempty"`
	CurrentSignInIp     *string            `json:"currentSignInIp,omitempty"`
	DeletedAt           *time.Time         `json:"deletedAt,omitempty"`
	Email               string             `json:"email"`
	FirstName           *string            `json:"firstName,omitempty"`
	History             []ApiUserHistory   `json:"history"`
	Id                  int64              `json:"id"`
	Image               *ApiImage          `json:"image,omitempty"`
	Lang                string             `json:"lang"`
	LastName            *string            `json:"lastName,omitempty"`
	LastSignInAt        *time.Time         `json:"lastSignInAt,omitempty"`
	LastSignInIp        *string            `json:"lastSignInIp,omitempty"`
	Meta                []ApiUserMeta      `json:"meta"`
	Nickname            string             `json:"nickname"`
	ResetPasswordSentAt *time.Time         `json:"resetPasswordSentAt,omitempty"`
	Role                ApiRole            `json:"role"`
	RoleName            string             `json:"roleName"`
	SignInCount         int64              `json:"signInCount"`
	Status              string             `json:"status"`
	UpdatedAt           time.Time          `json:"updatedAt"`
	User                *ApiUserFullParent `json:"user,omitempty"`
}

// ApiUserFullParent defines model for apiUserFullParent.
type ApiUserFullParent struct {
	Id       int64  `json:"id"`
	Nickname string `json:"nickname"`
}

// ApiUserHistory defines model for apiUserHistory.
type ApiUserHistory struct {
	Ip   string    `json:"ip"`
	Time time.Time `json:"time"`
}

// ApiUserMeta defines model for apiUserMeta.
type ApiUserMeta struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// ApiUserShot defines model for apiUserShot.
type ApiUserShot struct {
	CreatedAt time.Time          `json:"createdAt"`
	Email     string             `json:"email"`
	FirstName *string            `json:"firstName,omitempty"`
	Id        int64              `json:"id"`
	Image     *ApiImage          `json:"image,omitempty"`
	Lang      string             `json:"lang"`
	LastName  *string            `json:"lastName,omitempty"`
	Nickname  string             `json:"nickname"`
	Role      ApiRole            `json:"role"`
	RoleName  string             `json:"roleName"`
	Status    string             `json:"status"`
	UpdatedAt time.Time          `json:"updatedAt"`
	User      *ApiUserShotParent `json:"user,omitempty"`
}

// ApiUserShotParent defines model for apiUserShotParent.
type ApiUserShotParent struct {
	Id       int64  `json:"id"`
	Nickname string `json:"nickname"`
}

// ApiVariable defines model for apiVariable.
type ApiVariable struct {
	CreatedAt time.Time `json:"createdAt"`
	Name      string    `json:"name"`
	System    bool      `json:"system"`
	Tags      []string  `json:"tags"`
	UpdatedAt time.Time `json:"updatedAt"`
	Value     string    `json:"value"`
}

// ApiZigbee2mqtt defines model for apiZigbee2mqtt.
type ApiZigbee2mqtt struct {
	BaseTopic     string     `json:"baseTopic"`
	CreatedAt     time.Time  `json:"createdAt"`
	Id            int64      `json:"id"`
	LastScan      *time.Time `json:"lastScan,omitempty"`
	Login         string     `json:"login"`
	Name          string     `json:"name"`
	Networkmap    string     `json:"networkmap"`
	PermitJoin    bool       `json:"permitJoin"`
	ScanInProcess bool       `json:"scanInProcess"`
	Status        string     `json:"status"`
	UpdatedAt     time.Time  `json:"updatedAt"`
}

// ApiZigbee2mqttDevice defines model for apiZigbee2mqttDevice.
type ApiZigbee2mqttDevice struct {
	CreatedAt     time.Time `json:"createdAt"`
	Description   string    `json:"description"`
	Functions     []string  `json:"functions"`
	Icon          string    `json:"icon"`
	Id            string    `json:"id"`
	ImageUrl      string    `json:"imageUrl"`
	Manufacturer  string    `json:"manufacturer"`
	Model         string    `json:"model"`
	Name          string    `json:"name"`
	Status        string    `json:"status"`
	Type          string    `json:"type"`
	UpdatedAt     time.Time `json:"updatedAt"`
	Zigbee2mqttId int64     `json:"zigbee2mqttId"`
}

// ApiZigbee2mqttShort defines model for apiZigbee2mqttShort.
type ApiZigbee2mqttShort struct {
	BaseTopic  string    `json:"baseTopic"`
	CreatedAt  time.Time `json:"createdAt"`
	Id         int64     `json:"id"`
	Login      string    `json:"login"`
	Name       string    `json:"name"`
	PermitJoin bool      `json:"permitJoin"`
	UpdatedAt  time.Time `json:"updatedAt"`
}

// AcceptJSON defines model for Accept-JSON.
type AcceptJSON = string

// EndDate defines model for endDate.
type EndDate = time.Time

// EntityIds defines model for entityIds.
type EntityIds = []string

// Ids defines model for ids.
type Ids = []uint64

// ListLimit defines model for listLimit.
type ListLimit = uint64

// ListPage defines model for listPage.
type ListPage = uint64

// ListSort defines model for listSort.
type ListSort = string

// MetricId defines model for metricId.
type MetricId = int64

// MetricRange defines model for metricRange.
type MetricRange string

// Query defines model for query.
type Query = string

// SearchLimit defines model for searchLimit.
type SearchLimit = int64

// SearchOffset defines model for searchOffset.
type SearchOffset = int64

// SearchQuery defines model for searchQuery.
type SearchQuery = string

// StartDate defines model for startDate.
type StartDate = time.Time

// Tags defines model for tags.
type Tags = []string

// HTTP400 defines model for HTTP-400.
type HTTP400 struct {
	Error *GenericErrorResponse `json:"error,omitempty"`
}

// HTTP401 defines model for HTTP-401.
type HTTP401 struct {
	Error *struct {
		Code    *HTTP401ErrorCode `json:"code,omitempty"`
		Message *string           `json:"message,omitempty"`
	} `json:"error,omitempty"`
}

// HTTP404 defines model for HTTP-404.
type HTTP404 struct {
	Error *GenericErrorResponse `json:"error,omitempty"`
}

// HTTP409 defines model for HTTP-409.
type HTTP409 struct {
	Error *GenericErrorResponse `json:"error,omitempty"`
}

// HTTP413 defines model for HTTP-413.
type HTTP413 struct {
	Error *GenericErrorResponse `json:"error,omitempty"`
}

// ActionServiceAddActionParams defines parameters for ActionServiceAddAction.
type ActionServiceAddActionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ActionServiceUpdateActionJSONBody defines parameters for ActionServiceUpdateAction.
type ActionServiceUpdateActionJSONBody struct {
	AreaId           *int64  `json:"areaId,omitempty"`
	Description      string  `json:"description"`
	EntityActionName *string `json:"entityActionName,omitempty"`
	EntityId         *string `json:"entityId,omitempty"`
	Name             string  `json:"name"`
	ScriptId         *int64  `json:"scriptId,omitempty"`
}

// ActionServiceUpdateActionParams defines parameters for ActionServiceUpdateAction.
type ActionServiceUpdateActionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ActionServiceGetActionListParams defines parameters for ActionServiceGetActionList.
type ActionServiceGetActionListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Ids The number of results returned on a page
	Ids *Ids `form:"ids[],omitempty" json:"ids[],omitempty"`
}

// ActionServiceSearchActionParams defines parameters for ActionServiceSearchAction.
type ActionServiceSearchActionParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// AreaServiceAddAreaParams defines parameters for AreaServiceAddArea.
type AreaServiceAddAreaParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// AreaServiceUpdateAreaJSONBody defines parameters for AreaServiceUpdateArea.
type AreaServiceUpdateAreaJSONBody struct {
	Center      *ApiAreaLocation  `json:"center,omitempty"`
	Description string            `json:"description"`
	Name        string            `json:"name"`
	Polygon     []ApiAreaLocation `json:"polygon"`
	Resolution  float32           `json:"resolution"`
	Zoom        float32           `json:"zoom"`
}

// AreaServiceUpdateAreaParams defines parameters for AreaServiceUpdateArea.
type AreaServiceUpdateAreaParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// AreaServiceGetAreaListParams defines parameters for AreaServiceGetAreaList.
type AreaServiceGetAreaListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// AreaServiceSearchAreaParams defines parameters for AreaServiceSearchArea.
type AreaServiceSearchAreaParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// BackupServiceApplyStateParams defines parameters for BackupServiceApplyState.
type BackupServiceApplyStateParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// BackupServiceRevertStateParams defines parameters for BackupServiceRevertState.
type BackupServiceRevertStateParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// BackupServiceUploadBackupMultipartBody defines parameters for BackupServiceUploadBackup.
type BackupServiceUploadBackupMultipartBody struct {
	Filename *[]openapi_types.File `json:"filename,omitempty"`
}

// BackupServiceUploadBackupParams defines parameters for BackupServiceUploadBackup.
type BackupServiceUploadBackupParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// BackupServiceGetBackupListParams defines parameters for BackupServiceGetBackupList.
type BackupServiceGetBackupListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// BackupServiceNewBackupJSONBody defines parameters for BackupServiceNewBackup.
type BackupServiceNewBackupJSONBody = map[string]interface{}

// BackupServiceNewBackupParams defines parameters for BackupServiceNewBackup.
type BackupServiceNewBackupParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ConditionServiceAddConditionParams defines parameters for ConditionServiceAddCondition.
type ConditionServiceAddConditionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ConditionServiceGetConditionByIdParams defines parameters for ConditionServiceGetConditionById.
type ConditionServiceGetConditionByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ConditionServiceUpdateConditionJSONBody defines parameters for ConditionServiceUpdateCondition.
type ConditionServiceUpdateConditionJSONBody struct {
	AreaId      *int64 `json:"areaId,omitempty"`
	Description string `json:"description"`
	Name        string `json:"name"`
	ScriptId    *int64 `json:"scriptId,omitempty"`
}

// ConditionServiceUpdateConditionParams defines parameters for ConditionServiceUpdateCondition.
type ConditionServiceUpdateConditionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ConditionServiceGetConditionListParams defines parameters for ConditionServiceGetConditionList.
type ConditionServiceGetConditionListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Ids The number of results returned on a page
	Ids *Ids `form:"ids[],omitempty" json:"ids[],omitempty"`
}

// ConditionServiceSearchConditionParams defines parameters for ConditionServiceSearchCondition.
type ConditionServiceSearchConditionParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// DashboardServiceAddDashboardParams defines parameters for DashboardServiceAddDashboard.
type DashboardServiceAddDashboardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardServiceUpdateDashboardJSONBody defines parameters for DashboardServiceUpdateDashboard.
type DashboardServiceUpdateDashboardJSONBody struct {
	AreaId      *int64 `json:"areaId,omitempty"`
	Description string `json:"description"`
	Enabled     bool   `json:"enabled"`
	Name        string `json:"name"`
}

// DashboardServiceUpdateDashboardParams defines parameters for DashboardServiceUpdateDashboard.
type DashboardServiceUpdateDashboardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardServiceAddDashboardCardParams defines parameters for DashboardCardServiceAddDashboardCard.
type DashboardCardServiceAddDashboardCardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardServiceImportDashboardCardParams defines parameters for DashboardCardServiceImportDashboardCard.
type DashboardCardServiceImportDashboardCardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardServiceUpdateDashboardCardJSONBody defines parameters for DashboardCardServiceUpdateDashboardCard.
type DashboardCardServiceUpdateDashboardCardJSONBody struct {
	Background     *string                          `json:"background,omitempty"`
	DashboardTabId int64                            `json:"dashboardTabId"`
	Enabled        bool                             `json:"enabled"`
	EntityId       *string                          `json:"entityId,omitempty"`
	Height         int32                            `json:"height"`
	Hidden         bool                             `json:"hidden"`
	Items          []UpdateDashboardCardRequestItem `json:"items"`
	Payload        []byte                           `json:"payload"`
	Title          string                           `json:"title"`
	Weight         int32                            `json:"weight"`
	Width          int32                            `json:"width"`
}

// DashboardCardServiceUpdateDashboardCardParams defines parameters for DashboardCardServiceUpdateDashboardCard.
type DashboardCardServiceUpdateDashboardCardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardItemServiceAddDashboardCardItemParams defines parameters for DashboardCardItemServiceAddDashboardCardItem.
type DashboardCardItemServiceAddDashboardCardItemParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardItemServiceUpdateDashboardCardItemJSONBody defines parameters for DashboardCardItemServiceUpdateDashboardCardItem.
type DashboardCardItemServiceUpdateDashboardCardItemJSONBody struct {
	DashboardCardId int64   `json:"dashboardCardId"`
	Enabled         bool    `json:"enabled"`
	EntityId        *string `json:"entityId,omitempty"`
	Frozen          bool    `json:"frozen"`
	Hidden          bool    `json:"hidden"`
	Payload         []byte  `json:"payload"`
	Title           string  `json:"title"`
	Type            string  `json:"type"`
	Weight          int32   `json:"weight"`
}

// DashboardCardItemServiceUpdateDashboardCardItemParams defines parameters for DashboardCardItemServiceUpdateDashboardCardItem.
type DashboardCardItemServiceUpdateDashboardCardItemParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardCardItemServiceGetDashboardCardItemListParams defines parameters for DashboardCardItemServiceGetDashboardCardItemList.
type DashboardCardItemServiceGetDashboardCardItemListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// DashboardCardServiceGetDashboardCardListParams defines parameters for DashboardCardServiceGetDashboardCardList.
type DashboardCardServiceGetDashboardCardListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// DashboardTabServiceAddDashboardTabParams defines parameters for DashboardTabServiceAddDashboardTab.
type DashboardTabServiceAddDashboardTabParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardTabServiceUpdateDashboardTabJSONBody defines parameters for DashboardTabServiceUpdateDashboardTab.
type DashboardTabServiceUpdateDashboardTabJSONBody struct {
	Background  *string `json:"background,omitempty"`
	ColumnWidth int32   `json:"columnWidth"`
	DashboardId int64   `json:"dashboardId"`
	Enabled     bool    `json:"enabled"`
	Gap         bool    `json:"gap"`
	Icon        string  `json:"icon"`
	Name        string  `json:"name"`
	Payload     []byte  `json:"payload"`
	Weight      int32   `json:"weight"`
}

// DashboardTabServiceUpdateDashboardTabParams defines parameters for DashboardTabServiceUpdateDashboardTab.
type DashboardTabServiceUpdateDashboardTabParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardTabServiceGetDashboardTabListParams defines parameters for DashboardTabServiceGetDashboardTabList.
type DashboardTabServiceGetDashboardTabListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// DashboardTabServiceImportDashboardTabParams defines parameters for DashboardTabServiceImportDashboardTab.
type DashboardTabServiceImportDashboardTabParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardServiceGetDashboardListParams defines parameters for DashboardServiceGetDashboardList.
type DashboardServiceGetDashboardListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// DashboardServiceImportDashboardParams defines parameters for DashboardServiceImportDashboard.
type DashboardServiceImportDashboardParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DashboardServiceSearchDashboardParams defines parameters for DashboardServiceSearchDashboard.
type DashboardServiceSearchDashboardParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// DeveloperToolsServiceCallActionParams defines parameters for DeveloperToolsServiceCallAction.
type DeveloperToolsServiceCallActionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DeveloperToolsServiceCallTriggerParams defines parameters for DeveloperToolsServiceCallTrigger.
type DeveloperToolsServiceCallTriggerParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DeveloperToolsServiceGetEventBusStateListParams defines parameters for DeveloperToolsServiceGetEventBusStateList.
type DeveloperToolsServiceGetEventBusStateListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// DeveloperToolsServiceReloadEntityParams defines parameters for DeveloperToolsServiceReloadEntity.
type DeveloperToolsServiceReloadEntityParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// DeveloperToolsServiceEntitySetStateParams defines parameters for DeveloperToolsServiceEntitySetState.
type DeveloperToolsServiceEntitySetStateParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// EntityServiceGetEntityListParams defines parameters for EntityServiceGetEntityList.
type EntityServiceGetEntityListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit  *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	Query  *Query     `form:"query,omitempty" json:"query,omitempty"`
	Tags   *Tags      `form:"tags[],omitempty" json:"tags[],omitempty"`
	Plugin *string    `form:"plugin,omitempty" json:"plugin,omitempty"`
	Area   *int64     `form:"area,omitempty" json:"area,omitempty"`
}

// EntityServiceImportEntityParams defines parameters for EntityServiceImportEntity.
type EntityServiceImportEntityParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// EntityServiceAddEntityParams defines parameters for EntityServiceAddEntity.
type EntityServiceAddEntityParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// EntityServiceSearchEntityParams defines parameters for EntityServiceSearchEntity.
type EntityServiceSearchEntityParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// EntityServiceUpdateEntityJSONBody defines parameters for EntityServiceUpdateEntity.
type EntityServiceUpdateEntityJSONBody struct {
	Actions      []ApiUpdateEntityRequestAction `json:"actions"`
	AreaId       *int64                         `json:"areaId,omitempty"`
	Attributes   map[string]ApiAttribute        `json:"attributes"`
	AutoLoad     bool                           `json:"autoLoad"`
	Description  string                         `json:"description"`
	Icon         *string                        `json:"icon,omitempty"`
	Id           string                         `json:"id"`
	ImageId      *int64                         `json:"imageId,omitempty"`
	Metrics      []ApiMetric                    `json:"metrics"`
	Name         *string                        `json:"name,omitempty"`
	ParentId     *string                        `json:"parentId,omitempty"`
	PluginName   string                         `json:"pluginName"`
	RestoreState bool                           `json:"restoreState"`
	ScriptIds    []int64                        `json:"scriptIds"`
	Settings     map[string]ApiAttribute        `json:"settings"`
	States       []ApiUpdateEntityRequestState  `json:"states"`
	Tags         []string                       `json:"tags"`
}

// EntityServiceUpdateEntityParams defines parameters for EntityServiceUpdateEntity.
type EntityServiceUpdateEntityParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// EntityStorageServiceGetEntityStorageListParams defines parameters for EntityStorageServiceGetEntityStorageList.
type EntityStorageServiceGetEntityStorageListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit     *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	StartDate *StartDate `form:"startDate,omitempty" json:"startDate,omitempty"`
	EndDate   *EndDate   `form:"endDate,omitempty" json:"endDate,omitempty"`
	EntityId  *EntityIds `form:"entityId[],omitempty" json:"entityId[],omitempty"`
}

// ImageServiceAddImageParams defines parameters for ImageServiceAddImage.
type ImageServiceAddImageParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ImageServiceUploadImageMultipartBody defines parameters for ImageServiceUploadImage.
type ImageServiceUploadImageMultipartBody struct {
	Filename *[]openapi_types.File `json:"filename,omitempty"`
}

// ImageServiceUploadImageParams defines parameters for ImageServiceUploadImage.
type ImageServiceUploadImageParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ImageServiceUpdateImageByIdJSONBody defines parameters for ImageServiceUpdateImageById.
type ImageServiceUpdateImageByIdJSONBody struct {
	Image    string `json:"image"`
	MimeType string `json:"mimeType"`
	Name     string `json:"name"`
	Size     int64  `json:"size"`
	Thumb    string `json:"thumb"`
	Title    string `json:"title"`
}

// ImageServiceUpdateImageByIdParams defines parameters for ImageServiceUpdateImageById.
type ImageServiceUpdateImageByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ImageServiceGetImageListParams defines parameters for ImageServiceGetImageList.
type ImageServiceGetImageListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// ImageServiceGetImageListByDateParams defines parameters for ImageServiceGetImageListByDate.
type ImageServiceGetImageListByDateParams struct {
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// InteractServiceEntityCallActionParams defines parameters for InteractServiceEntityCallAction.
type InteractServiceEntityCallActionParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// LogServiceGetLogListParams defines parameters for LogServiceGetLogList.
type LogServiceGetLogListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit     *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	StartDate *StartDate `form:"startDate,omitempty" json:"startDate,omitempty"`
	EndDate   *EndDate   `form:"endDate,omitempty" json:"endDate,omitempty"`
	Query     *Query     `form:"query,omitempty" json:"query,omitempty"`
}

// MessageDeliveryServiceGetMessageDeliveryListParams defines parameters for MessageDeliveryServiceGetMessageDeliveryList.
type MessageDeliveryServiceGetMessageDeliveryListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit       *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	StartDate   *StartDate `form:"startDate,omitempty" json:"startDate,omitempty"`
	EndDate     *EndDate   `form:"endDate,omitempty" json:"endDate,omitempty"`
	MessageType *string    `form:"messageType,omitempty" json:"messageType,omitempty"`
}

// MetricServiceGetMetricParams defines parameters for MetricServiceGetMetric.
type MetricServiceGetMetricParams struct {
	Id        MetricId                           `form:"id" json:"id"`
	Range     *MetricServiceGetMetricParamsRange `form:"range,omitempty" json:"range,omitempty"`
	StartDate *StartDate                         `form:"startDate,omitempty" json:"startDate,omitempty"`
	EndDate   *EndDate                           `form:"endDate,omitempty" json:"endDate,omitempty"`
}

// MetricServiceGetMetricParamsRange defines parameters for MetricServiceGetMetric.
type MetricServiceGetMetricParamsRange string

// MqttServiceGetClientListParams defines parameters for MqttServiceGetClientList.
type MqttServiceGetClientListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// MqttServiceGetSubscriptionListParams defines parameters for MqttServiceGetSubscriptionList.
type MqttServiceGetSubscriptionListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit    *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	ClientId *string    `form:"clientId,omitempty" json:"clientId,omitempty"`
}

// AuthServicePasswordResetParams defines parameters for AuthServicePasswordReset.
type AuthServicePasswordResetParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// PluginServiceGetPluginReadmeParams defines parameters for PluginServiceGetPluginReadme.
type PluginServiceGetPluginReadmeParams struct {
	Note   *string     `form:"note,omitempty" json:"note,omitempty"`
	Lang   *string     `form:"lang,omitempty" json:"lang,omitempty"`
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// PluginServiceUpdatePluginSettingsJSONBody defines parameters for PluginServiceUpdatePluginSettings.
type PluginServiceUpdatePluginSettingsJSONBody struct {
	Settings map[string]ApiAttribute `json:"settings"`
}

// PluginServiceUpdatePluginSettingsParams defines parameters for PluginServiceUpdatePluginSettings.
type PluginServiceUpdatePluginSettingsParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// PluginServiceGetPluginListParams defines parameters for PluginServiceGetPluginList.
type PluginServiceGetPluginListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit    *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	Triggers *bool      `form:"triggers,omitempty" json:"triggers,omitempty"`
	Enabled  *bool      `form:"enabled,omitempty" json:"enabled,omitempty"`
}

// PluginServiceSearchPluginParams defines parameters for PluginServiceSearchPlugin.
type PluginServiceSearchPluginParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// RoleServiceAddRoleParams defines parameters for RoleServiceAddRole.
type RoleServiceAddRoleParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// RoleServiceUpdateRoleByNameJSONBody defines parameters for RoleServiceUpdateRoleByName.
type RoleServiceUpdateRoleByNameJSONBody struct {
	Description string  `json:"description"`
	Parent      *string `json:"parent,omitempty"`
}

// RoleServiceUpdateRoleByNameParams defines parameters for RoleServiceUpdateRoleByName.
type RoleServiceUpdateRoleByNameParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// RoleServiceUpdateRoleAccessListJSONBody defines parameters for RoleServiceUpdateRoleAccessList.
type RoleServiceUpdateRoleAccessListJSONBody struct {
	AccessListDiff map[string]UpdateRoleAccessListRequestAccessListDiff `json:"accessListDiff"`
}

// RoleServiceUpdateRoleAccessListParams defines parameters for RoleServiceUpdateRoleAccessList.
type RoleServiceUpdateRoleAccessListParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// RoleServiceGetRoleListParams defines parameters for RoleServiceGetRoleList.
type RoleServiceGetRoleListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// RoleServiceSearchRoleByNameParams defines parameters for RoleServiceSearchRoleByName.
type RoleServiceSearchRoleByNameParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// ScriptServiceAddScriptParams defines parameters for ScriptServiceAddScript.
type ScriptServiceAddScriptParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ScriptServiceExecSrcScriptByIdParams defines parameters for ScriptServiceExecSrcScriptById.
type ScriptServiceExecSrcScriptByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ScriptServiceUpdateScriptByIdJSONBody defines parameters for ScriptServiceUpdateScriptById.
type ScriptServiceUpdateScriptByIdJSONBody struct {
	Description string `json:"description"`
	Lang        string `json:"lang"`
	Name        string `json:"name"`
	Source      string `json:"source"`
}

// ScriptServiceUpdateScriptByIdParams defines parameters for ScriptServiceUpdateScriptById.
type ScriptServiceUpdateScriptByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// ScriptServiceGetScriptListParams defines parameters for ScriptServiceGetScriptList.
type ScriptServiceGetScriptListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Ids The number of results returned on a page
	Ids   *Ids   `form:"ids[],omitempty" json:"ids[],omitempty"`
	Query *Query `form:"query,omitempty" json:"query,omitempty"`
}

// ScriptServiceSearchScriptParams defines parameters for ScriptServiceSearchScript.
type ScriptServiceSearchScriptParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// TagServiceUpdateTagByIdJSONBody defines parameters for TagServiceUpdateTagById.
type TagServiceUpdateTagByIdJSONBody struct {
	Name string `json:"name"`
}

// TagServiceUpdateTagByIdParams defines parameters for TagServiceUpdateTagById.
type TagServiceUpdateTagByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// TagServiceGetTagListParams defines parameters for TagServiceGetTagList.
type TagServiceGetTagListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
	Query *Query     `form:"query,omitempty" json:"query,omitempty"`
	Tags  *Tags      `form:"tags[],omitempty" json:"tags[],omitempty"`
}

// TagServiceSearchTagParams defines parameters for TagServiceSearchTag.
type TagServiceSearchTagParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// AutomationServiceAddTaskParams defines parameters for AutomationServiceAddTask.
type AutomationServiceAddTaskParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// AutomationServiceUpdateTaskJSONBody defines parameters for AutomationServiceUpdateTask.
type AutomationServiceUpdateTaskJSONBody struct {
	ActionIds    []int64 `json:"actionIds"`
	AreaId       *int64  `json:"areaId,omitempty"`
	Condition    string  `json:"condition"`
	ConditionIds []int64 `json:"conditionIds"`
	Description  string  `json:"description"`
	Enabled      bool    `json:"enabled"`
	Name         string  `json:"name"`
	TriggerIds   []int64 `json:"triggerIds"`
}

// AutomationServiceUpdateTaskParams defines parameters for AutomationServiceUpdateTask.
type AutomationServiceUpdateTaskParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// AutomationServiceGetTaskListParams defines parameters for AutomationServiceGetTaskList.
type AutomationServiceGetTaskListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// AutomationServiceImportTaskParams defines parameters for AutomationServiceImportTask.
type AutomationServiceImportTaskParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// TriggerServiceAddTriggerParams defines parameters for TriggerServiceAddTrigger.
type TriggerServiceAddTriggerParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// TriggerServiceUpdateTriggerJSONBody defines parameters for TriggerServiceUpdateTrigger.
type TriggerServiceUpdateTriggerJSONBody struct {
	AreaId      *int64                  `json:"areaId,omitempty"`
	Attributes  map[string]ApiAttribute `json:"attributes"`
	Description string                  `json:"description"`
	Enabled     bool                    `json:"enabled"`
	EntityIds   []string                `json:"entityIds"`
	Name        string                  `json:"name"`
	PluginName  string                  `json:"pluginName"`
	Script      *ApiScript              `json:"script,omitempty"`
	ScriptId    *int64                  `json:"scriptId,omitempty"`
}

// TriggerServiceUpdateTriggerParams defines parameters for TriggerServiceUpdateTrigger.
type TriggerServiceUpdateTriggerParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// TriggerServiceGetTriggerListParams defines parameters for TriggerServiceGetTriggerList.
type TriggerServiceGetTriggerListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Ids The number of results returned on a page
	Ids *Ids `form:"ids[],omitempty" json:"ids[],omitempty"`
}

// TriggerServiceSearchTriggerParams defines parameters for TriggerServiceSearchTrigger.
type TriggerServiceSearchTriggerParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// UserServiceAddUserParams defines parameters for UserServiceAddUser.
type UserServiceAddUserParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// UserServiceUpdateUserByIdJSONBody defines parameters for UserServiceUpdateUserById.
type UserServiceUpdateUserByIdJSONBody struct {
	Email          string         `json:"email"`
	FirstName      string         `json:"firstName"`
	ImageId        *int64         `json:"imageId,omitempty"`
	Lang           string         `json:"lang"`
	LastName       *string        `json:"lastName,omitempty"`
	Meta           *[]ApiUserMeta `json:"meta,omitempty"`
	Nickname       string         `json:"nickname"`
	Password       string         `json:"password"`
	PasswordRepeat string         `json:"passwordRepeat"`
	RoleName       string         `json:"roleName"`
	Status         string         `json:"status"`
}

// UserServiceUpdateUserByIdParams defines parameters for UserServiceUpdateUserById.
type UserServiceUpdateUserByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// UserServiceGetUserListParams defines parameters for UserServiceGetUserList.
type UserServiceGetUserListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// VariableServiceAddVariableParams defines parameters for VariableServiceAddVariable.
type VariableServiceAddVariableParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// VariableServiceUpdateVariableJSONBody defines parameters for VariableServiceUpdateVariable.
type VariableServiceUpdateVariableJSONBody struct {
	Tags  []string `json:"tags"`
	Value string   `json:"value"`
}

// VariableServiceUpdateVariableParams defines parameters for VariableServiceUpdateVariable.
type VariableServiceUpdateVariableParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// VariableServiceGetVariableListParams defines parameters for VariableServiceGetVariableList.
type VariableServiceGetVariableListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// VariableServiceSearchVariableParams defines parameters for VariableServiceSearchVariable.
type VariableServiceSearchVariableParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// Zigbee2mqttServiceGetBridgeListParams defines parameters for Zigbee2mqttServiceGetBridgeList.
type Zigbee2mqttServiceGetBridgeListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// Zigbee2mqttServiceAddZigbee2mqttBridgeParams defines parameters for Zigbee2mqttServiceAddZigbee2mqttBridge.
type Zigbee2mqttServiceAddZigbee2mqttBridgeParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// Zigbee2mqttServiceUpdateBridgeByIdJSONBody defines parameters for Zigbee2mqttServiceUpdateBridgeById.
type Zigbee2mqttServiceUpdateBridgeByIdJSONBody struct {
	BaseTopic  string  `json:"baseTopic"`
	Login      string  `json:"login"`
	Name       string  `json:"name"`
	Password   *string `json:"password,omitempty"`
	PermitJoin bool    `json:"permitJoin"`
}

// Zigbee2mqttServiceUpdateBridgeByIdParams defines parameters for Zigbee2mqttServiceUpdateBridgeById.
type Zigbee2mqttServiceUpdateBridgeByIdParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// Zigbee2mqttServiceDeviceListParams defines parameters for Zigbee2mqttServiceDeviceList.
type Zigbee2mqttServiceDeviceListParams struct {
	// Sort Field on which to sort and its direction
	Sort *ListSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Page Page number of the requested result set
	Page *ListPage `form:"page,omitempty" json:"page,omitempty"`

	// Limit The number of results returned on a page
	Limit *ListLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// Zigbee2mqttServiceDeviceBanParams defines parameters for Zigbee2mqttServiceDeviceBan.
type Zigbee2mqttServiceDeviceBanParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// Zigbee2mqttServiceDeviceRenameParams defines parameters for Zigbee2mqttServiceDeviceRename.
type Zigbee2mqttServiceDeviceRenameParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// Zigbee2mqttServiceDeviceWhitelistParams defines parameters for Zigbee2mqttServiceDeviceWhitelist.
type Zigbee2mqttServiceDeviceWhitelistParams struct {
	Accept *AcceptJSON `json:"Accept,omitempty"`
}

// Zigbee2mqttServiceSearchDeviceParams defines parameters for Zigbee2mqttServiceSearchDevice.
type Zigbee2mqttServiceSearchDeviceParams struct {
	Query  *SearchQuery  `form:"query,omitempty" json:"query,omitempty"`
	Offset *SearchOffset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *SearchLimit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// ActionServiceAddActionJSONRequestBody defines body for ActionServiceAddAction for application/json ContentType.
type ActionServiceAddActionJSONRequestBody = ApiNewActionRequest

// ActionServiceUpdateActionJSONRequestBody defines body for ActionServiceUpdateAction for application/json ContentType.
type ActionServiceUpdateActionJSONRequestBody ActionServiceUpdateActionJSONBody

// AreaServiceAddAreaJSONRequestBody defines body for AreaServiceAddArea for application/json ContentType.
type AreaServiceAddAreaJSONRequestBody = ApiNewAreaRequest

// AreaServiceUpdateAreaJSONRequestBody defines body for AreaServiceUpdateArea for application/json ContentType.
type AreaServiceUpdateAreaJSONRequestBody AreaServiceUpdateAreaJSONBody

// BackupServiceUploadBackupMultipartRequestBody defines body for BackupServiceUploadBackup for multipart/form-data ContentType.
type BackupServiceUploadBackupMultipartRequestBody BackupServiceUploadBackupMultipartBody

// BackupServiceNewBackupJSONRequestBody defines body for BackupServiceNewBackup for application/json ContentType.
type BackupServiceNewBackupJSONRequestBody = BackupServiceNewBackupJSONBody

// ConditionServiceAddConditionJSONRequestBody defines body for ConditionServiceAddCondition for application/json ContentType.
type ConditionServiceAddConditionJSONRequestBody = ApiNewConditionRequest

// ConditionServiceUpdateConditionJSONRequestBody defines body for ConditionServiceUpdateCondition for application/json ContentType.
type ConditionServiceUpdateConditionJSONRequestBody ConditionServiceUpdateConditionJSONBody

// DashboardServiceAddDashboardJSONRequestBody defines body for DashboardServiceAddDashboard for application/json ContentType.
type DashboardServiceAddDashboardJSONRequestBody = ApiNewDashboardRequest

// DashboardServiceUpdateDashboardJSONRequestBody defines body for DashboardServiceUpdateDashboard for application/json ContentType.
type DashboardServiceUpdateDashboardJSONRequestBody DashboardServiceUpdateDashboardJSONBody

// DashboardCardServiceAddDashboardCardJSONRequestBody defines body for DashboardCardServiceAddDashboardCard for application/json ContentType.
type DashboardCardServiceAddDashboardCardJSONRequestBody = ApiNewDashboardCardRequest

// DashboardCardServiceImportDashboardCardJSONRequestBody defines body for DashboardCardServiceImportDashboardCard for application/json ContentType.
type DashboardCardServiceImportDashboardCardJSONRequestBody = ApiDashboardCard

// DashboardCardServiceUpdateDashboardCardJSONRequestBody defines body for DashboardCardServiceUpdateDashboardCard for application/json ContentType.
type DashboardCardServiceUpdateDashboardCardJSONRequestBody DashboardCardServiceUpdateDashboardCardJSONBody

// DashboardCardItemServiceAddDashboardCardItemJSONRequestBody defines body for DashboardCardItemServiceAddDashboardCardItem for application/json ContentType.
type DashboardCardItemServiceAddDashboardCardItemJSONRequestBody = ApiNewDashboardCardItemRequest

// DashboardCardItemServiceUpdateDashboardCardItemJSONRequestBody defines body for DashboardCardItemServiceUpdateDashboardCardItem for application/json ContentType.
type DashboardCardItemServiceUpdateDashboardCardItemJSONRequestBody DashboardCardItemServiceUpdateDashboardCardItemJSONBody

// DashboardTabServiceAddDashboardTabJSONRequestBody defines body for DashboardTabServiceAddDashboardTab for application/json ContentType.
type DashboardTabServiceAddDashboardTabJSONRequestBody = ApiNewDashboardTabRequest

// DashboardTabServiceUpdateDashboardTabJSONRequestBody defines body for DashboardTabServiceUpdateDashboardTab for application/json ContentType.
type DashboardTabServiceUpdateDashboardTabJSONRequestBody DashboardTabServiceUpdateDashboardTabJSONBody

// DashboardTabServiceImportDashboardTabJSONRequestBody defines body for DashboardTabServiceImportDashboardTab for application/json ContentType.
type DashboardTabServiceImportDashboardTabJSONRequestBody = ApiDashboardTab

// DashboardServiceImportDashboardJSONRequestBody defines body for DashboardServiceImportDashboard for application/json ContentType.
type DashboardServiceImportDashboardJSONRequestBody = ApiDashboard

// DeveloperToolsServiceCallActionJSONRequestBody defines body for DeveloperToolsServiceCallAction for application/json ContentType.
type DeveloperToolsServiceCallActionJSONRequestBody = ApiAutomationRequest

// DeveloperToolsServiceCallTriggerJSONRequestBody defines body for DeveloperToolsServiceCallTrigger for application/json ContentType.
type DeveloperToolsServiceCallTriggerJSONRequestBody = ApiAutomationRequest

// DeveloperToolsServiceReloadEntityJSONRequestBody defines body for DeveloperToolsServiceReloadEntity for application/json ContentType.
type DeveloperToolsServiceReloadEntityJSONRequestBody = ApiReloadRequest

// DeveloperToolsServiceEntitySetStateJSONRequestBody defines body for DeveloperToolsServiceEntitySetState for application/json ContentType.
type DeveloperToolsServiceEntitySetStateJSONRequestBody = ApiEntityRequest

// EntityServiceImportEntityJSONRequestBody defines body for EntityServiceImportEntity for application/json ContentType.
type EntityServiceImportEntityJSONRequestBody = ApiEntity

// EntityServiceAddEntityJSONRequestBody defines body for EntityServiceAddEntity for application/json ContentType.
type EntityServiceAddEntityJSONRequestBody = ApiNewEntityRequest

// EntityServiceUpdateEntityJSONRequestBody defines body for EntityServiceUpdateEntity for application/json ContentType.
type EntityServiceUpdateEntityJSONRequestBody EntityServiceUpdateEntityJSONBody

// ImageServiceAddImageJSONRequestBody defines body for ImageServiceAddImage for application/json ContentType.
type ImageServiceAddImageJSONRequestBody = ApiNewImageRequest

// ImageServiceUploadImageMultipartRequestBody defines body for ImageServiceUploadImage for multipart/form-data ContentType.
type ImageServiceUploadImageMultipartRequestBody ImageServiceUploadImageMultipartBody

// ImageServiceUpdateImageByIdJSONRequestBody defines body for ImageServiceUpdateImageById for application/json ContentType.
type ImageServiceUpdateImageByIdJSONRequestBody ImageServiceUpdateImageByIdJSONBody

// AuthServicePasswordResetJSONRequestBody defines body for AuthServicePasswordReset for application/json ContentType.
type AuthServicePasswordResetJSONRequestBody = ApiPasswordResetRequest

// PluginServiceUpdatePluginSettingsJSONRequestBody defines body for PluginServiceUpdatePluginSettings for application/json ContentType.
type PluginServiceUpdatePluginSettingsJSONRequestBody PluginServiceUpdatePluginSettingsJSONBody

// RoleServiceAddRoleJSONRequestBody defines body for RoleServiceAddRole for application/json ContentType.
type RoleServiceAddRoleJSONRequestBody = ApiNewRoleRequest

// RoleServiceUpdateRoleByNameJSONRequestBody defines body for RoleServiceUpdateRoleByName for application/json ContentType.
type RoleServiceUpdateRoleByNameJSONRequestBody RoleServiceUpdateRoleByNameJSONBody

// RoleServiceUpdateRoleAccessListJSONRequestBody defines body for RoleServiceUpdateRoleAccessList for application/json ContentType.
type RoleServiceUpdateRoleAccessListJSONRequestBody RoleServiceUpdateRoleAccessListJSONBody

// ScriptServiceAddScriptJSONRequestBody defines body for ScriptServiceAddScript for application/json ContentType.
type ScriptServiceAddScriptJSONRequestBody = ApiNewScriptRequest

// ScriptServiceExecSrcScriptByIdJSONRequestBody defines body for ScriptServiceExecSrcScriptById for application/json ContentType.
type ScriptServiceExecSrcScriptByIdJSONRequestBody = ApiExecSrcScriptRequest

// ScriptServiceUpdateScriptByIdJSONRequestBody defines body for ScriptServiceUpdateScriptById for application/json ContentType.
type ScriptServiceUpdateScriptByIdJSONRequestBody ScriptServiceUpdateScriptByIdJSONBody

// TagServiceUpdateTagByIdJSONRequestBody defines body for TagServiceUpdateTagById for application/json ContentType.
type TagServiceUpdateTagByIdJSONRequestBody TagServiceUpdateTagByIdJSONBody

// AutomationServiceAddTaskJSONRequestBody defines body for AutomationServiceAddTask for application/json ContentType.
type AutomationServiceAddTaskJSONRequestBody = ApiNewTaskRequest

// AutomationServiceUpdateTaskJSONRequestBody defines body for AutomationServiceUpdateTask for application/json ContentType.
type AutomationServiceUpdateTaskJSONRequestBody AutomationServiceUpdateTaskJSONBody

// AutomationServiceImportTaskJSONRequestBody defines body for AutomationServiceImportTask for application/json ContentType.
type AutomationServiceImportTaskJSONRequestBody = ApiTask

// TriggerServiceAddTriggerJSONRequestBody defines body for TriggerServiceAddTrigger for application/json ContentType.
type TriggerServiceAddTriggerJSONRequestBody = ApiNewTriggerRequest

// TriggerServiceUpdateTriggerJSONRequestBody defines body for TriggerServiceUpdateTrigger for application/json ContentType.
type TriggerServiceUpdateTriggerJSONRequestBody TriggerServiceUpdateTriggerJSONBody

// UserServiceAddUserJSONRequestBody defines body for UserServiceAddUser for application/json ContentType.
type UserServiceAddUserJSONRequestBody = ApiNewtUserRequest

// UserServiceUpdateUserByIdJSONRequestBody defines body for UserServiceUpdateUserById for application/json ContentType.
type UserServiceUpdateUserByIdJSONRequestBody UserServiceUpdateUserByIdJSONBody

// VariableServiceAddVariableJSONRequestBody defines body for VariableServiceAddVariable for application/json ContentType.
type VariableServiceAddVariableJSONRequestBody = ApiNewVariableRequest

// VariableServiceUpdateVariableJSONRequestBody defines body for VariableServiceUpdateVariable for application/json ContentType.
type VariableServiceUpdateVariableJSONRequestBody VariableServiceUpdateVariableJSONBody

// Zigbee2mqttServiceAddZigbee2mqttBridgeJSONRequestBody defines body for Zigbee2mqttServiceAddZigbee2mqttBridge for application/json ContentType.
type Zigbee2mqttServiceAddZigbee2mqttBridgeJSONRequestBody = ApiNewZigbee2mqttRequest

// Zigbee2mqttServiceUpdateBridgeByIdJSONRequestBody defines body for Zigbee2mqttServiceUpdateBridgeById for application/json ContentType.
type Zigbee2mqttServiceUpdateBridgeByIdJSONRequestBody Zigbee2mqttServiceUpdateBridgeByIdJSONBody

// Zigbee2mqttServiceDeviceBanJSONRequestBody defines body for Zigbee2mqttServiceDeviceBan for application/json ContentType.
type Zigbee2mqttServiceDeviceBanJSONRequestBody = ApiDeviceBanRequest

// Zigbee2mqttServiceDeviceRenameJSONRequestBody defines body for Zigbee2mqttServiceDeviceRename for application/json ContentType.
type Zigbee2mqttServiceDeviceRenameJSONRequestBody = ApiDeviceRenameRequest

// Zigbee2mqttServiceDeviceWhitelistJSONRequestBody defines body for Zigbee2mqttServiceDeviceWhitelist for application/json ContentType.
type Zigbee2mqttServiceDeviceWhitelistJSONRequestBody = ApiDeviceWhitelistRequest
