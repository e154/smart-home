FROM --platform=$BUILDPLATFORM postgres:15 AS postgres

ARG BUILDPLATFORM

FROM --platform=$BUILDPLATFORM golang:1.23.0 AS builder

ARG BUILDPLATFORM
ARG TARGETOS
ARG TARGETARCH
ARG GO_BUILD_LDFLAGS
ARG GO_BUILD_TAGS

RUN go version

ENV CGO_ENABLED=0
ENV GOOS=${TARGETOS}
ENV GOARCH=${TARGETARCH}

WORKDIR /app/
ADD . .

RUN set -ex && \
  go mod download && \
  go mod verify

RUN go build -ldflags="${GO_BUILD_LDFLAGS}" ${GO_BUILD_TAGS} -o server .

FROM --platform=$BUILDPLATFORM debian:12-slim

LABEL org.opencontainers.image.title="Smart home" \
  org.opencontainers.image.authors="Filippov Alex <af@e154.ru>" \
  org.opencontainers.image.description="Managing iot devices has become easier thanks to the smart-home automation software platform for managing iot devices with a graphical interface and javascript's scripts." \
  org.opencontainers.image.vendor="SMART HOME" \
  org.opencontainers.image.licenses="GPL-3.0-only" \
  com.docker.desktop.extension.api.version="${RELEASE_VERSION}" \
  com.docker.desktop.extension.icon="https://raw.githubusercontent.com/e154/smart-home/refs/heads/master/static_source/admin/public/android-chrome-64x64.png"

ARG BUILDPLATFORM
ARG RELEASE_VERSION

RUN apt-get update \
    && apt-get install -y --no-install-recommends libpq5 ca-certificates iputils-ping
RUN update-ca-certificates
COPY --from=postgres /usr/lib/postgresql/15/bin/pg_dump /usr/local/bin
COPY --from=postgres /usr/lib/postgresql/15/bin/pg_restore /usr/local/bin

WORKDIR /app/

COPY conf conf/
COPY data data/
COPY LICENSE .
COPY README.md .
COPY CONTRIBUTING.md .

COPY --from=builder /app/server .

ENTRYPOINT ["/app/server"]

EXPOSE 3000
EXPOSE 3001
EXPOSE 3002
EXPOSE 3003
EXPOSE 1883
EXPOSE 8080
EXPOSE 8443

ENV PG_USER="smart_home"
ENV PG_PASS="smart_home"
ENV PG_HOST="postgres"
ENV PG_NAME="smart_home"
ENV PG_PORT="5432"
ENV PG_DEBUG="false"
ENV PG_MAX_IDLE_CONNS="10"
ENV PG_MAX_OPEN_CONNS="50"
ENV PG_CONN_MAX_LIFE_TIME="30"
ENV AUTO_MIGRATE="true"
ENV SNAPSHOT_DIR=""
ENV MODE="release"
ENV MQTT_PORT="1883"
ENV MQTT_RETRY_INTERVAL="20"
ENV MQTT_RETRY_CHECK_INTERVAL="20"
ENV MQTT_SESSION_EXPIRY_INTERVAL="0"
ENV MQTT_SESSION_EXPIRE_CHECK_INTERVAL="0"
ENV MQTT_QUEUE_QOS_0_MESSAGES="true"
ENV MQTT_MAX_INFLIGHT="32"
ENV MQTT_MAX_AWAIT_REL="100"
ENV MQTT_MAX_MSG_QUEUE="1000"
ENV MQTT_DELIVER_MODE="1"
ENV LOGGING="true"
ENV COLORED_LOGGING="false"
ENV ALEXA_HOST=""
ENV ALEXA_PORT="3003"
ENV API_HTTP_PORT="3001"
ENV API_HTTPS_PORT="3002"
ENV API_SWAGGER="true"
ENV API_GZIP="false"
ENV LANG="EN"
ENV ROOT_MODE="false"
ENV DOMAIN="localhost"
ENV PPROF="false"
ENV ROOT_SECRET=""
ENV PATH="$PATH:/app"

ENV GATE_API_HTTP_PORT="8080"
ENV GATE_API_HTTPS_PORT="8443"
ENV GATE_API_DEBUG="false"
ENV GATE_API_GZIP="true"
ENV GATE_DOMAIN="localhost"
ENV GATE_PPROF="false"
ENV GATE_HTTPS="false"
ENV GATE_PROXY_TIMEOUT="5"
ENV GATE_PROXY_IDLE_TIMEOUT="10"
ENV GATE_PROXY_SECRET_KEY=""

VOLUME /app/snapshots
VOLUME /app/data
VOLUME /app/conf

