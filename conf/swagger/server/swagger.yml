swagger: "2.0"
info:
  title: Server API
  description: Server API
  version: 0.0.1
  termsOfService: https://e154.ru/
  contact:
    email: filippov.a@e154.ru
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: access_token

paths:
  /:
    get:
      tags:
      - index
      operationId: index
      produces:
        - text/html
      responses:
        "200":
          description: "server api"

        default:
          description: "какая-то ошибка"
          schema:
            $ref: "#/definitions/ErrorModel"

  /node:
    post:
      tags:
      - node
      security:
      - ApiKeyAuth: []
      summary: "add new node"
      consumes:
      - application/json
      operationId: "addNode"
      parameters:
      - in: body
        name: postNodeParams
        description: "request params"
        schema:
          $ref: "#/definitions/NodeModel"

      responses:
        "200":
          description: "success"
          schema:
            type: object
            properties:
              code:
                $ref: "#/definitions/ResponseType"
              data:
                type: object
                properties:
                  id:
                    type: number
                    format: int64
                    description: "node id"

        default:
          description: "error"
          schema:
            $ref: "#/definitions/ErrorModel"

    get:
      tags:
      - node
      security:
      - ApiKeyAuth: []
      summary: "get node list"
      consumes:
      - application/json
      operationId: "getNodeList"
      parameters:
      - name: "limit"
        in: query
        type: number
        format: int64
      - name: "offset"
        in: query
        type: number
        format: int64
      - name: "sortby"
        in: query
        type: string
      - name: "order"
        in: query
        type: string

      responses:
        "200":
          description: "success"
          schema:
            type: object
            properties:
              code:
                $ref: "#/definitions/ResponseType"
              data:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/NodeModel"
                  total:
                    type: number
                    format: int64
                  limit:
                    type: number
                    format: int64
                  offset:
                    type: number
                    format: int64

        default:
          description: "error"
          schema:
            $ref: "#/definitions/ErrorModel"

  /node/{id}:
    get:
      tags:
      - node
      security:
      - ApiKeyAuth: []
      summary: "get node by id"
      consumes:
      - application/json
      operationId: "getNodeById"
      parameters:
      - in: "path"
        name: "id"
        type: number
        format: int64
        required: true
        description: "Node ID"

      responses:
        "200":
          description: "success"
          schema:
            type: object
            properties:
              code:
                $ref: "#/definitions/ResponseType"
              data:
                type: object
                properties:
                  node:
                    $ref: "#/definitions/NodeModel"

        default:
          description: "error"
          schema:
            $ref: "#/definitions/ErrorModel"
    put:
      tags:
      - node
      security:
      - ApiKeyAuth: []
      summary: "update node"
      consumes:
      - application/json
      operationId: "updateNode"
      parameters:
      - in: "path"
        name: "id"
        type: number
        format: int64
        required: true
        description: "Node ID"
      - in: body
        name: putNodeParams
        schema:
          $ref: "#/definitions/NodeModel"

      responses:
        "200":
          description: "success"
          schema:
            type: object
            properties:
              code:
                $ref: "#/definitions/ResponseType"
              data:
                type: object

        default:
          description: "error"
          schema:
            $ref: "#/definitions/ErrorModel"

    delete:
      tags:
      - node
      security:
      - ApiKeyAuth: []
      summary: "delete node by id"
      consumes:
      - application/json
      operationId: "deleteNodeById"
      parameters:
      - in: "path"
        name: "id"
        type: number
        format: int64
        required: true
        description: "Node ID"

      responses:
        "200":
          description: "success"
          schema:
            type: object
            properties:
              code:
                $ref: "#/definitions/ResponseType"
              data:
                type: object

        default:
          description: "error"
          schema:
            $ref: "#/definitions/ErrorModel"

definitions:
  ErrorModel:
    type: "object"
    properties:
      code:
        $ref: "#/definitions/ResponseType"
      message:
        type: "string"
        description: "описание ошибки"
      errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: "тип ишибки"
              message:
                type: string
                description: "описание"
              field:
                type: string
                description: "поле вызвавшее ошибку"

  ResponseType:
    description: "Тип ответов"
    type: string
    enum:
      - success
      - business_conflict
      - unprocessable_entity
      - bad_parameters
      - internal_error
      - not_found
      - security_error
      - permission_error

  NodeModel:
    type: object
    properties:
      id:
        type: number
        format: int64
      name:
        type: string
      ip:
        type: string
      port:
        type: number
        format: int64
      status:
        type: string
        enum:
          - enabled
          - disabled
      description:
        type: string
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'

