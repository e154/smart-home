<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascripts on Smart home</title>
    <link>https://e154.github.io/smart-home/javascript/</link>
    <description>Recent content in Javascripts on Smart home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    
	<atom:link href="https://e154.github.io/smart-home/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>overview</title>
      <link>https://e154.github.io/smart-home/javascript/_overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_overview/</guid>
      <description>Обзор API SmartHome. Объекты и функции, методы, свойства объектов, используемых для управления устройствами &amp;ldquo;умного дома&amp;rdquo;
Методы пример скрипта
# Контекст применения: # action (действие) # # Описание: # Проверка состояния устройства. (частное) # Не имеет зависимостей, и ни чего не передает наружу # Должен вызываться в рамках воркера, или действия устройства, # иначе выдаст ошибку, так как контекст выполнения накладывает # некоторые ограничения fetchStatus =(node, dev)-&amp;gt; # номер комманнды # 3 - проверка состояния # 4 - выполнить комманду FUNCTION = 3 # получим адрес устройства из контекста запуска DEVICE_ADDR = dev.</description>
    </item>
    
    <item>
      <title>workflow</title>
      <link>https://e154.github.io/smart-home/javascript/_workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_workflow/</guid>
      <description>Workflow Получить текущий Workflow. Выражение может вырнуть null если скрипт исполняется вне контекста Workflow
Синтаксис
workflow = Workflow  На выходе
   Значение Описание     workflow type: Object, ссылка на экземпляр *Workflow    Доступные методы приведены далее:
.GetName() Получить наименование текущего Workflow
Синтаксис
if Workflow name = Workflow.GetName() print &#39;wf name&#39;, name  .GetDescription() Получить описание текущего Workflow
if Workflow descr = Workflow.</description>
    </item>
    
    <item>
      <title>flow</title>
      <link>https://e154.github.io/smart-home/javascript/_flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_flow/</guid>
      <description>Flow Получить текущий процесс. Может вырнуть null если скрипт запускается вне контекста Workflow
flow = Flow return if !flow  На выходе
   Значение Описание     flow type: Object, ссылка на экземпляр *Flow    Доступные методы приведены далее:
.GetName() Получить наименование текущего Flow процесса.
if Flow name = Flow.GetName() print &#39;flow name&#39;, name  На выходе
   Значение Описание     name type: string    .</description>
    </item>
    
    <item>
      <title>log</title>
      <link>https://e154.github.io/smart-home/javascript/_map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_map/</guid>
      <description>Map* Возвращает объект карты
map = Map  Доступные методы приведены далее:
.SetElementState(elementName, newState) Map.SetElementState(&#39;dev1_light1&#39;, &#39;ERROR&#39;)  На входе
   Значение Описание     elementName type: string, наименование элемента   newState type: string, системное наименование состояния    .GetElement(elementName) element = Map.GetElement(&#39;dev1_light1&#39;)  На входе
   Значение Описание     elementName type: string, наименование элемента    На выходе</description>
    </item>
    
    <item>
      <title>mqtt</title>
      <link>https://e154.github.io/smart-home/javascript/_mqtt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_mqtt/</guid>
      <description> Mqtt Объект mqtt клиента
return if !Mqtt  На выходе
   Значение Описание     mqtt type: Object, ссылка на экземпляр *Mqtt    Доступные методы приведены далее:
.Publish(topic, payload, qos, retain) Отправить сообщение в канал
if Mqtt Mqtt.Publish(topic, payload, qos, retain)  На выходе
   Значение Описание     topic type: string   payload type: []byte   qos type: uint8   retain type: bool    </description>
    </item>
    
    <item>
      <title>log</title>
      <link>https://e154.github.io/smart-home/javascript/_log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_log/</guid>
      <description> Log Логирование состояния.
log = Log  На выходе
   Значение Описание     log type: Object, ссылка на экземпляр *Log    Доступные методы приведены далее:
.info() Log.Info(&#39;Info message&#39;)  .warn() Log.Warn(&#39;Warning message&#39;)  .error() Log.Error(&#39;Error message&#39;)  .debug() Log.Debug(&#39;Debug message&#39;)  </description>
    </item>
    
    <item>
      <title>action</title>
      <link>https://e154.github.io/smart-home/javascript/_action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_action/</guid>
      <description> Action Действие.
action = Action action.Id action.Name action.Description action.Device() action.Node()  На выходе
   Значение Описание     Id type: int   Name type: string   Description type: string   Device() type: Object, ссылка на экземпляр Device   Node() type: Object, ссылка на экземпляр Node    </description>
    </item>
    
    <item>
      <title>template</title>
      <link>https://e154.github.io/smart-home/javascript/_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_template/</guid>
      <description> Template Возвращает генератор шаблонов
.Render(name, options) Получить наименование устройства.
render = Template.Render(name, {&#39;key&#39;:&#39;val&#39;})  На входе
   Значение Описание     name type: string, наименование шаблона   options type: Object, лъект для заполнения шаблона    На выходе
   Значение Описание     render type: Object, шаблон TemplateRender    </description>
    </item>
    
    <item>
      <title>notifr</title>
      <link>https://e154.github.io/smart-home/javascript/_notifr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_notifr/</guid>
      <description>Notifr Отправка уведомлений
.NewSMS() смс сообщение
msg = Notifr.NewSMS() msg.AddPhone(&amp;quot;+1-222-333-44-55&amp;quot;) msg.Text = &amp;quot;hola&amp;quot; # optional #render = Template.Render(name, {&#39;key&#39;:&#39;val&#39;}) #msg.SetRender(render) Notifr.Send(msg)  На выходе
   Значение Описание     msg type: Object, смс объект sms    .NewEmail() Email сообщение
msg = Notifr.NewEmail() msg.From = &amp;quot;&amp;quot; msg.To = &amp;quot;&amp;quot; msg.Subject = &amp;quot;&amp;quot; msg.Body = &amp;quot;&amp;quot; # optional #render = Template.Render(name, {&#39;key&#39;:&#39;val&#39;}) #msg.SetRender(render) Notifr.Send(msg)  На выходе</description>
    </item>
    
    <item>
      <title>etc</title>
      <link>https://e154.github.io/smart-home/javascript/_etc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_etc/</guid>
      <description>CurrentNode() Получить текущую ноду. Выражение может вырнуть null если скрипт исполняется вне контекста Workflow
node = CurrentNode() print &#39;current node&#39;, node  На выходе
   Значение Описание     node type: Object, ссылка на экземпляр Node    CurrentDevice() Получить текущее утройство. Выражение может вырнуть null если скрипт исполняется вне контекста Workflow
device = CurrentDevice() print &#39;current device&#39;, device  На выходе
   Значение Описание     device type: Object, ссылка на экземпляр Device    Runmode Текущий режим, prod | dev</description>
    </item>
    
    <item>
      <title>device</title>
      <link>https://e154.github.io/smart-home/javascript/_device/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_device/</guid>
      <description>Device{} Получить текущее устройство. Может вырнуть null если скрипт запускается вне контекста Workflow
Доступные методы приведены далее:
.GetName() Получить наименование устройства.
name = dev.GetName()  На выходе
   Значение Описание     name type: string    .GetDescription() Получить описание устройства.
description = dev.GetDescription()  На выходе
   Значение Описание     description type: string    .RunCommand(name, args) Выполнить комманду на устройстве.</description>
    </item>
    
    <item>
      <title>map_element</title>
      <link>https://e154.github.io/smart-home/javascript/_map_element/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_map_element/</guid>
      <description>MapElement{} Объект карты
Доступные методы приведены далее:
.SetState(name) Получить наименование устройства.
mapElement.SetState(name)  На входе
   Значение Описание     name type: string    .GetState() Получить наименование устройства.
state = mapElement.GetState()  На выходе
   Значение Описание     state type: string    .SetOptions(options) Получить наименование устройства.
mapElement.SetOptions(options)  На входе
   Значение Описание     options type: json string    .</description>
    </item>
    
    <item>
      <title>message</title>
      <link>https://e154.github.io/smart-home/javascript/_message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_message/</guid>
      <description>message message - транспортный объект для передачи состояния(переменные и объекты вызова) между сущностями в конструкторе процессов Flow editor
Доступные свойства и методы:
.SetVar(key, value) message.SetVar(&#39;foo&#39;, &#39;bar&#39;)  определение переменной в хранилище
На входе
   Значение Описание     key type: string   value type: interface    .GetVar(key) получение переменной из хранилища
value = message.GetVar(&#39;foo&#39;)  На входе
   Значение Описание     key type: string    На выходе</description>
    </item>
    
    <item>
      <title>node</title>
      <link>https://e154.github.io/smart-home/javascript/_node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_node/</guid>
      <description>Node{} Объект ноды
Доступные методы приведены далее:
.Name() Получить наименование устройства.
name = node.Name()  На выходе
   Значение Описание     name type: string    .Description() Получить наименование устройства.
description = node.Description()  На выходе
   Значение Описание     description type: string    .Status() Получить наименование устройства.
status = node.Status()  На выходе
   Значение Описание     status type: string    .</description>
    </item>
    
    <item>
      <title>objects</title>
      <link>https://e154.github.io/smart-home/javascript/_objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/_objects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>https://e154.github.io/smart-home/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://e154.github.io/smart-home/javascript/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>