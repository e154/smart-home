export default {
    main: {
        create: 'Create',
        cancel: 'Cancel',
        return: 'Return',
        edit: 'Edit',
        copy: 'Copy',
        reload: 'Reload',
        remove: 'Remove',
        update: 'Update',
        save: 'Save',
        exec: 'Exec',
        loadFromServer: 'Load from server',
        restart: 'Restart',
        call: 'Call',
        ok: 'OK',
        export: 'Export',
        import: 'Import',
        no: 'No',
        'are_you_sure_to_do_want_this?': 'Are you sure to do want this?',
        createdAt: 'Created At',
        updatedAt: 'Updated At',
        start: 'Start',
        stop: 'Stop',
        currentState: 'Current State',
        enable: 'Enable',
        disable: 'Disable',
        closeDialog: 'Close',
        ACTIVE: 'Active',
        BLOCKED: 'Blocked',
        Success: 'Success',
        Warning: 'Warning',
        Error: 'Error',
        filter: 'Filter'
    },
    message: {
        unknownError: 'unknown error',
        selectedImage: 'Selected Image',
        createdSuccessfully: 'Created successfully',
        updatedSuccessfully: 'Updated successfully',
        uploadSuccessfully: 'Upload successfully',
        callSuccessful: 'Call successful',
        reloadSuccessful: 'Reload successful',
        importedSuccessful: 'Imported successful',
        requestSentSuccessfully: 'Request sent successfully',
        corruptedJsonFormat: 'Corrupted Json Format',
        startedRestoreProcess: 'Started the recovery process, the system will reboot soon'
    },
    common: {
        inputText: 'Please input',
        selectText: 'Please select',
        startTimeText: 'Start time',
        endTimeText: 'End time',
        login: 'Login',
        required: 'This is required',
        loginOut: 'Login out',
        document: 'Document',
        reminder: 'Reminder',
        loginOutMessage: 'Exit the system?',
        back: 'Back',
        ok: 'OK',
        cancel: 'Cancel',
        reload: 'Reload current',
        closeTab: 'Close current',
        closeTheLeftTab: 'Close left',
        closeTheRightTab: 'Close right',
        closeOther: 'Close other',
        closeAll: 'Close all',
        prevLabel: 'Prev',
        nextLabel: 'Next',
        skipLabel: 'Jump',
        doneLabel: 'End',
        menu: 'Menu',
        menuDes: 'Menu bar rendered in routed structure',
        collapse: 'Collapse',
        collapseDes: 'Expand and zoom the menu bar',
        tagsView: 'Tags view',
        tagsViewDes: 'Used to record routing history',
        tool: 'Tool',
        toolDes: 'Used to set up custom systems',
        query: 'Query',
        reset: 'Reset',
        shrink: 'Put away',
        expand: 'Expand',
        delMessage: 'Delete the selected data?',
        delWarning: 'Warning',
        delOk: 'OK',
        delCancel: 'Cancel',
        delNoData: 'Please select the data to delete',
        delSuccess: 'Deleted successfully',
        userProfile: 'Profile'
    },
    error: {
        noPermission: `Sorry, you don't have permission to access this page.`,
        pageError: 'Sorry, the page you visited does not exist.',
        networkError: 'Sorry, the server reported an error.',
        returnToHome: 'Return to home'
    },
    setting: {
        projectSetting: 'Project setting',
        theme: 'Theme',
        layout: 'Layout',
        systemTheme: 'System theme',
        menuTheme: 'Menu theme',
        interfaceDisplay: 'Interface display',
        breadcrumb: 'Breadcrumb',
        breadcrumbIcon: 'Breadcrumb icon',
        collapseMenu: 'Collapse menu',
        hamburgerIcon: 'Hamburger icon',
        screenfullIcon: 'Screenfull icon',
        sizeIcon: 'Size icon',
        localeIcon: 'Locale icon',
        tagsView: 'Tags view',
        logo: 'Logo',
        greyMode: 'Grey mode',
        fixedHeader: 'Fixed header',
        headerTheme: 'Header theme',
        cutMenu: 'Cut Menu',
        copy: 'Copy',
        clearAndReset: 'Clear cache and reset',
        copySuccess: 'Copy success',
        copyFailed: 'Copy failed',
        footer: 'Footer',
        uniqueOpened: 'Unique opened',
        tagsViewIcon: 'Tags view icon',
        dynamicRouter: 'Dynamic router',
        reExperienced: 'Please exit the login experience again',
        fixedMenu: 'Fixed menu'
    },
    size: {
        default: 'Default',
        large: 'Large',
        small: 'Small'
    },
    login: {
        welcome: 'Welcome to the system',
        message: 'Backstage management system',
        username: 'Username',
        password: 'Password',
        register: 'Register',
        checkPassword: 'Confirm password',
        login: 'Sign in',
        otherLogin: 'Sign in with',
        remember: 'Remember me',
        hasUser: 'Existing account? Go to login',
        forgetPassword: 'Forget password',
        usernamePlaceholder: 'Please input username',
        passwordPlaceholder: 'Please input password',
        code: 'Verification code',
        codePlaceholder: 'Please input verification code',
        restorePassword: 'Restore password',
        returnToSignIn: 'Return to login form',
        updatePassword: 'Update password',
        server: 'Server ID',
        serverPlaceholder: 'Please input server id',
    },
    router: {
        login: 'Login',
        New: 'New',
        EditEntity: 'Edit Entity',
        EditScript: 'Edit Script',
        EditTask: 'Edit Task',
        EditTrigger: 'Edit Trigger',
        EditCondition: 'Edit Condition',
        EditAction: 'Edit Action',
        EditDashboard: 'Edit Dashboard',
        EditVariable: 'Edit Variable',
        EditArea: 'Edit Area',
        EditZigbee2mqtt: 'Edit Zigbee2mqtt',
        EditUser: 'Edit User',
        ListEntities: 'List Entities',
        ListScripts: 'List Scripts',
        ListDashboards: 'List Dashboards',
        ListZigbee2mqtt: 'List Zigbee2mqtt',
        View: 'View',
        Development: 'Development',
        Entities: 'Entities',
        Scripts: 'Scripts',
        Automation: 'Automation',
        Tasks: 'Tasks',
        Triggers: 'Triggers',
        Conditions: 'Conditions',
        Actions: 'Actions',
        Zigbee2mqtt: 'Zigbee2mqtt',
        Dashboard: 'Dashboard',
        Dashboards: 'Dashboards',
        DashboardsView: 'View Dashboard',
        Variables: 'Variables',
        Plugins: 'Plugins',
        Logs: 'Logs',
        etc: "ETC",
        Swagger: 'Swagger',
        Imagebrowser: 'Image Browser',
        Areas: 'Areas',
        Users: 'Users',
        Backups: 'Backups',
        MessageDelivery: 'Message Delivery',
        Settings: 'Settings',
        Tools: 'Tools',
        Mqtt: 'Mqtt Server'
    },
    permission: {
        hasPermission: 'Please set the operation permission value'
    },
    logs: {
        dateTimerange: 'Date Time range',
        today: 'Today',
        yesterday: 'Yesterday',
        aWeekAgo: 'A week ago',
        level: 'Level',
        owner: 'Owner',
        body: 'Body'
    },
    variables: {
        name: 'Name',
        value: 'Value',
        addNew: 'Add new variable'
    },
    plugins: {
        name: 'Name',
        version: 'Version',
        enabled: 'Enabled',
        system: 'System',
        trigger: 'Trigger',
        actors: 'Actors',
        actorCustomAttrs: 'Actor Custom Attrs',
        actorCustomActions: 'Actor Custom Actions',
        actorCustomStates: 'Actor Custom States',
        actorCustomSettings: 'Actor Custom Settings',
        main: 'Main',
        actor: 'Actor',
        settings: 'Settings',
        actorAttrs: 'Actor attributes',
        attrType: 'Type',
        attrValue: 'Value',
        actorActions: 'Actor actions',
        actionImage: 'Image',
        actionIcon: 'Icon',
        actionDescription: 'Description',
        actorStates: 'Actor States',
        actorSettings: 'Actor Settings'
    },
    areas: {
        id: 'ID',
        name: 'Name',
        description: 'Description',
        addNew: 'Add new area'
    },
    users: {
        id: 'ID',
        nickname: 'Nick',
        firstName: 'First Name',
        lastName: 'Last Name',
        role: 'Role',
        password: 'Password',
        passwordRepeat: 'Password Repeat',
        passwordPlaceholder: 'password',
        email: 'Email',
        status: 'Status',
        addNew: 'Add new user',
        image: 'Image'
    },
    backup: {
        operations: 'Operations',
        name: 'Name',
        addNew: 'Create new snapshot',
        size: 'Size',
        uploadDump: 'Upload snapshot',
        restoreSnapshot: 'Restore the snapshot ?',
        removeSnapshot: 'Remove the snapshot ?'
    },
    messageDelivery: {
        id: 'ID',
        messageType: 'Message Type',
        dateTimerange: 'Date Time range',
        today: 'Today',
        yesterday: 'Yesterday',
        aWeekAgo: 'A week ago',
        attributes: 'Attributes',
        address: 'Address',
        status: 'Status',
        nothing: '-',
        dialogTitle: 'Message details',
    },
    images: {
        goToArchive: 'Archive',
        upload: 'Upload',
        imageBrowser: 'Image Browser'
    },
    automation: {
        id: 'ID',
        name: 'Name',
        description: 'Description',
        enabled: 'Enabled',
        nothing: '-',
        addNew: 'Add new task',
        import: 'Import task',
        condition: 'Condition',
        area: 'Area',
        task: 'Task',
        main: 'Main',
        dialogTitle: 'Import task',
        operations: 'Actions',
        telemetry: 'Telemetry',
        tasks: {
            triggers: 'Triggers',
            conditions: 'Conditions',
            actions: 'Actions',
            eventStart: 'Event Start',
            eventEnd: 'Event End',
            pipeline: 'Pipeline',
            exportDialogTitle: 'Export Task'
        },
        triggers: {
            id: 'ID',
            name: 'Name',
            script: 'Script',
            entity: 'Entity',
            plugin: 'Plugin',
            operations: 'Operations',
            addNew: 'Add new trigger',
            pluginName: 'Plugin name',
            addTrigger: 'Add Trigger',
            pluginOptions: 'Plugin Options',
            timePluginOptions: 'Time Expression',
            alexaSkillId: 'Alexa Skill ID'
        },
        conditions: {
            id: 'ID',
            name: 'Name',
            script: 'Script',
            operations: 'Operations',
            addNew: 'Add new condition',
            addCondition: 'Add Condition'
        },
        actions: {
            id: 'ID',
            name: 'Name',
            script: 'Script',
            entity: 'Entity',
            action: 'Action',
            operations: 'Operations',
            addNew: 'Add new action',
            addAction: 'Add Action',
            entityActionName: 'Entity Action'
        },
    },
    scripts: {
        id: 'ID',
        name: 'Name',
        lang: 'Lang',
        description: 'Description',
        addNew: 'Add new script',
        scriptInfo: 'Info',
        alexaIntents: 'Alexa Intents',
        entityActions: 'Entity Actions',
        entityScripts: 'Entity Scripts',
        automationTriggers: 'Automation Triggers',
        automationConditions: 'Automation Conditions',
        automationActions: 'Automation Actions',
        main: 'Main',
        source: 'Source',
        info1: 'Use the keyboard shortcut "Ctrl + Space" to autocomplete',
        info2: 'Use the keyboard shortcut "Meta + /" to comment code',
        info3: 'Use the keyboard shortcut "Shift + Meta + F" to format code',
        stat_total_name: 'Total scripts',
        stat_total_descr: '',
        stat_used_name: 'Scripts used',
        stat_used_descr: '',
        stat_unused_name: 'Scripts are not used',
        stat_unused_descr: '',
        stat_js_name: 'Total javascript scripts',
        stat_js_descr: '',
        stat_cs_name: 'Total coffeescript scripts',
        stat_cs_descr: '',
        stat_ts_name: 'Total typescript scripts',
        stat_ts_descr: '',
        showModalDialog: 'Edit current script',
        modalWindow: 'Current script',
        restoreVersion: 'Restore',
        scriptVersions: 'Versions',
        viewVersion: 'View'
    },
    zigbee2mqtt: {
        id: 'ID',
        name: 'Name',
        baseTopic: 'Base Topic',
        login: 'Login',
        permitJoin: 'Permit Join',
        addNew: 'Add bridge',
        password: 'Password',
        main: 'Main',
        devices: 'Devices',
        model: 'Model',
        status: 'Status',
        description: 'Description'
    },
    entities: {
        id: 'ID',
        name: 'Name',
        pluginName: 'Plugin',
        description: 'Description',
        area: 'Area',
        script: 'Script',
        operations: 'Operations',
        addNew: 'Add new entity',
        addNewAction: 'Add action',
        addNewState: 'Add state',
        addNewAttr: 'Add attribute',
        setState: 'Set State',
        scripts: 'Scripts',
        icon: 'Icon',
        image: 'Image',
        autoLoad: 'Auto Load',
        main: 'Main',
        actions: 'Actions',
        states: 'States',
        attributes: 'Attributes',
        settings: 'Settings',
        metrics: 'Metrics',
        storage: 'Storage',
        currentState: 'Current State',
        import: 'Import',
        dialogImportTitle: 'Import Entity',
        dialogExportTitle: 'Export Entity',
        addNewMetric: 'Add Metric',
        status: 'Status',
        parent: 'Parent',
        loadFromPlugin: 'Load From Plugin',
        type: 'Type',
        value: 'Value'
    },
    entityStorage: {
        dateTimerange: 'Date Time range',
        today: 'Today',
        yesterday: 'Yesterday',
        aWeekAgo: 'A week ago',
        state: 'State',
        attributes: 'Attributes',
        entity: 'Entity',
        entityId: 'Entity ID',
        nothing: '-'
    },
    attributes: {
        name: 'Name',
        type: 'Type',
        value: 'Value'
    },
    metrics: {
        list: 'Metric List',
        properties: 'Properties',
        addProperty: 'Add Property',
        name: 'Name',
        description: 'Description',
        color: 'Color',
        translate: 'Translate',
        label: 'Label',
        noMetrics: 'No metrics',
        removeProp: 'Remove Property',
        removeMetric: 'Remove Metric'
    },
    dashboard: {
        id: 'ID',
        name: 'Name',
        description: 'Description',
        createdAt: 'Created At',
        updatedAt: 'Updated At',
        operations: 'Operations',
        dialogImportTitle: 'Import Dashboard',
        dialogExportTitle: 'Export Dashboard',
        addNewDashboard: 'Add Dashboard',
        mainTab: 'Main Options',
        tabsTab: 'Tab List',
        cardsTab: 'Card List',
        cardItemsTab: 'Card Items',
        mainSettings: 'Main Settings',
        enabled: 'Enabled',
        area: 'Area',
        tabList: 'Tab List',
        cardList: 'Card List',
        icon: 'Icon',
        gap: 'Gap',
        dragEnabled: 'Drag Enabled',
        background: 'Background color',
        columnWidth: 'Column Width',
        noTabs: 'nothing',
        addNewTab: 'Add Tab',
        addNewCard: 'Add Card',
        importCard: 'Import',
        title: 'Title',
        hidden: 'Hidden',
        height: 'Height',
        width: 'Width',
        weight: 'Weight',
        editor: {
            itemDetail: 'Item Detail',
            itemList: 'Item List',
            addNewCardItem: 'Add Card Item',
            mainOptions: 'Main Options',
            textOptions: 'Text Options',
            type: 'Type',
            pleaseSelectType: 'Please Select Type',
            title: 'Title',
            addProp: 'Add Prop',
            entity: 'Entity',
            frozen: 'Frozen',
            hidden: 'Hidden',
            enabled: 'Enabled',
            showOn: 'Show On',
            hideOn: 'Hide On',
            buttonOptions: 'Button Options',
            asButton: 'As Button',
            addAction: 'Add Action',
            addNewProp: 'Add New Property',
            action: "Action",
            image: "Image",
            html: 'Html',
            textBody: 'Body',
            tokens: 'Tokens',
            text: 'Text',
            comparison: 'Comparison',
            value: 'Value',
            imageOptions: 'Image Options',
            attrField: 'Attribute field',
            eventstateJSONobject: 'Event state JSON object',
            getEvent: 'Get Event',
            progressOptions: 'Progress Options',
            textInside: 'Text Inside',
            strokeWidth: 'Stroke Width',
            width: 'Width',
            icon: 'Icon',
            round: 'Round',
            size: 'Size',
            stateOptions: 'State Options',
            defaultImage: 'Default Image',
            selectAction: 'Select Action',
            markers: 'Markers',
            mapOptions: 'Map Options',
            staticPosition: 'Static position',
            addMarker: 'Add Marker',
            opacity: 'Opacity',
            scale: 'Scale',
            followTheMarker: 'Follow The Marker',
            tracked: 'Tracked',
            TEXT: 'Text',
            IMAGE: 'Image',
            BUTTON: 'Button',
            STATE: 'State',
            LOGS: 'Logs Table',
            PROGRESS: 'Progress',
            CHART: 'Chart',
            CHART_CUSTOM: 'Chart Custom',
            ENTITY_STORAGE: 'Entity Storage Table',
            MAP: 'Map',
            SLIDER: 'Slider',
            COLOR_PICKER: 'Color Picker',
            STREAM_PLAYER: 'Video player',
            JOYSTICK: 'Joystick',
            ICON: 'Icon',
            tooltip: 'Tooltip',
            slider: {
                options: 'Slider Options',
                color: 'Color',
                trackColor: 'Track Color',
                height: 'Height',
                step: 'Step',
                min: 'Min',
                max: 'Max',
            },
            colorPicker: {
                options: 'Color picker options',
                defaultColor: 'Default color'
            },
            chart: {
                type: 'Type',
                metric_index: 'Metric Index',
                props: 'Props',
                range: 'Range',
                filter: 'Filter',
                borderWidth: 'Line Width',
                areaBackground: 'Area Background',
                xAxis: 'X Axis',
                yAxis: 'Y Axis',
                legend: 'Legend',
                scale: 'Scale',
                entity_metric: 'Entity Metric',
                metric_props: 'Metric Props',
                chartOptions: 'Chart Options',
                color: 'Color',
                backgroundColor: 'Background Color',
                lineOptions: 'Line Options',
                automatic: 'Automatic',
                addChartItem: 'Add Chart Item',
                itemValue: 'Item Value',
                itemDescription: 'Item Description',
                barOptions: 'Bar Options',
                dataZoom: 'Data Zoom',
                info1: 'https://echarts.apache.org/examples/en/',
                chartDocumentation: 'Chart Documentation',
                seriesOptions: 'Series Options',
                addSeriesItem: 'Add Series Item',
                series: 'Series',
                itemType: 'Item Type',
                addCustomAttribute: 'Add Custom Attribute'
            },
            joystick: {
                options: 'Joystick Options',
                startAction: 'Start Action',
                endAction: 'End Action',
            },
            video: {
                options: 'Video Options'
            },
            entityStorage: {
                entities: 'Entities',
                showFilter: 'Show Filter'
            },
            iconOptions: 'Icon Options',
            defaultIcon: 'Default Icon',
            iconSize: 'Icon Size',
            iconColor: 'Icon Color'
        }
    },
    settings: {
        dashboardOptions: 'Dashboard Options',
        mainDarkDashboard: 'Main Dark Dashboard',
        mainLightDashboard: 'Main Light Dashboard',
        devDarkDashboard: 'Dev Dark Dashboard',
        devLightDashboard: 'Dev Light Dashboard',
        scriptsOptions: 'Scripts Settings',
        restartComponentIfScriptChanged: 'Restart component if script changed',
        clearHistory: 'Clear History',
        clearMetricsDays: 'Clear Metrics Days',
        clearLogsDays: 'Clear Logs Days',
        clearEntityStorageDays: 'Clear Entity Storage Days',
        clearRunHistoryDays: 'Clear Run History Days',
        time: 'Time',
        timezone: 'Timezone, default Asia/Colombo',
        backup: 'Backup',
        createBackupAt: 'Create Backup At (Cron)',
        maximumNumberOfBackups: 'Maximum Number Of Backups',
        info1: 'https://en.wikipedia.org/wiki/Cron',
        info2: 'Organization of remote access without white IP. Free gate https://gate.e154.ru:8443',
        info3: 'don\'t change it if you don\'t know what it\'s for',
        sendTheBackupInPartsMb: 'Send The Backup In Parts Mb',
        sendbackuptoTelegramBot: 'Send Backup To Telegram Bot',
        gate: 'Gate',
        gateClientServerHost: 'Server Host',
        gateClientId: 'Client Id',
        gateClientSecretKey: 'Secret Key',
        gateClientServerPort: 'Server Port',
        gateClientPoolIdleSize: 'Pool Idle Size',
        gateClientPoolMaxSize: 'Pool Max Size',
        gateClientTLS: 'TLS',
        hmacKey: 'HMAC Key'
    },
    tools: {
        eventBus: {
            topic: 'Topic',
            subscribers: 'Subscribers'
        }
    },
    mqtt: {
        client: {
            client: 'MQTT Client',
            clientId: 'Client Id',
            username: 'User Name',
            keepAlive: 'Keep Alive',
            version: 'Version',
            willRetain: 'Will Retain',
            willQos: 'Will Qos',
            willTopic: 'Will Topic',
            willPayload: 'Will Payload',
            remoteAddr: 'Remote Addr',
            localAddr: 'Local Addr',
            subscriptionsCurrent: 'Subscriptions Current',
            subscriptionsTotal: 'Subscriptions Total',
            packetsReceivedBytes: 'Packets Received Bytes',
            packetsReceivedNums: 'Packets Received Nums',
            packetsSendBytes: 'Packets Send Bytes',
            packetsSendNums: 'Packets Send Nums',
            messageDropped: 'Message Dropped',
            inflightLen: 'Inflight Len',
            queueLen: 'Queue Len',
            connectedAt: 'Connected At',
            disconnectedAt: 'Disconnected At',
            subscriptions: 'Subscriptions',
        },
        subscription: {
            id: 'ID',
            topicName: 'Topic Name',
            name: 'Name',
            qos: 'QOS',
            noLocal: 'No Local',
            retainAsPublished: 'Retain As Published',
            retainHandling: 'Retain Handling',
        }
    }
}
