// Code generated by go-bindata.
// sources:
// migrations/20210314_133041_global_reset.sql
// migrations/20210401_225727_add_automation.sql
// migrations/20210415_172812_run_history.sql
// migrations/20210422_161648_update_variables.sql
// migrations/20210422_220814_update_entity.sql
// migrations/20210426_184659_add_plugins.sql
// migrations/20210505_161526_drop_nodes.sql
// migrations/20210514_161024_update_alexa.sql
// migrations/20210519_173101_add_settings.sql
// migrations/20210521_235148_remove_zone.sql
// migrations/20210603_153850_update_messages.sql
// migrations/20210604_200254_update_plugin.sql
// migrations/20210605_133028_update_message.sql
// migrations/20210609_161535_add_telegram.sql
// migrations/20211213_002431_update_zigbee2mqtt_devices.sql
// migrations/20211219_181232_update_entity.sql
// migrations/20220114_222818_update_plugins.sql
// migrations/20220201_003002_update_triggers.sql
// migrations/20220209_223600_add_dashboard.sql
// migrations/20220508_230436_update_entity.sql
// migrations/20220605_184850_update_dashboard_tab.sql
// migrations/20220806_195936_update_area.sql
// DO NOT EDIT!

package database

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20210314_133041_global_resetSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x1c\xcb\x8e\xe3\xb8\xf1\xde\x5f\xc1\x5b\x7b\x90\x1e\x20\x30\xb0\x97\xde\xe4\xb0\xd8\x9d\xc3\x02\xd9\x45\xb2\x0f\xe4\x10\x04\x04\x2d\x95\x6d\x8e\x25\x4a\x4b\x52\x3d\xe3\x09\xf2\xef\x01\x5f\x12\x29\x92\x32\xe5\x76\x0f\x1c\x5d\x5a\x4d\xb2\x8a\x64\xbd\x59\x2c\xf9\xfd\x7b\xf4\xa7\x96\x1e\x38\x91\x80\x7e\xef\x1f\xde\xbf\x47\xbf\xfe\xe3\x6f\x88\x32\x24\xa0\x92\xb4\x63\xe8\xf1\xf7\xfe\x11\x51\x81\xe0\x33\x54\x83\x84\x1a\x7d\x3a\x02\x43\xf2\x48\x05\x32\x70\x6a\x10\x15\x88\xf4\x7d\x43\xa1\x7e\xa8\x38\x28\x5c\xf2\xdc\x03\x62\x5d\x0d\x02\x0b\x49\xe4\x20\x10\x11\x08\xd8\xd0\xa2\xcd\x23\x30\xb2\x6b\xa0\x7e\x7c\x42\x8f\x35\x15\xe6\xfd\xdd\xb7\x01\xa4\xa8\x38\xed\xa5\xc0\x0d\x61\x07\x0f\x52\x0a\x05\x54\x75\xfb\x3d\x80\x19\xa2\xfe\xff\x48\x5e\x88\xfd\x6f\x86\xa6\x81\x17\x68\xb0\x7e\x9d\x90\x7c\x68\x81\x1f\x80\x55\x67\x05\xfb\x5d\x03\x5c\x23\xf9\x9e\x53\x49\x2b\xd2\xa8\xf7\x0f\x9c\x77\x5c\xbd\xfc\x93\x70\x46\xd9\x41\xbd\xfe\xdc\x49\x5a\x81\x7a\xfb\x91\xed\x3b\xf5\xf7\x07\xd8\x0d\x87\xf9\x8c\xa4\x81\xcf\x04\x8b\x13\x6d\x9a\xeb\x76\xfe\x85\x1e\x76\x00\xdb\xf6\x0f\x29\x71\x0d\x2f\xb4\x4a\x51\x90\x54\x92\xbe\xe8\xc5\xec\x08\x63\x06\x21\x87\xb6\x7b\x89\xf1\xb5\x20\x04\x39\x00\xae\xa1\xa1\x2f\xc0\xcf\x31\x32\x06\x9f\x14\x3c\x65\xb8\xe7\xdd\x81\x83\xd0\x44\x06\x47\x03\x31\x54\x15\xe4\xf1\xce\x88\x2b\x5a\x03\xdd\x12\xaa\x49\x39\x50\xcc\x3a\x49\xf7\x9a\xd8\x12\x1a\x38\x70\xd2\x7a\x4d\xa2\x21\xd5\x29\x62\x1b\x39\x03\x2f\xa3\xde\x13\x7a\xdc\xf3\xee\x0b\xb0\x68\x7d\xa4\xc7\xd0\x40\x0b\x4c\xbe\x12\x93\x84\xb6\x6f\x88\x8c\xb6\x4a\x25\xb4\x66\x57\xa6\x3f\x0b\xb7\xc0\x3e\xca\xec\xfb\xbb\x6f\x1f\x46\x60\xb5\x1e\xa3\x3b\x0f\x9b\x07\x84\x10\xa2\x35\x9a\x3f\x3b\x7a\x10\xc0\x29\x69\xa2\x9e\x0b\x0f\xeb\x24\x62\x43\xd3\x3c\xb8\x86\xaa\x63\x42\x72\x42\x99\xb4\xfa\xda\x9f\xe0\xfc\xe0\x83\xf4\x9c\xb6\x84\x9f\xd1\x09\xce\x4f\xba\x83\x91\x16\x66\x68\x25\x7c\x96\xa8\x3a\x42\x75\x42\x9b\xea\x48\x38\x6e\x80\x1d\xe4\x71\xa3\x86\xbe\x43\x7f\xf9\x2b\xda\x7e\xf3\xcd\xbb\xa5\xf5\x18\xcc\xb5\x55\x6b\x65\x54\x7c\xcc\xd7\x3c\x21\x66\x43\xdc\x1a\x93\x09\x99\xa4\x2d\x08\x49\xda\x1e\x7d\xa2\xf2\xa8\xff\x45\x5f\x3a\x06\xa8\x86\x3d\x19\x1a\x89\xbe\xff\xfd\x97\x5f\x3e\xfc\xfc\x1b\xfe\xed\xc7\x9f\x3e\xfc\xfa\xdb\x77\x3f\xfd\xdd\xa0\x1a\xfa\xfa\x56\xa8\xac\x68\x84\xcb\xf6\x8c\xa6\xff\x38\x54\xa3\xf4\x3e\x3f\x07\x63\xc3\xfd\x36\xdd\x81\xb2\x98\x47\xa6\x13\x58\xc5\xcf\xbd\xda\x43\x4f\x84\xf8\xd4\xf1\x5a\x77\x3e\x44\x52\x68\xed\x70\x42\x0e\xaf\x16\xc0\x0b\x32\xe8\x2c\xff\x65\x29\xd4\xbe\xc1\x3e\x81\xbf\x48\x12\xcd\x73\x12\xcf\xcf\xc1\xf0\x90\x6e\xbe\x6c\x5f\x2d\xd4\x91\xf4\x89\x6e\xe0\x15\xcc\xd9\xe0\x4b\xfb\xd4\x5a\x75\x6d\x4f\x1b\xa8\xc3\xb1\xbe\xfc\xde\x42\x70\xd7\xe3\x88\xa5\x83\xb6\xe4\x90\x32\x52\x93\x6c\x2c\x71\xda\x40\x17\x30\x5a\x1e\x87\x76\xe7\x71\x24\x41\x5f\x8d\x6b\x79\x48\x4b\x5b\x6b\xc2\xb3\x43\x24\x95\xcd\x05\x2c\x82\x7e\x81\x69\x97\x6a\x1b\xd1\x10\x4f\x82\x72\x58\x3c\x66\xde\x82\x0f\xbc\x6b\x46\x36\x44\xf2\xbb\xc4\x02\x0d\x58\xc0\x81\xb9\xa0\xce\xb6\xd3\x13\x0e\x4c\x4e\x73\xa6\xa6\x32\x63\x30\x91\xd8\x4c\xba\x3f\x05\x53\x72\xd8\x03\x07\x56\x81\xb0\xbb\xf1\x3b\x3b\x66\x45\x17\x55\x44\x54\xa4\x06\xd5\x52\x43\x03\x12\x10\x07\x21\x39\xad\xee\x58\x4b\x7a\xe0\x2d\x15\x82\x76\x2c\xe9\xcf\xcb\x94\xc5\x43\x52\xc0\x2f\x45\x42\xec\x24\x21\x16\xc2\x9c\x28\x28\xee\xf8\x13\xdd\x8a\x47\xb6\xc5\x09\x4b\x75\x52\x81\xa3\x5e\x5e\x4e\x41\x4c\xe0\x6e\x77\x90\xd8\x80\x47\xe4\x81\xd1\x3f\x06\x40\x94\xd5\xf0\x39\x20\xd3\xc0\xfe\x78\xb0\x2b\xf3\x9a\xd1\x66\x24\xce\x53\xb0\x96\x27\x6f\xd2\x88\x87\x83\x00\xbe\x10\x8d\xa1\x57\x3a\xc4\x45\xce\xe8\xb9\x4b\xa2\x32\x5a\x9d\xd6\x44\x66\x76\xf8\x8a\xe8\x6c\x4f\xb9\x90\x38\x9a\x23\x37\xc3\x34\x7c\x61\x8e\x19\xdf\x49\x6a\x82\xec\x0c\xe3\xf0\xa5\x4d\x84\x33\x24\x42\x1f\xf4\x9a\x28\x33\x31\x83\x3a\xfb\xc4\x83\x6e\x38\x43\x14\xe5\x98\xe7\x85\x70\x45\x9c\xcd\x76\x4e\x05\x2f\x72\x7c\x7c\x7e\x56\x63\x48\x25\x81\x2b\x80\x33\xb5\xa8\xc2\x19\x8e\x54\xc8\x8e\x9f\xe7\x33\x7c\x14\x1d\xdb\xa5\xd6\x37\xce\xf0\x9f\xff\x3e\x3e\x3f\xeb\x61\xd9\x00\x17\x2d\x11\x63\x44\x64\xcf\x45\xa9\xe5\x86\x4b\xe5\x20\x40\x8e\xcc\xc4\xb2\x3b\x01\xbb\x2d\xb9\x75\x70\x81\x23\xb5\x37\xfe\x3f\x1b\xd9\x28\x63\x6a\x54\x37\x6f\x46\x6d\x00\xe5\xf7\x2e\xd9\x51\x01\x61\x28\x72\x60\x98\x32\x5c\x75\x03\x93\xf3\x65\xdd\x64\xe3\xd5\xc0\xb5\xd3\x76\x33\xd1\x5e\x0f\xba\xa9\x24\x8b\x08\x7d\x10\xf6\x2a\x0a\xc6\xa4\x5f\xa0\xbd\x06\x28\x20\xbd\xb1\xe8\x7e\x67\x39\xe5\x03\xf7\x3a\x3d\xb9\xd0\x67\x1c\x5e\xb2\xae\xd7\x44\x3f\x33\x55\x10\x26\xe0\xca\x06\x31\x69\x26\xdb\x53\xed\x32\x50\xc0\xb7\xe9\x1c\x7c\x61\xa6\xf8\x08\xbe\x04\x74\xc5\x31\xfc\x35\xe8\x0c\x45\x8b\xd1\x19\x20\x32\xc8\x23\x30\x49\x2b\x9d\x07\x0d\x8c\x4f\x36\x46\xd1\xfe\x01\x6f\xad\x24\x78\x51\x8a\x6e\x40\x1b\xdd\x9f\x03\x76\x5e\x7b\x01\x7e\x74\xec\x13\x8a\x78\x62\x4c\xeb\xcf\x17\xe6\x9d\x22\x1f\xdc\x82\x24\xf3\xf0\xa7\x2c\x6e\x9d\xc0\x0b\x22\x18\xa7\xec\x65\xda\x6d\xd1\xbe\x8d\x8a\x9f\xe0\x3c\xea\xb4\x81\x0d\x0d\xd7\x0b\x69\x86\x95\xb1\xe9\x89\x9c\xcd\xba\xb7\xfe\xf2\x67\xfc\x33\xad\x68\xa3\x68\xe2\xe8\x11\xf1\xe4\x85\x70\xaa\x5e\x12\x67\xbe\xb2\x94\xc5\x12\xc7\x46\xe4\x05\x0c\x73\x54\x28\x76\x0a\x21\x11\xc9\x20\xbb\xa6\x23\x4a\xa0\x76\x5d\xd7\x00\x61\x31\x84\xd3\xda\x3d\x69\x44\x6c\x47\x6e\x60\x3b\x6e\x71\xc4\x6b\x49\x7f\x7d\x8e\x6c\x89\x19\x0a\xf1\xca\x84\xec\x3a\x09\xc8\x9c\xef\x57\x32\xb2\xd3\xa0\x26\xcc\x5b\x1f\x23\xde\xe3\xa1\xbd\x25\x3d\x56\x94\x08\xd9\x5a\x66\xf3\x46\xd8\x92\xdc\x96\xa6\x76\x36\xdb\x24\xcf\x8d\x3d\x24\x87\xd4\x4b\x67\x6b\xd5\xc4\xfa\xee\xe4\x4a\x61\xbc\xb4\x29\x83\xfb\x1a\x79\x5c\x23\x4c\x2b\x85\x71\x96\xe5\x23\x3d\xf6\x3c\x54\xc6\x8d\x78\x9b\xd9\x62\xad\x63\x79\x2f\xa2\x75\xdb\xef\x2b\x8f\xc7\xfc\xc3\x4f\x70\xa7\x55\xb2\x93\x4f\x40\x0f\x47\xbb\x79\xca\x24\x1c\x80\xc7\x20\x4e\x2a\xfe\xbc\x70\xdb\x71\x4f\x2a\x95\xce\x18\x97\xab\x55\x71\xce\x78\x3c\xb3\x2d\x0b\x81\xc5\xb7\x75\x2f\x6f\x75\x54\xd3\x7a\xec\x94\xa1\x54\x95\xed\xf5\x65\x26\xef\xb4\x2a\xdf\x74\x89\xae\x6e\xaa\xf5\x97\x7f\xab\xee\x48\x16\x2f\xfb\x56\x1d\x2b\x67\x09\x68\xde\xc9\x4e\x9e\x7b\x7b\x4a\xbf\x09\x26\x7b\x87\x7b\x35\xa6\x03\x27\xfd\x11\x0b\x90\x92\xb2\x83\x58\xe5\x16\x13\x36\xcd\x98\x0f\xbd\xbb\x65\x89\x1e\x39\xa9\x0d\x9b\xb3\x72\x8b\xe6\xcd\xf9\x0c\x7f\x44\xb9\x91\xf3\x2d\xee\xca\xd5\x7d\x05\xb3\x6b\x17\x38\xab\x04\x28\xe5\xa1\x6f\x83\xcb\xcc\x70\x0e\xd3\xec\xec\x7b\xa3\x33\xef\xad\xcc\xb2\x2d\x34\xb9\xf6\x26\xcf\x43\x51\x74\x99\xa4\x46\x6a\x99\x31\xc2\x12\x65\xd9\x96\x65\xc8\xcd\xf4\xd6\x46\xfb\x9e\x8e\x19\xe6\x04\x69\x29\x47\x24\xf6\xe9\xe0\x9d\xe4\xbd\x66\xb4\x19\xe9\x1c\xb1\xbc\xe9\x0e\x8b\xbc\x2e\x7f\x96\xa4\x42\xcd\x52\x20\x0e\xbb\xae\x76\x79\xe6\x6b\x12\x8b\x37\xbc\x58\xf5\xae\x9e\x0c\x6e\xaf\x7c\x2c\x7c\x46\x9b\xad\x6b\xc1\x9e\x9f\xbd\x81\xa9\x34\x80\xe1\x9e\x19\xb4\xc5\x9a\x2e\x1e\xd3\xd4\xff\x68\xa3\x7b\x23\x98\x69\x3f\x59\xc0\x69\x48\xc4\x67\xb5\xdd\x80\xd1\x65\xea\xac\xc0\xb0\x24\x45\xdc\xcb\xdc\xe2\x65\x93\x20\x2e\x0d\x3a\xcd\xe1\x25\x40\xf4\x7a\xd1\x26\x79\x03\xe7\xaa\xa9\xae\xba\xe7\x1e\x81\xaf\xb8\xeb\x76\x45\x19\x4c\xba\x3b\xee\xc4\x0d\xb8\xef\x57\xe6\x75\x5f\xb1\xd4\x8c\x77\x1b\xb3\xa1\xf6\x48\xe8\xc9\x5b\x58\x7b\x96\x92\x40\x5d\x85\xe6\x61\x52\x03\x57\xdf\xca\x6f\xf1\x44\xa1\xbc\x35\x9d\x58\xe0\x0f\xf8\x7f\xbd\x9c\x37\xf2\x68\x08\x1f\x10\xc0\xd3\xb0\xb1\x11\x6d\xcc\xc0\x08\x5e\x87\x8a\x97\xa1\xd5\xb0\xd8\xf3\x9a\x12\xca\x74\x7c\x1f\x58\xe3\x45\xe7\x6b\xb1\x94\x24\x1b\x02\x21\x0a\x2a\x38\x13\x57\x98\x78\xcf\xbb\x16\x85\x75\x63\xba\x5d\x0c\xbb\x8f\x50\xc9\xa8\xdd\x59\xf2\xa9\x5d\xb4\x02\x4f\xc6\xc1\xbb\xd5\xa1\x5e\xb3\x3f\xbe\x21\xd5\x69\xec\x9a\xda\xc7\xc2\x51\xdd\x95\x2e\x8a\xba\x55\x50\x75\x93\x98\x2a\x2c\xba\xa5\x4b\x95\x9c\x79\xc7\x5b\xc0\x75\x6f\x86\x02\xfe\x3b\xa0\x79\xfd\x49\xf2\xbe\x70\xe5\xec\x5b\x3c\x0a\xe2\x42\x50\xef\x24\xde\xef\x2f\x37\x20\xa4\xae\x39\x88\x59\xf8\x9e\x0b\x1a\xf2\x06\x7a\x7c\x72\xb5\xd1\x33\x65\xe0\xbc\xe3\x58\x9c\x85\x84\x16\x57\x5d\x3d\x1e\xe4\x0b\x29\x13\xc1\x63\x7d\x5c\x0e\x68\x90\x38\x40\x47\x60\xe3\x69\x3a\xb1\x2c\x3b\xed\xd5\xcb\x72\xfd\xeb\x57\x66\x21\x67\x8b\x4b\x5e\xf5\xdd\xf4\xa2\xef\x16\x6a\xea\xd5\xda\x97\x54\x5a\x2f\xc6\x4c\x5e\xd9\xfe\xd5\x05\xd4\xd7\x57\xee\x5a\x8f\x0f\xbc\xa5\x12\x7f\xec\x26\xf8\x8b\xf7\x2a\x92\x0f\x36\x5e\xd8\x11\x01\x58\x76\x3d\xad\x82\x79\x63\x50\x3f\xfc\xf0\xf6\x6d\x73\x59\xf7\x59\x6e\x9d\x0d\x48\xa7\x5d\xeb\xb0\xd4\x63\xa3\x1f\x98\x4e\xcd\x68\x33\x41\xc4\x21\xbe\x62\xdd\x1c\x8f\x17\x11\x04\x78\xf4\xe0\x25\x99\xcc\x1f\xcb\x51\x49\xd0\x9b\xfa\x92\xe4\xb2\x68\x86\x2b\x5f\x38\x8a\xa7\xd0\x6f\x83\x8d\xe7\xfd\x80\xaf\x78\xfe\x90\x72\x57\x90\xc8\x42\xa6\x62\x1c\xaf\xa3\xed\x6a\x68\x52\x1d\x89\x34\xa4\xcb\x6c\xb1\x61\x4f\x2a\x39\x70\x9d\xf3\x99\x3a\xf6\x03\xab\xa6\x0b\x2f\xdd\xf1\xaf\x7f\x27\xfd\xcc\xc2\xd7\x3c\xf1\x69\x20\x3f\x78\x5d\x0e\x09\xdd\x2a\x8b\xb4\x80\x28\x36\xa6\xfe\x97\x4f\x37\xc8\x58\x27\x9e\x25\x61\x0f\xbe\xbb\xba\x2c\xe5\x7a\xe0\x14\x07\xbd\xaa\xa2\xa9\x24\xaf\x9d\x14\x8e\xd4\xb7\x62\x08\xa5\xbf\xf4\x48\x8d\x9d\xdd\xc1\x32\xdc\x90\x81\x55\x47\x83\x23\xaf\xb8\xe3\x40\x65\xa8\x02\xbc\x5b\xec\x3e\x8c\xc8\xab\xae\xfb\x22\xc4\xef\x2e\xae\xfd\xed\x18\x16\xa0\xeb\x70\x31\xb0\x25\xe3\x12\x0e\xfc\xfa\x0b\xbd\xc7\x74\x6d\xe0\xb6\x68\x4c\x14\xcf\x5f\xf9\xed\x68\x93\xc8\x00\x9a\x01\x54\xe7\x34\x52\x19\x95\x49\x27\x66\x15\x1b\x13\xe2\xc9\x3b\x14\x28\xa6\x9d\x09\x6f\xc3\x25\xe7\xb9\x17\x58\x93\xab\x58\x68\xf8\x3f\xbb\x0c\x2e\xf8\xf4\x08\xcf\x57\xfc\xc6\xa2\x96\xb5\x16\x77\x2f\x83\x2e\x97\x17\x12\x2c\x12\x43\xdb\x61\xf2\x7a\x4f\x33\x11\x8a\xbf\x38\x93\x1d\x27\x07\xc8\x54\x36\x2d\xf3\xcf\x80\x9a\x52\xcb\xb9\x0b\x30\x2b\x8f\xca\x96\x52\xf7\x6d\xf7\x94\xf8\x77\xf9\x04\x15\xfa\xbc\xfe\x33\xbc\xe5\x33\xbd\x9e\xe3\xf6\xd5\x1d\x89\xf9\x97\x32\xad\xd7\xd6\x12\x45\x1f\x73\x05\x69\xd4\x4b\xe7\x98\x86\x32\xb0\x07\x98\xbb\x2e\xa5\x08\x35\xcf\xf1\xcc\xd3\x39\xdb\x94\xc9\xa2\x9b\x5e\xbc\x1b\xaa\x13\xb8\x33\xef\xa4\x0d\x59\x72\xcf\xee\xa3\x0d\x92\xc9\xfe\xe7\x01\xf2\x82\x86\x8d\x07\x0b\x16\xa4\x93\x48\xfa\xff\xa5\x14\x92\x51\x05\xbf\xbb\xd8\xd6\x6a\x62\x23\xb4\x64\x06\x67\xcc\x8f\x96\x6d\x57\x1a\x68\x89\xa7\x21\x68\xa3\x50\x3d\x4d\x9b\x7c\x17\x73\x4f\x8d\x88\xf7\xee\x5f\xe3\xf9\x1d\x06\x63\xec\xc1\x39\x44\x25\xb9\xa8\x38\x5d\xa1\xa1\xaf\x56\xf5\x2b\xea\xb5\x46\x45\x7b\xbc\x47\xad\x32\x24\x05\x26\xa9\x4c\xe7\x6a\x67\xc1\x50\x8a\xa4\x0e\x7a\x65\x1e\x3e\x19\x66\xa5\x2d\xa3\x62\x9a\x8b\x67\x5c\x38\xb3\xc0\x5f\xab\x61\xe3\xba\xb6\xd8\x70\x7d\x21\xe8\xd2\x32\x55\xaa\x59\xe1\x6d\x39\xad\xc2\x4f\xf6\xe3\x4f\x67\x2e\x7d\x2f\x13\x2d\xf7\x6d\xaf\xf7\x7b\x72\xb6\xb5\xc7\xd7\xd4\xac\x92\x41\x76\xf8\x75\xb5\xcb\x77\x20\xf7\xa1\x37\x19\x49\xef\x99\x22\xd7\x96\xb9\xc2\xd2\xdd\x67\x1c\xc6\x27\xb6\x91\xd6\xc5\x6a\x73\xf6\x99\xef\xd0\xe1\xed\xb4\xa2\xbc\x0c\x8c\x4a\x5b\x2a\x05\x81\x43\x88\x5c\x59\xb1\xe3\x9a\x2f\xf5\x6d\x1d\x57\x4c\xb0\x64\xb8\x16\x38\xa2\x91\xb2\x39\x6f\x14\xb0\x50\x48\xef\x72\x7d\xbd\x43\x09\xb0\xbc\x91\x63\x59\x32\x34\x93\xcc\xe5\xef\x66\xc2\x35\x6e\x1d\x0b\xdf\x4a\xb6\xca\x6c\xdf\x7c\x51\x5f\xa9\x10\xb5\x28\x28\x1e\xeb\x53\xef\xd1\x76\x25\x8f\xa2\x21\x35\xbd\xb0\x38\xe8\x70\x47\xd1\x51\x68\x72\x4a\x41\x4c\x9a\xf7\xb5\x5a\x61\xd1\xdc\xb7\x5a\xb8\x45\x7e\x05\xab\xbb\x4a\x33\xa6\x75\xbd\xb1\x6a\x78\xf9\xa2\x15\x8b\xba\x7d\x76\x28\x5c\x56\xfa\x18\x7b\xcf\x47\xd4\x25\xc5\x74\x74\x8b\x35\xd3\xf6\x14\xab\x66\x98\x27\xba\xb6\x8c\xb1\xc8\xa5\x99\xac\xd2\x65\xe5\xf5\x94\xed\xa2\x0b\x32\x38\xbf\x82\xae\x69\x8b\x37\x17\x9f\x15\x94\xb1\xe1\xae\x94\x9c\xee\x06\x65\x3b\x5f\x51\xc8\x7e\xb3\x9f\xbd\x89\x8a\x23\x75\x8d\x77\x48\xdb\x79\x10\x3b\xf6\x2c\x96\x4c\xba\xa1\x99\xdf\xbd\x8a\x85\xab\x44\x82\x8a\x7f\xd2\x2a\x8a\x9c\x13\x0c\x29\x0d\xa2\xdd\xac\x5f\x43\xc6\x46\xd3\x19\x27\x84\x56\xd0\xe7\x2d\x8c\x69\x78\x6b\x3c\xd5\xf3\xbb\x52\xfe\xf8\x03\x2a\x2d\x67\xfe\xcf\x62\xfe\xd0\x7d\x62\xee\x87\x31\xc7\x5f\xc5\x54\x8d\x45\xbf\x8b\xc9\xbb\xa6\x81\x1a\xed\x48\x75\x7a\x78\x78\xf8\x5f\x00\x00\x00\xff\xff\xca\x26\x6d\x14\x6f\x53\x00\x00")

func migrations20210314_133041_global_resetSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210314_133041_global_resetSql,
		"migrations/20210314_133041_global_reset.sql",
	)
}

func migrations20210314_133041_global_resetSql() (*asset, error) {
	bytes, err := migrations20210314_133041_global_resetSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210314_133041_global_reset.sql", size: 21359, mode: os.FileMode(420), modTime: time.Unix(1633538786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210401_225727_add_automationSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x3d\x6f\xdb\x30\x10\xdd\xf5\x2b\x6e\x93\x83\xc6\x4b\x80\x2c\x4e\x3b\x14\x6d\x86\x02\x4d\xd1\x26\xf1\x2c\x9c\xc8\xb3\xc4\x9a\x22\x09\x92\x82\xe3\x16\xfd\xef\x05\x45\xeb\xc3\x31\xac\xca\x46\x3d\xb4\x1c\x0c\x93\x3a\x3e\xbe\x7b\x7c\x47\xdc\x7c\x0e\x6f\x2a\x51\x58\xf4\x04\x4b\x93\xcc\xe7\xf0\xf4\xed\x33\x08\x05\x8e\x98\x17\x5a\x41\xba\x34\x29\x08\x07\xf4\x42\xac\xf6\xc4\x61\x53\x92\x02\x5f\x0a\x07\x71\x5f\x08\x12\x0e\xd0\x18\x29\x88\x27\xcc\x52\xc0\xf2\x5b\x43\xc0\xb4\xe2\x22\x04\x64\xcd\x14\x1d\x90\xaa\x2b\x98\xa5\xda\xa6\xd7\x90\xa2\xe2\xe9\xd5\x5d\xd2\x6d\xc1\x5c\x86\x5f\xb7\x76\xc9\x2c\x01\x00\x10\x1c\xba\x91\x8b\xc2\x91\x15\x28\xc1\x58\x51\xa1\xdd\xc2\x9a\xb6\xd7\x4d\x98\xc2\x8a\xda\x30\x4f\x2f\x1e\x58\x49\x6c\x0d\x33\x56\xa2\xcd\x24\xa9\xc2\x97\xb3\x10\x73\x05\x6f\xdf\xc1\xcd\xed\xed\x15\xbc\x1e\x4a\x7b\x50\xb5\x94\x11\x8f\x93\x63\x56\x98\x26\xb3\x06\xef\xe4\xd1\x63\x75\x12\x0c\xff\x47\x39\xfa\xc1\x69\x85\xb5\xf4\x10\x74\x59\x2c\x5e\x85\xed\x73\x23\x15\x54\x8a\xba\xe4\x5a\x4b\x42\x75\x78\x7c\x8b\xb7\x42\xe9\x28\xee\x43\x4b\x98\xed\xf4\xcc\x45\x21\xd4\xc9\x59\x05\x0e\x49\x3b\x61\x5a\x39\x6f\x31\xc0\x78\x2b\x8a\x82\x6c\x76\x93\x85\x33\x5c\xb6\x5a\x27\xc3\x6d\x96\x56\x64\x49\x31\x72\x0d\x07\xb7\xf7\x51\x2b\xa8\x0d\x0f\x97\xcf\xd0\x31\xe4\x14\x56\x38\x49\xf2\x04\x8e\x86\x79\x47\x8f\xf0\x0c\x3d\x80\x17\x15\x39\x8f\x95\x81\x8d\xf0\x65\x33\x85\x1f\x5a\x51\x97\xf7\x87\xe5\xe3\xe3\xfd\x97\xe7\xec\xf9\xd3\xc3\xfd\xd3\xf3\xfb\x87\xaf\x11\x23\x1e\x75\x2e\x46\x72\x68\xd5\x98\xf9\xb8\x5b\xa7\x28\xbb\x77\xc3\x67\xbb\x79\x1f\xc6\xc8\xba\x10\x2a\x6b\xd0\x8e\xc1\x0c\x62\x7a\xb4\x7d\x98\x50\x8e\x67\xf9\xa6\x85\x19\xb7\x4c\x53\xed\x23\x96\x89\xaf\xc1\x54\xcb\xec\x56\xda\x4a\xf1\xc2\x6f\x23\xf7\x93\xaa\xf8\xcf\xac\x1b\x68\x41\x63\xc4\xdb\x90\xf3\xb8\xc7\xf7\x27\x72\xbf\x80\xea\x11\x7e\x8c\xfe\x2e\xe2\x3c\xf6\x06\xb7\x52\x63\xf4\xcc\x77\xa7\x55\xde\x3f\x70\x3f\x7f\xa5\x8b\x45\xb3\x76\x58\x4e\xdd\xbb\x77\x58\x50\xd3\xca\xe9\x58\x1d\x4d\xab\xa2\x63\xbe\x9f\xa6\xff\x98\xf0\xfd\x83\x7e\x51\xc3\xf7\xa6\xf9\xbb\x94\x2f\xe6\x96\x43\x0b\x20\xfb\x1f\xef\x3f\x66\xf5\xef\x5c\x7e\xc7\xf7\xb2\x37\x3f\x6c\x3d\x3f\xea\x8d\x6a\x9b\xcf\xae\xf3\x0c\x8b\x93\x7a\x4f\xab\x65\xe8\x89\x72\x64\xeb\x84\x5b\x6d\x86\xad\x64\x7b\xe4\x5d\x92\xfc\x0e\x00\x00\xff\xff\x8e\x08\x26\x01\xec\x0a\x00\x00")

func migrations20210401_225727_add_automationSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210401_225727_add_automationSql,
		"migrations/20210401_225727_add_automation.sql",
	)
}

func migrations20210401_225727_add_automationSql() (*asset, error) {
	bytes, err := migrations20210401_225727_add_automationSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210401_225727_add_automation.sql", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1633538786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210415_172812_run_historySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xcf\x4a\x03\x41\x0c\x87\xef\x79\x8a\x1f\xbd\x54\xd1\x7d\x82\x9e\x44\x7b\x10\xac\x68\xdb\x3d\x97\xd9\x9d\xd8\x0d\xce\x66\x86\x99\x2c\xab\x3e\xbd\x4c\x8b\x22\x78\xd0\x4b\x20\x7f\xbe\x84\x2f\x4d\x83\xab\x51\x8e\xd9\x19\xa3\x4d\xd4\x34\xd8\x3d\x3f\x40\x14\x85\x7b\x93\xa8\x58\xb6\x69\x09\x29\xe0\x37\xee\x27\x63\x8f\x79\x60\x85\x0d\x52\x70\xe6\xea\x90\x14\xb8\x94\x82\xb0\xa7\x3e\x73\xdd\x65\xae\x0b\x8c\x3c\xe9\x61\x90\x62\x31\xbf\xd3\x05\x01\x80\xf8\x1a\x3b\x39\x16\xce\xe2\x02\x34\x1a\x74\x0a\xe1\xfa\xd4\x2d\xe6\xb2\xc1\x64\xe4\x62\x6e\x4c\x98\xc5\x86\x53\x8a\x8f\xa8\x0c\xcf\x2f\x6e\x0a\x86\xdb\x76\xbb\x5d\x3f\xee\x0f\xfb\xfb\xcd\x7a\xb7\xbf\xd9\x3c\x9d\xe9\x05\xab\x5f\x00\x7f\xf3\xf5\x20\x5d\xae\x88\x7e\xda\xdf\xc5\x59\xbf\xfc\xbf\xe5\x6b\xf1\x5f\xfa\x39\x86\xc0\x1e\x9d\xeb\x5f\xc9\xe7\x98\x7e\x3f\x60\x45\x9f\x01\x00\x00\xff\xff\x08\x6a\x2a\x66\x6c\x01\x00\x00")

func migrations20210415_172812_run_historySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210415_172812_run_historySql,
		"migrations/20210415_172812_run_history.sql",
	)
}

func migrations20210415_172812_run_historySql() (*asset, error) {
	bytes, err := migrations20210415_172812_run_historySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210415_172812_run_history.sql", size: 364, mode: os.FileMode(420), modTime: time.Unix(1633538786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210422_161648_update_variablesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbb\x52\xf3\x30\x14\x84\x7b\x3d\xc5\x76\xc9\x3f\xff\xb8\xa1\x4d\x25\xec\x13\x26\x83\x71\xc0\x97\x82\x2a\xa3\x48\x07\xa2\x41\x91\x3d\x96\x4c\xc2\xdb\x33\x02\x72\xe9\x40\xe5\x9e\xdd\xd5\xec\x97\x65\xf8\xbf\xb7\xaf\xa3\x8a\x8c\x6e\x10\x59\x86\xe6\xa9\x84\xf5\x08\xac\xa3\xed\x3d\x66\xdd\x30\x83\x0d\xe0\x23\xeb\x29\xb2\xc1\x61\xc7\x1e\x71\x67\x03\xbe\x73\xc9\x64\x03\xd4\x30\x38\xcb\x46\xc8\xb2\xa5\x1a\xad\xbc\x2d\x09\xef\x6a\xb4\x6a\xeb\x38\x08\x00\x90\x45\x81\x7c\x5d\x76\x0f\x15\xd8\x47\x1b\x3f\x36\xd6\x20\xf2\x31\xc2\xf0\x8b\x9a\x5c\x84\x9f\x9c\x5b\xfc\xda\x50\x35\x6d\x2d\x57\x55\x7b\x39\x6e\x6e\x36\x5f\x8d\xf6\xc7\x97\xde\x72\x5d\xd3\xea\xae\xc2\x3d\x3d\x63\x7e\xfe\xef\x1f\x6a\x5a\x52\x4d\x55\x4e\x0d\x4e\x19\xcc\xd3\x61\x5d\xa1\xa0\x92\x5a\x42\x2e\x9b\x5c\x16\x94\x94\xee\xb1\x90\x17\x65\x21\xc4\x35\xaf\xa2\x3f\xf8\x13\xb1\x33\xae\x24\xfe\x09\xd8\xd8\x3b\xc7\x06\x5b\xa5\xdf\x84\x72\x91\x47\xc4\x34\xe6\xb2\x0a\x66\xec\x07\xe8\xde\x4d\x7b\x7f\x45\x4c\xab\xa0\x95\x61\x2c\x84\xf8\x0c\x00\x00\xff\xff\x9c\x19\x4d\x65\xbd\x01\x00\x00")

func migrations20210422_161648_update_variablesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210422_161648_update_variablesSql,
		"migrations/20210422_161648_update_variables.sql",
	)
}

func migrations20210422_161648_update_variablesSql() (*asset, error) {
	bytes, err := migrations20210422_161648_update_variablesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210422_161648_update_variables.sql", size: 445, mode: os.FileMode(420), modTime: time.Unix(1621140392, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210422_220814_update_entitySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbd\x6e\xea\x40\x10\x85\xfb\x7d\x8a\xd3\x01\xba\x72\x73\x5b\xaa\x8d\x3d\x44\x28\x8e\x49\xfc\x53\xa4\x42\x8b\x77\x12\x56\x59\xd6\x96\x77\x2c\x78\xfc\xc8\x42\x98\xa4\x4a\xa6\x3c\x73\x3e\xcd\xe8\x4b\x12\xfc\x3b\xb9\x8f\xc1\x08\xa3\xe9\x55\x92\xa0\x7a\xcd\xe1\x02\x22\xb7\xe2\xba\x80\x45\xd3\x2f\xe0\x22\xf8\xc2\xed\x28\x6c\x71\x3e\x72\x80\x1c\x5d\xc4\x95\x9b\x4a\x2e\xc2\xf4\xbd\x77\x6c\x95\xce\x6b\x2a\x51\xeb\x87\x9c\xc0\x41\x9c\x38\x8e\x0a\x00\x74\x96\x21\xdd\xe5\xcd\x73\x81\xde\x0c\x1c\x04\xc2\x17\x81\xe5\x77\x33\x7a\x41\x18\xbd\x5f\xff\x46\x17\x55\x5d\xea\x6d\x51\xcf\xbb\xfd\xff\xfd\x8f\xda\x34\x9b\x5d\x49\xdb\xc7\x02\x4f\xf4\x86\xe5\xf5\xd4\x0a\x25\x6d\xa8\xa4\x22\xa5\x6a\x66\xb1\x74\x76\x85\x5d\x81\x8c\x72\xaa\x09\xa9\xae\x52\x9d\xd1\x94\x34\x2f\x99\xbe\x27\x6b\xa5\xbe\x6b\xca\xba\x73\xb8\x89\x9a\x2d\x4d\xe1\x9f\x3c\x0d\x9d\xf7\x6c\x71\x30\xed\xa7\x32\x5e\x78\x80\x98\x83\xe7\xfb\x57\x76\xe8\x7a\xb4\x9d\x1f\x4f\xe1\x26\xaa\x35\xb1\x35\x96\xb1\x56\x5f\x01\x00\x00\xff\xff\x6e\x26\xc4\x79\xaf\x01\x00\x00")

func migrations20210422_220814_update_entitySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210422_220814_update_entitySql,
		"migrations/20210422_220814_update_entity.sql",
	)
}

func migrations20210422_220814_update_entitySql() (*asset, error) {
	bytes, err := migrations20210422_220814_update_entitySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210422_220814_update_entity.sql", size: 431, mode: os.FileMode(420), modTime: time.Unix(1621140392, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210426_184659_add_pluginsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4e\x03\x31\x10\x45\xfb\x39\xc5\xef\x02\x82\x3d\x41\x5a\x4a\x1a\x84\x72\x00\x67\xfd\x49\x46\xf1\x8e\x2d\x7b\x96\x64\x6f\x8f\xbc\x08\x58\x24\x0a\xdc\x58\x1a\xbd\x79\x9a\x37\x0c\x78\x98\xf4\x54\x83\x13\x87\x22\xc3\x80\xd7\x97\x67\xa8\xa1\x71\x74\xcd\x86\xdd\xa1\xec\xa0\x0d\xbc\x71\x9c\x9d\x11\xd7\x33\x0d\x7e\xd6\x86\xcf\xbd\x0e\x69\x43\x28\x25\x29\xa3\x8c\x95\xdd\xe5\xe1\x98\x88\x92\xe6\x93\x5a\x93\x3b\x01\x00\x0b\x13\xfb\xef\xbc\x39\x4a\xd5\x29\xd4\x05\x17\x2e\xb0\xec\xb0\x39\xa5\xc7\x15\x7b\x67\x6d\x5d\xba\x62\xdb\xf7\x83\xd0\xba\x3e\xe2\x98\x73\x62\x30\x44\xbe\x85\x39\x6d\x25\x6d\x69\xce\x09\x7f\x12\x72\xbf\x17\xd9\x86\x3f\xe5\xab\x7d\xa5\x7f\x77\xf7\xe1\xbf\xca\x6b\x4e\xeb\x2d\x61\xbc\x48\xac\xb9\xfc\x6e\xdf\x8b\x7c\x04\x00\x00\xff\xff\x35\x89\x51\x25\x64\x01\x00\x00")

func migrations20210426_184659_add_pluginsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210426_184659_add_pluginsSql,
		"migrations/20210426_184659_add_plugins.sql",
	)
}

func migrations20210426_184659_add_pluginsSql() (*asset, error) {
	bytes, err := migrations20210426_184659_add_pluginsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210426_184659_add_plugins.sql", size: 356, mode: os.FileMode(420), modTime: time.Unix(1621140392, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210505_161526_drop_nodesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xae\xc2\x30\x10\x84\xe1\x7e\x4f\x31\x5d\x8a\x27\x9f\xe0\xb5\x94\x34\x08\xe5\x00\x8e\x77\x44\x56\x18\xdb\xf2\x1a\x85\xe3\xa3\x08\x81\x28\x69\x47\xf3\xeb\x0b\x01\x7f\x37\xbb\xf4\x38\x88\xb9\x49\x08\x38\x9f\x8e\xb0\x02\x67\x1a\x56\x0b\xa6\xb9\x4d\x30\x07\x1f\x4c\xf7\x41\xc5\xb6\xb2\x60\xac\xe6\x78\x75\xfb\xc9\x1c\xb1\xb5\x6c\x54\xd1\x5e\x1b\x46\x5c\x32\x51\xaa\xd2\x91\xa2\xa7\xa8\xfc\x17\xf9\xb6\x0e\x75\x2b\x6f\xed\x43\xed\xe3\x4f\x58\xaf\x39\x53\xb1\xc4\x74\x15\x91\x67\x00\x00\x00\xff\xff\x4b\xfe\x16\x66\xc4\x00\x00\x00")

func migrations20210505_161526_drop_nodesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210505_161526_drop_nodesSql,
		"migrations/20210505_161526_drop_nodes.sql",
	)
}

func migrations20210505_161526_drop_nodesSql() (*asset, error) {
	bytes, err := migrations20210505_161526_drop_nodesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210505_161526_drop_nodes.sql", size: 196, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210514_161024_update_alexaSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x3d\x6f\xc2\x30\x18\x84\x77\xff\x8a\xdb\xa0\xaa\xb2\x74\x65\x4a\x93\x97\x0a\x35\x0d\x6d\x3e\x86\x4e\x91\xb1\x5f\xc0\xc2\xd8\x51\xec\x08\x7e\x7e\x95\xd2\xd2\xb2\xe1\xf1\x7c\xcf\xd9\xd2\x93\x24\x78\x3c\x9a\xdd\x20\x23\xa3\xed\x45\x92\xa0\xfe\x28\x60\x1c\x02\xab\x68\xbc\xc3\xac\xed\x67\x30\x01\x7c\x66\x35\x46\xd6\x38\xed\xd9\x21\xee\x4d\xc0\x85\x9b\x4a\x26\x40\xf6\xbd\x35\xac\x85\xb4\x91\x07\x44\xb9\xb1\x0c\x69\xf9\x2c\xbb\x70\x30\xd6\x06\xe8\xc1\xf7\x50\xde\x8e\x47\x07\xef\x3a\x2b\x47\xa7\xf6\x50\x32\x28\xa9\x79\x71\x37\x17\x38\x04\xe3\x5d\xc7\x4e\xff\xc1\x69\xd1\x50\x85\x26\x7d\x2e\xe8\x06\x16\x00\x90\xe6\x39\xb2\x75\xd1\xbe\x95\x08\x6a\x30\x7d\xec\x8c\xc6\xc6\xec\x8c\x8b\xd0\xbc\x95\xa3\x8d\x70\xa3\xb5\x77\xcd\x94\x75\x53\xa5\xab\xb2\xb9\xb9\xef\x9e\xba\xcb\x72\xe8\xb6\x87\xef\xf2\x74\x96\xeb\x8a\x56\x2f\x25\x5e\xe9\x13\xf3\xeb\xcb\x0f\xa8\x68\x49\x15\x95\x19\xd5\x3f\xff\x09\x98\x4f\xf9\xba\x44\x4e\x05\x35\x84\x9a\x1a\x94\x6d\x51\x4c\x51\xfb\x9e\xa7\x0d\x21\x4b\xeb\x2c\xcd\x69\x21\xc4\x7f\x63\xb9\x3f\xb9\x5f\x67\x57\x61\x53\x78\x97\xb2\xc1\x5b\xcb\x1a\x1b\xa9\x0e\x42\x88\xaf\x00\x00\x00\xff\xff\xeb\xaf\xef\x6f\x0a\x02\x00\x00")

func migrations20210514_161024_update_alexaSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210514_161024_update_alexaSql,
		"migrations/20210514_161024_update_alexa.sql",
	)
}

func migrations20210514_161024_update_alexaSql() (*asset, error) {
	bytes, err := migrations20210514_161024_update_alexaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210514_161024_update_alexa.sql", size: 522, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210519_173101_add_settingsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x41\x0a\xc2\x30\x10\x85\xe1\x7d\x4e\xf1\x76\x59\x48\x2e\xd0\x6e\x5d\xba\x11\xe9\x01\xd2\x64\x6c\x47\xd3\x24\x24\x53\x2a\x88\x77\x97\x2a\x8a\x08\x82\xdb\x9f\x99\xc7\x67\x0c\x36\x13\x0f\xc5\x0a\xa1\xcb\xca\x18\x1c\xf6\x3b\x70\x44\x25\x27\x9c\x22\x74\x97\x35\xb8\x82\x2e\xe4\x66\x21\x8f\x65\xa4\x08\x19\xb9\xe2\xf9\xb7\x1e\x71\x85\xcd\x39\x30\x79\x65\x83\x50\x81\xd8\x3e\x10\x28\x0a\x0b\x53\x55\x00\x60\xbd\x87\x4b\x61\x9e\xd6\x6d\x11\x8e\x43\xc5\xa9\xa6\xd8\xc3\xd3\xd1\xce\x41\xa0\xaf\x37\xdd\x34\x8f\xd6\x2a\xf5\x29\xdb\xa6\x25\xbe\x6c\x6f\xd8\x1a\xff\xa2\x95\x14\x02\x79\xf4\xd6\x9d\x7f\xf3\x7c\x49\xf9\xdb\xd7\x2a\x75\x0f\x00\x00\xff\xff\x8a\x9a\x8b\x99\x20\x01\x00\x00")

func migrations20210519_173101_add_settingsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210519_173101_add_settingsSql,
		"migrations/20210519_173101_add_settings.sql",
	)
}

func migrations20210519_173101_add_settingsSql() (*asset, error) {
	bytes, err := migrations20210519_173101_add_settingsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210519_173101_add_settings.sql", size: 288, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210521_235148_remove_zoneSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x0a\x02\x31\x10\x85\xe1\x7e\x4e\xf1\xba\x2d\x24\x27\xb0\xb5\xb4\x11\xd9\x03\xcc\x26\x0f\x77\x30\x26\x61\x27\xb2\xe2\xe9\x65\x11\xc5\xd2\xf6\xf1\x7e\xbe\x10\xb0\xbb\xd9\x65\xd1\x4e\x8c\x4d\x42\xc0\xf9\x74\x84\x15\x38\x63\xb7\x5a\x30\x8c\x6d\x80\x39\xf8\x60\xbc\x77\x26\xac\x33\x0b\xfa\x6c\x8e\x77\xb7\x9d\xcc\xa1\xad\x65\x63\x92\xb4\xd4\x86\xae\x53\x26\x9e\xb5\xd0\x11\xd5\xa3\x26\xee\x45\x7e\xad\x43\x5d\xcb\x47\xfb\x52\xdb\xf8\x17\xb6\xd4\x9c\x99\x30\x69\xbc\x8a\xc8\x2b\x00\x00\xff\xff\x5b\x18\xb1\x9e\xc4\x00\x00\x00")

func migrations20210521_235148_remove_zoneSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210521_235148_remove_zoneSql,
		"migrations/20210521_235148_remove_zone.sql",
	)
}

func migrations20210521_235148_remove_zoneSql() (*asset, error) {
	bytes, err := migrations20210521_235148_remove_zoneSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210521_235148_remove_zone.sql", size: 196, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210603_153850_update_messagesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbb\x4e\x03\x31\x10\x45\x7b\x7f\xc5\xed\xb6\x40\xfb\x03\xa1\xa5\xa4\x41\x28\x75\x34\x6b\x4f\x36\x4e\xc6\x0f\x79\xc6\x4a\x22\xc4\xbf\xa3\x00\x41\x34\x91\x76\xdb\xab\x7b\x4e\x73\xc6\x11\x4f\x29\xce\x8d\x8c\xb1\xad\x6e\x1c\xf1\xfe\xf6\x8a\x98\xa1\xec\x2d\x96\x8c\x61\x5b\x07\x44\x05\x5f\xd8\x77\xe3\x80\xf3\x81\x33\xec\x10\x15\x3f\xdc\xed\x14\x15\x54\xab\x44\x0e\x8e\xc4\xb8\xc1\x68\x12\x46\x62\x55\x9a\x59\x1d\x00\x50\x08\xf0\x45\x7a\xca\xa8\x74\x95\x42\x01\x47\x2d\x79\x42\xe0\x3d\x75\x31\x0c\x1f\x9f\xc3\x66\xf3\xbd\x3d\x3f\xd6\x84\x56\xea\xdd\xc3\x89\xa2\xec\xf6\xad\xa4\x55\x80\xf6\xe9\xc8\xde\x56\x31\x53\x09\xd7\x85\x80\x26\xdd\x19\x5f\x96\xfa\x7b\x5c\xf3\x56\x21\x7f\x5a\x03\x18\x0b\xcf\x8d\xd2\x2f\xe3\xfe\x07\x7f\x29\xe7\x7c\x4f\xfe\xd7\xfb\x36\x2e\x2a\xde\x8a\x08\x07\x4c\xe4\x4f\xce\xb9\xaf\x00\x00\x00\xff\xff\xd1\x1c\xd9\x8d\x49\x02\x00\x00")

func migrations20210603_153850_update_messagesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210603_153850_update_messagesSql,
		"migrations/20210603_153850_update_messages.sql",
	)
}

func migrations20210603_153850_update_messagesSql() (*asset, error) {
	bytes, err := migrations20210603_153850_update_messagesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210603_153850_update_messages.sql", size: 585, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210604_200254_update_pluginSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x6e\xc3\x30\x0c\x85\xe1\x9d\xa7\x78\x9b\x86\x42\x17\x70\xd7\x8e\x5d\x8a\xc2\x07\x90\x25\xd6\x66\x4b\x4b\x82\x45\xc1\x05\x82\xdc\x3d\x70\x82\x04\x19\xb3\xfe\x20\x1f\x3e\xef\xf1\xb6\xca\xbc\x05\x63\x8c\x95\xbc\xc7\xf7\xd7\x27\x24\xa3\x71\x34\x29\x19\x6e\xac\x0e\xd2\xc0\xff\x1c\xbb\x71\xc2\xbe\x70\x86\x2d\xd2\x70\xfb\x3b\x8e\xa4\x21\xd4\xaa\xc2\x89\x82\x1a\x6f\xb0\x30\x29\xa3\x6a\x9f\x25\x37\x02\x80\x90\x12\x62\xd1\xbe\x1e\xd3\x66\x92\xe7\x86\xdf\x56\xf2\x84\xc4\x3f\xa1\xab\xc1\x9d\xce\x6e\x18\xae\xed\x9d\xe8\x19\xf6\x51\xf6\x7c\xa7\x3d\x5c\x47\x7c\x49\xb6\x15\x55\x4e\x98\x42\xfc\x23\xa2\x4b\x00\x00\x00\xff\xff\x5f\x13\x9d\x77\xf1\x00\x00\x00")

func migrations20210604_200254_update_pluginSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210604_200254_update_pluginSql,
		"migrations/20210604_200254_update_plugin.sql",
	)
}

func migrations20210604_200254_update_pluginSql() (*asset, error) {
	bytes, err := migrations20210604_200254_update_pluginSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210604_200254_update_plugin.sql", size: 241, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210605_133028_update_messageSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x3b\x0e\x82\x40\x10\x06\xe0\x7e\x4e\xf1\x77\x14\x66\x4f\x60\x85\x4a\xb7\xbe\xa1\xb0\x5c\x61\x02\x1b\x61\xd9\x30\x63\xc0\xdb\x1b\x42\x34\x96\xb6\xff\x23\xf9\x8c\xc1\xaa\xf3\xf5\xe0\x94\x51\x44\x32\x06\xd7\xb3\x85\x0f\x10\x2e\xd5\xf7\x01\x49\x11\x13\x78\x01\x4f\x5c\x3e\x95\x2b\x8c\x0d\x07\x68\xe3\x05\xcb\x6f\x1e\x79\x81\x8b\xb1\xf5\x5c\x51\x6a\xf3\xec\x82\x3c\xdd\xd8\x0c\x1d\x8b\xb8\x9a\x85\x00\x60\x29\xb6\x47\x5b\xec\x0f\xd0\x57\x64\xe4\xb7\x53\x06\xe5\x49\xd7\x44\xbf\x8e\x5d\x3f\x86\x8f\xe4\xcb\x98\xc3\xbf\x20\x43\xdf\xb6\x5c\xe1\xee\xca\x07\x11\xbd\x03\x00\x00\xff\xff\x16\xa3\x46\x40\xe0\x00\x00\x00")

func migrations20210605_133028_update_messageSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210605_133028_update_messageSql,
		"migrations/20210605_133028_update_message.sql",
	)
}

func migrations20210605_133028_update_messageSql() (*asset, error) {
	bytes, err := migrations20210605_133028_update_messageSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210605_133028_update_message.sql", size: 224, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20210609_161535_add_telegramSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x4d\xaf\xd3\x30\x10\xbc\xfb\x57\xcc\xed\xb5\xe2\xe5\xc2\xf5\x9d\x10\xf4\x80\x44\x11\xf4\xe3\x6c\xb9\xf6\xb6\x59\xc5\xb1\x2d\x7b\xa3\x36\xfc\x7a\xe4\xb4\x09\x54\x02\xe9\xed\xcd\xbb\x33\xeb\x99\x9d\xa6\xc1\x87\x9e\x2f\xd9\x08\xe1\x98\x54\xd3\x60\xff\xf3\x1b\x38\xa0\x90\x15\x8e\x01\x2f\xc7\xf4\x02\x2e\xa0\x1b\xd9\x41\xc8\xe1\xda\x52\x80\xb4\x5c\x70\xe7\x55\x10\x17\x98\x94\x3c\x93\x53\x36\x53\xdd\x25\xe6\xe4\x09\x42\x9e\x2e\xd9\xf4\xda\xb6\x46\x8a\x5a\x29\x00\xa0\x20\x2c\xa3\x66\x07\x08\xdd\x04\x40\x88\x82\x30\x78\x3f\x8d\x6b\xd9\x18\x8a\x64\xc3\x41\x9e\x57\xe8\x8f\x7a\x62\x33\x15\x7d\xee\x16\x78\xad\x4c\x67\xca\x14\x2c\x15\xcc\x10\xac\xd8\xad\x9f\x40\x31\x60\x48\xae\xea\xb3\xa6\x58\xe3\xa8\x76\x1c\x79\xfa\xd3\x79\x9d\x08\xd3\x67\x55\x21\x70\xe2\x4b\xd5\x31\x6b\xbc\xcf\x87\x42\x39\x98\x9e\x70\xf7\xf0\x20\x4d\xd6\x9d\x36\x02\xe1\x9e\x8a\x98\x3e\xe1\xca\xd2\x4e\x4f\xfc\x8a\x81\xe0\xe8\x6c\x06\x2f\xf8\x7c\xdc\xed\x36\xdf\x0f\xfa\xf0\x75\xbb\xd9\x1f\x3e\x6d\x7f\x3c\x56\xfc\xc7\x78\xd1\xa9\xa3\x71\xf1\x92\x32\xf7\x26\x8f\xe8\x68\xc4\x6a\xb9\xe7\xeb\x2c\x7b\xad\xd6\x6f\x4a\xfd\x1d\xed\x97\x78\x0d\x73\xb8\x4b\xb2\xb5\xf9\xae\x6c\x73\xf4\x9e\x1c\x4e\xc6\x76\xca\xe5\x98\xfe\x99\xee\x7c\xc0\x37\xa5\x7e\x07\x00\x00\xff\xff\xb3\x1d\x9d\x23\x55\x02\x00\x00")

func migrations20210609_161535_add_telegramSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20210609_161535_add_telegramSql,
		"migrations/20210609_161535_add_telegram.sql",
	)
}

func migrations20210609_161535_add_telegramSql() (*asset, error) {
	bytes, err := migrations20210609_161535_add_telegramSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20210609_161535_add_telegram.sql", size: 597, mode: os.FileMode(420), modTime: time.Unix(1636477382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20211213_002431_update_zigbee2mqtt_devicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbd\x4e\xc3\x40\x10\xc4\xf1\xfe\x9e\x62\x3a\x17\xc8\x0d\x65\xd2\x52\xd2\x20\x94\x1a\xad\x6f\x87\x64\x61\x7d\x77\xf8\xd6\x84\x0f\xf1\xee\x28\x20\x10\xa2\x4a\xfb\xd7\x8c\xf4\x1b\x47\x5c\xcc\xb6\x5f\x24\x88\x5d\x4b\xe3\x88\xdb\x9b\x6b\x58\x41\x67\x0e\xab\x05\xc3\xae\x0d\xb0\x0e\xbe\x30\xaf\x41\xc5\xf1\xc0\x82\x38\x58\xc7\xf7\xef\x34\xb2\x0e\x69\xcd\x8d\x9a\xc4\x83\x0b\x42\x26\x27\xde\x6c\x3f\x91\x97\xf3\x53\xc4\x9d\xf2\xd9\x32\x7b\x02\x00\x51\x45\xae\xbe\xce\x05\x4d\x5e\xbd\x8a\xe2\xa1\xd7\x32\x41\x79\x2f\xab\x07\x86\xf7\x8f\x61\xb3\xf9\x6a\xdb\x94\xfe\x1a\xaf\xea\xb1\xfc\x28\x7f\x89\xa7\x78\x16\x72\xa9\xee\x54\x4c\x92\x1f\xcf\x82\xea\x52\xdb\x7f\x69\x96\x9e\x45\xb9\x4d\xe9\x33\x00\x00\xff\xff\x42\x7e\x4a\x6e\x3c\x01\x00\x00")

func migrations20211213_002431_update_zigbee2mqtt_devicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20211213_002431_update_zigbee2mqtt_devicesSql,
		"migrations/20211213_002431_update_zigbee2mqtt_devices.sql",
	)
}

func migrations20211213_002431_update_zigbee2mqtt_devicesSql() (*asset, error) {
	bytes, err := migrations20211213_002431_update_zigbee2mqtt_devicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20211213_002431_update_zigbee2mqtt_devices.sql", size: 316, mode: os.FileMode(420), modTime: time.Unix(1639848845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20211219_181232_update_entitySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\xc5\x6d\xc9\x8f\x1f\x5e\xba\x66\xed\xd8\xa5\x28\x32\x1b\x8a\x74\x71\x08\xcb\x94\x20\xd1\x48\xf3\xf6\x85\xea\x36\xf0\x12\x34\x1a\x79\xa4\xc8\xfb\xae\xef\xf1\x7f\x96\xb1\x38\x23\x8e\xb9\xeb\x7b\x7c\xbc\xbf\x41\x14\x95\xde\x24\x29\x76\xc7\xbc\x83\x54\xf0\x93\x7e\x31\x06\x5c\x2f\x54\xd8\x45\x2a\xd6\xb9\xd6\x24\x15\x2e\xe7\x28\x0c\x9d\x8b\xc6\x02\x73\xa7\x48\x50\x4d\x4c\x58\x3b\x00\x28\x54\x37\x13\x3e\xc5\x65\x56\xd8\x2d\x13\x96\x90\xe3\x32\x8a\x0e\x4d\x3a\x74\x8f\x87\x5d\x08\xf0\x49\xab\x15\x27\x6a\x77\x6d\x78\x19\xd6\x0f\xea\x70\x9e\xbe\x1b\xdb\x3b\xa7\x42\x19\x15\x13\x6f\xd8\x6f\x16\xfc\x43\xe1\x99\x85\xea\x59\x7f\x16\x57\xec\x57\x25\x29\x02\x23\x8d\xa8\x34\xe8\x12\x63\x2b\x2d\x39\x34\x30\xde\x55\xef\x42\x3b\x70\x8b\xeb\x35\x5d\xf5\x17\xd8\x9d\x56\x2b\x3e\xc5\xab\xa4\x18\x19\x70\x72\x7e\x7a\x6c\x3b\x94\x94\xff\xf4\xbd\x39\xef\x49\xf8\x1b\x26\x2d\x83\x96\xc5\xa1\xfb\x0a\x00\x00\xff\xff\xb0\x3e\xce\xcb\x0a\x02\x00\x00")

func migrations20211219_181232_update_entitySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20211219_181232_update_entitySql,
		"migrations/20211219_181232_update_entity.sql",
	)
}

func migrations20211219_181232_update_entitySql() (*asset, error) {
	bytes, err := migrations20211219_181232_update_entitySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20211219_181232_update_entity.sql", size: 522, mode: os.FileMode(420), modTime: time.Unix(1642782060, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220114_222818_update_pluginsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4e\x04\x31\x0c\x85\xe1\x3e\xa7\x78\xdd\x16\x28\x27\xa0\xa5\xa4\x41\x68\x0f\xe0\x89\xbd\x3b\x16\x9e\x38\x4a\x1c\x0d\xc7\x47\x23\x18\x44\x83\xb4\xed\xaf\xf7\xa4\x2f\x67\x3c\x6d\x7a\xef\x14\x82\x6b\x4b\x39\xe3\xfd\xed\x15\x5a\x31\xa4\x84\x7a\xc5\xe5\xda\x2e\xd0\x01\xf9\x94\x32\x43\x18\xfb\x2a\x15\xb1\xea\xc0\xf7\xef\x18\xe9\x00\xb5\x66\x2a\x9c\xc8\x42\x3a\x82\x16\x13\x34\x9b\x77\xad\x23\x01\x00\x31\xa3\xb8\xcd\xad\x82\x4a\x78\xc7\xe2\x6e\x60\xb9\xd1\xb4\xc0\x8d\x6c\xc8\x73\x4a\x7f\x39\x2f\xbe\xd7\x13\xf4\xab\x39\xe2\x43\x9e\xee\x66\xc2\x58\xa8\x7c\xfc\x6b\xe2\xee\xed\x44\xfd\x74\x14\x1a\x85\xf8\xb0\x7c\x05\x00\x00\xff\xff\x72\xc0\x53\x96\x1b\x01\x00\x00")

func migrations20220114_222818_update_pluginsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220114_222818_update_pluginsSql,
		"migrations/20220114_222818_update_plugins.sql",
	)
}

func migrations20220114_222818_update_pluginsSql() (*asset, error) {
	bytes, err := migrations20220114_222818_update_pluginsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220114_222818_update_plugins.sql", size: 283, mode: os.FileMode(420), modTime: time.Unix(1642782060, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220201_003002_update_triggersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3d\x4e\xc4\x30\x10\x46\x7b\x9f\xe2\xeb\x16\x04\x3e\xc1\xb6\x94\x34\x08\x6d\x6d\x0d\xf6\x28\x3b\xda\xec\xd8\xf1\x8f\x92\xe3\x23\x03\x81\x20\x50\xb4\xed\xa7\x37\x4f\xf3\xac\xc5\xc3\x55\x86\x4c\x95\x71\x4a\xc6\x5a\xbc\xbe\x3c\x43\x14\x85\x7d\x95\xa8\x38\x9c\xd2\x01\x52\xc0\x0b\xfb\x56\x39\x60\x3e\xb3\xa2\x9e\xa5\xe0\xf3\xae\x43\x52\x40\x29\x8d\xc2\xc1\xf8\xcc\xdd\xd5\x54\xa6\xc6\x10\x0d\xbc\x40\xe9\xca\x8e\xaa\xab\x59\x86\x81\x73\x71\x4d\x27\x03\x00\x51\xb1\x6e\xb8\xeb\xd4\x23\x2a\x95\x8b\x93\x70\x7f\xdc\x35\xd1\xc7\x73\xbf\x44\x5f\xd3\x5f\x8f\xd9\x36\x3e\xc5\x59\xd7\xca\xef\xc4\x3e\xde\x14\x99\xe3\x38\x72\xc0\x1b\xf9\x8b\x09\x39\xa6\x9d\x3e\x78\x2a\x9e\x02\x1f\xff\x03\x37\xef\xff\x70\xe6\x3d\x00\x00\xff\xff\x20\x00\x08\x6f\x8c\x01\x00\x00")

func migrations20220201_003002_update_triggersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220201_003002_update_triggersSql,
		"migrations/20220201_003002_update_triggers.sql",
	)
}

func migrations20220201_003002_update_triggersSql() (*asset, error) {
	bytes, err := migrations20220201_003002_update_triggersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220201_003002_update_triggers.sql", size: 396, mode: os.FileMode(420), modTime: time.Unix(1659440855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220209_223600_add_dashboardSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x98\xcf\x6e\xdb\x38\x10\xc6\xef\x7a\x8a\xb9\xd9\xc6\xc6\xc0\x22\x40\x2e\xc9\xee\x61\xb1\xcd\xa1\x40\x53\xb4\xf9\x73\x16\x28\x72\x6c\xb1\x96\x48\x85\x1c\xd5\x76\x8a\xbe\x7b\x41\xca\xb2\x24\xdb\x92\x19\xdb\xe1\x29\xa6\x86\x1f\x45\xce\xf7\x1b\x8a\x99\x4e\xe1\xaf\x5c\xce\x0d\x23\x84\x97\x22\x9a\x4e\xe1\xe9\xfb\x17\x90\x0a\x2c\x72\x92\x5a\xc1\xe8\xa5\x18\x81\xb4\x80\x2b\xe4\x25\xa1\x80\x65\x8a\x0a\x28\x95\x16\xaa\x71\x2e\x48\x5a\x60\x45\x91\x49\x14\x11\xcb\x08\x0d\x10\x4b\x32\x84\x9f\xcc\x48\xf7\x87\x8d\x00\x00\x0c\x2a\x96\x23\x70\x9d\x95\xb9\x02\x56\x92\xce\x34\x13\x40\x1a\xec\xda\x12\xe6\x77\x51\xc4\x0d\xba\x17\xa9\x46\x0b\x66\xd3\x44\x33\x23\x6c\x34\xf6\x02\x52\xc0\xb6\x25\x72\x6e\xd1\x48\x96\x41\x61\x64\xce\xcc\x1a\x16\xb8\xbe\xf2\x61\x7e\x96\x4d\x23\x5c\x11\xf0\x14\xf9\x02\xc6\x3c\x65\x26\xce\x50\xcd\x29\x1d\xbb\x98\x09\xfc\xf3\x2f\x5c\xdf\xdc\x4c\xea\x60\xa5\x09\x54\x99\x65\x95\x8c\x40\xcb\x8d\x2c\xfc\xfa\xfa\x64\x5a\x31\x8d\x5a\x23\x81\xca\x2d\xa4\x7a\xeb\x44\xeb\x0c\x99\x82\xbd\x26\x70\xc6\xca\x8c\x60\xc6\x32\x8b\xd5\x38\x66\x90\xc5\x9b\xd5\x26\x72\x2e\x15\xed\x0f\x3b\xd8\xdc\xd4\x51\xfd\x83\x6b\x65\xc9\x30\x37\x7a\xbb\x95\xf1\x75\xec\xc4\x6d\x3c\x5b\x44\xed\x81\x06\x67\x68\x50\x71\xb4\x7e\x72\xdb\x79\xa8\x15\x94\x85\x70\x89\xe1\xcc\x72\x26\xd0\xf5\x08\xcc\x90\x10\x2c\xb6\xf7\xac\xca\x9f\x88\x19\x01\x90\xcc\xd1\x12\xcb\x0b\x58\x4a\x4a\xfd\x4f\x78\xd3\x0a\xb7\x0b\xfe\xff\xe5\xf1\xf1\xfe\xeb\x73\xfc\xfc\xf9\xe1\xfe\xe9\xf9\xbf\x87\x6f\x95\x46\x35\xd5\xa9\x1a\xd1\xa4\xb1\x51\xa9\xe4\x6b\x89\x20\x95\xc0\x95\x77\x45\xcc\x28\x6e\x5c\x15\x97\xea\x35\xda\xac\xaf\xe9\x85\xca\x1b\xbd\x66\x8c\x89\x25\x87\x0c\x19\xea\xc8\x40\x4b\x76\xbd\x28\xb9\x56\xef\x14\xe8\x9a\x6b\x34\xda\x77\x64\xbf\x25\x0f\xb4\x03\x2e\x5d\xa2\x9c\xa7\xb5\x33\xc3\x3d\xda\x68\xfd\xbd\x31\x8d\x2f\x08\xf1\x52\x0a\x4a\xcf\xd1\x99\xb3\xa2\x79\x76\x86\x4e\xc2\xf8\x62\x6e\x74\xa9\xc4\xc0\x66\x37\x41\xcd\x96\xef\x6e\x76\xe3\x19\x29\x02\x39\xae\xd3\x7e\x0c\xe2\x96\x8b\xfb\x49\x6e\x15\xd0\x76\xc4\x10\xce\x9b\x9e\x7d\x9a\xfb\x51\x1c\xd8\xd0\x00\xc2\x2f\xa3\x1b\x4e\xbd\xc7\xf7\x20\xf9\xfe\x49\x45\xff\x55\x27\x75\x03\xb5\x80\xf7\x9c\x4e\xbe\x0d\x14\x04\x92\x94\x75\x56\xd8\x67\x33\x1f\xd8\x57\x15\x3a\x46\x1d\x52\x09\x31\x6b\x87\x66\x38\x8f\xa0\x0a\xe5\xcb\x68\xa5\x17\x7c\xaf\x4e\xf5\x83\xf3\x2b\x60\xc7\x3b\xe1\x90\x07\x52\xce\x77\x50\xf7\x93\x04\xd0\x5e\x9d\x50\xed\xa8\x60\xe2\x0b\xb6\xf6\xdf\x64\xdb\xf6\xc3\x6a\x95\x04\x6d\x4f\xeb\xac\xf9\xf5\x7b\x74\x7b\xeb\x47\x1e\xa8\x23\xf0\x81\xb5\xe4\x62\xda\xd1\x11\xe6\x63\x49\x98\xf7\x82\xff\x2e\xf2\x4f\x43\x9f\xd6\xc5\xce\x8a\x7a\x65\xd6\x45\xfb\xab\xa0\x2b\xb3\x07\x7d\x3f\x5d\xc7\x50\x7a\xd7\x07\xee\xee\x6e\x7e\x04\x39\x2e\x45\x1d\x7c\x7c\x6f\x08\x3f\xfc\xf4\x23\x13\x15\x49\x5a\xc7\x2d\x4b\xb8\xbc\x84\xbf\xad\x1f\x2f\x71\xe8\x54\xaf\x43\x60\x2c\xc5\xe4\x42\x98\xf7\x73\xde\x0b\x75\x2a\x85\xc0\x4e\xb6\x9d\x01\x0e\x26\xad\x63\x80\x1d\x07\xce\x8c\x7e\xbb\x80\xcc\x5e\x89\xb9\xc8\xf5\xe3\x54\x25\x5f\x3e\xda\x37\xeb\x4f\x7a\xa9\xea\xbb\xf5\xf6\x62\xed\x3a\x83\xae\xd6\x46\x67\x0e\x35\x77\x8a\x47\xc2\xe8\x62\x53\x92\xe4\x0c\x70\x25\x2d\xed\x5a\xb7\x2a\x4e\x75\xc6\xef\xda\x43\x76\x3c\x7e\x24\xc6\x7f\x10\x0d\x86\xb4\x1e\x07\x5f\xfc\xab\xcb\xbe\xbb\xf6\xd7\xff\x02\xb8\x8b\xfe\x04\x00\x00\xff\xff\x31\xf6\x1b\x22\x86\x10\x00\x00")

func migrations20220209_223600_add_dashboardSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220209_223600_add_dashboardSql,
		"migrations/20220209_223600_add_dashboard.sql",
	)
}

func migrations20220209_223600_add_dashboardSql() (*asset, error) {
	bytes, err := migrations20220209_223600_add_dashboardSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220209_223600_add_dashboard.sql", size: 4230, mode: os.FileMode(420), modTime: time.Unix(1659440855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220508_230436_update_entitySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbd\x6a\xc4\x30\x10\x04\xe0\x7e\x9f\x62\x3a\x17\x41\x4f\x90\x36\x65\x9a\x10\x5c\x07\x59\x1a\xe2\x25\xf2\x4a\x48\x6b\x9c\xc7\x3f\xcc\xfd\x70\xe5\x75\xc3\x30\x03\x5f\x08\x78\xdb\xf4\xb7\x47\x27\xe6\x26\x21\xe0\xfb\xeb\x13\x6a\x18\x4c\xae\xd5\x30\xcd\x6d\x82\x0e\xf0\x9f\x69\x77\x66\x1c\x2b\x0d\xbe\xea\xc0\xf5\x77\x8e\x74\x20\xb6\x56\x94\x59\x62\x71\x76\x78\x5c\x0a\x41\x73\x75\xe5\x10\x00\xe8\xb4\xb8\x11\xa9\x96\x7d\x33\xb4\xd8\x69\x0e\xaf\xb7\xf4\xa3\xf9\x5d\xe4\x59\xf3\x51\x0f\xbb\x7b\x1e\x98\xb3\x7c\x89\xd3\x6b\x29\xcc\x58\x62\xfa\x13\x91\x4b\x00\x00\x00\xff\xff\xb6\xf4\x9a\x5e\xe6\x00\x00\x00")

func migrations20220508_230436_update_entitySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220508_230436_update_entitySql,
		"migrations/20220508_230436_update_entity.sql",
	)
}

func migrations20220508_230436_update_entitySql() (*asset, error) {
	bytes, err := migrations20220508_230436_update_entitySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220508_230436_update_entity.sql", size: 230, mode: os.FileMode(420), modTime: time.Unix(1659440855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220605_184850_update_dashboard_tabSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x4e\x04\x31\x0c\x85\xe1\xde\xa7\x78\xdd\x16\x28\x27\xd8\x96\x92\x06\xa1\xad\x91\x13\x7b\x77\x22\x3c\x71\x94\x78\x34\x1c\x1f\x8d\x10\x68\x3a\x68\x9f\xde\x5f\x7c\x29\xe1\x69\xad\x8f\xc1\xa1\xb8\x75\x4a\x09\x6f\xaf\x2f\xa8\x0d\x53\x4b\x54\x6f\xb8\xdc\xfa\x05\x75\x42\x3f\xb5\x6c\xa1\x82\x7d\xd1\x86\x58\xea\xc4\x77\x77\x9c\xea\x04\xf7\x6e\x55\x85\xd8\x42\x07\x82\xb3\x29\x84\xe7\x92\x9d\x87\xbc\x07\xe7\x49\x00\x20\xc3\x3b\x8a\xdb\xb6\x36\x3c\xb8\x5f\xe9\xaf\x80\x45\x4e\x7f\x64\x77\x83\xe8\x9d\x37\x0b\xdc\xd9\xa6\x5e\x89\xce\x88\x67\xdf\xdb\x0f\xe3\xd7\x70\x8c\xff\x52\x0c\x37\x53\x41\xe6\xf2\x41\x44\x5f\x01\x00\x00\xff\xff\x7a\xdc\x33\x0f\x1d\x01\x00\x00")

func migrations20220605_184850_update_dashboard_tabSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220605_184850_update_dashboard_tabSql,
		"migrations/20220605_184850_update_dashboard_tab.sql",
	)
}

func migrations20220605_184850_update_dashboard_tabSql() (*asset, error) {
	bytes, err := migrations20220605_184850_update_dashboard_tabSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220605_184850_update_dashboard_tab.sql", size: 285, mode: os.FileMode(420), modTime: time.Unix(1659440855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20220806_195936_update_areaSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x3b\x0e\xc2\x30\x0c\xc6\xf1\xdd\xa7\xf8\xb6\x82\x50\x4e\xc0\xca\xc8\x82\x50\xe7\x2a\x24\x16\xb5\x68\x9d\x34\x0f\xb5\xc7\x47\x01\x81\x18\x59\xff\x7e\xe8\x67\x0c\x0e\xb3\xdc\x93\x2d\x8c\x3e\x92\x31\xb8\x5e\xce\x10\x45\x66\x57\x24\x28\xba\x3e\x76\x90\x0c\xde\xd8\xd5\xc2\x1e\xeb\xc8\x8a\x32\x4a\xc6\xfb\xae\x2d\x49\x86\x8d\x71\x12\xf6\xe4\x12\xb7\x5f\x55\x65\xa9\x0c\x51\xcf\x1b\xd4\xce\x3c\xd8\x32\xd8\xc4\x36\x0f\x55\x17\x02\x80\xa0\x78\x05\xec\xda\x7c\x7f\x24\xfa\xc5\x9c\xc2\xaa\x1f\xce\xd7\xd2\xe2\x5f\x9a\x14\xa6\x89\x3d\x6e\xd6\x3d\x88\xe8\x19\x00\x00\xff\xff\x8f\xc0\xd2\xc6\xe5\x00\x00\x00")

func migrations20220806_195936_update_areaSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20220806_195936_update_areaSql,
		"migrations/20220806_195936_update_area.sql",
	)
}

func migrations20220806_195936_update_areaSql() (*asset, error) {
	bytes, err := migrations20220806_195936_update_areaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20220806_195936_update_area.sql", size: 229, mode: os.FileMode(420), modTime: time.Unix(1659790822, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20210314_133041_global_reset.sql":               migrations20210314_133041_global_resetSql,
	"migrations/20210401_225727_add_automation.sql":             migrations20210401_225727_add_automationSql,
	"migrations/20210415_172812_run_history.sql":                migrations20210415_172812_run_historySql,
	"migrations/20210422_161648_update_variables.sql":           migrations20210422_161648_update_variablesSql,
	"migrations/20210422_220814_update_entity.sql":              migrations20210422_220814_update_entitySql,
	"migrations/20210426_184659_add_plugins.sql":                migrations20210426_184659_add_pluginsSql,
	"migrations/20210505_161526_drop_nodes.sql":                 migrations20210505_161526_drop_nodesSql,
	"migrations/20210514_161024_update_alexa.sql":               migrations20210514_161024_update_alexaSql,
	"migrations/20210519_173101_add_settings.sql":               migrations20210519_173101_add_settingsSql,
	"migrations/20210521_235148_remove_zone.sql":                migrations20210521_235148_remove_zoneSql,
	"migrations/20210603_153850_update_messages.sql":            migrations20210603_153850_update_messagesSql,
	"migrations/20210604_200254_update_plugin.sql":              migrations20210604_200254_update_pluginSql,
	"migrations/20210605_133028_update_message.sql":             migrations20210605_133028_update_messageSql,
	"migrations/20210609_161535_add_telegram.sql":               migrations20210609_161535_add_telegramSql,
	"migrations/20211213_002431_update_zigbee2mqtt_devices.sql": migrations20211213_002431_update_zigbee2mqtt_devicesSql,
	"migrations/20211219_181232_update_entity.sql":              migrations20211219_181232_update_entitySql,
	"migrations/20220114_222818_update_plugins.sql":             migrations20220114_222818_update_pluginsSql,
	"migrations/20220201_003002_update_triggers.sql":            migrations20220201_003002_update_triggersSql,
	"migrations/20220209_223600_add_dashboard.sql":              migrations20220209_223600_add_dashboardSql,
	"migrations/20220508_230436_update_entity.sql":              migrations20220508_230436_update_entitySql,
	"migrations/20220605_184850_update_dashboard_tab.sql":       migrations20220605_184850_update_dashboard_tabSql,
	"migrations/20220806_195936_update_area.sql":                migrations20220806_195936_update_areaSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": {nil, map[string]*bintree{
		"20210314_133041_global_reset.sql":               {migrations20210314_133041_global_resetSql, map[string]*bintree{}},
		"20210401_225727_add_automation.sql":             {migrations20210401_225727_add_automationSql, map[string]*bintree{}},
		"20210415_172812_run_history.sql":                {migrations20210415_172812_run_historySql, map[string]*bintree{}},
		"20210422_161648_update_variables.sql":           {migrations20210422_161648_update_variablesSql, map[string]*bintree{}},
		"20210422_220814_update_entity.sql":              {migrations20210422_220814_update_entitySql, map[string]*bintree{}},
		"20210426_184659_add_plugins.sql":                {migrations20210426_184659_add_pluginsSql, map[string]*bintree{}},
		"20210505_161526_drop_nodes.sql":                 {migrations20210505_161526_drop_nodesSql, map[string]*bintree{}},
		"20210514_161024_update_alexa.sql":               {migrations20210514_161024_update_alexaSql, map[string]*bintree{}},
		"20210519_173101_add_settings.sql":               {migrations20210519_173101_add_settingsSql, map[string]*bintree{}},
		"20210521_235148_remove_zone.sql":                {migrations20210521_235148_remove_zoneSql, map[string]*bintree{}},
		"20210603_153850_update_messages.sql":            {migrations20210603_153850_update_messagesSql, map[string]*bintree{}},
		"20210604_200254_update_plugin.sql":              {migrations20210604_200254_update_pluginSql, map[string]*bintree{}},
		"20210605_133028_update_message.sql":             {migrations20210605_133028_update_messageSql, map[string]*bintree{}},
		"20210609_161535_add_telegram.sql":               {migrations20210609_161535_add_telegramSql, map[string]*bintree{}},
		"20211213_002431_update_zigbee2mqtt_devices.sql": {migrations20211213_002431_update_zigbee2mqtt_devicesSql, map[string]*bintree{}},
		"20211219_181232_update_entity.sql":              {migrations20211219_181232_update_entitySql, map[string]*bintree{}},
		"20220114_222818_update_plugins.sql":             {migrations20220114_222818_update_pluginsSql, map[string]*bintree{}},
		"20220201_003002_update_triggers.sql":            {migrations20220201_003002_update_triggersSql, map[string]*bintree{}},
		"20220209_223600_add_dashboard.sql":              {migrations20220209_223600_add_dashboardSql, map[string]*bintree{}},
		"20220508_230436_update_entity.sql":              {migrations20220508_230436_update_entitySql, map[string]*bintree{}},
		"20220605_184850_update_dashboard_tab.sql":       {migrations20220605_184850_update_dashboard_tabSql, map[string]*bintree{}},
		"20220806_195936_update_area.sql":                {migrations20220806_195936_update_areaSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
