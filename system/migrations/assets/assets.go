// Code generated by go-bindata.
// sources:
// migrations/20170121_004649_nodes.sql
// migrations/20170121_005244_workflows.sql
// migrations/20181109_220911_workflow_add_scenario.sql
// migrations/20181113_013141_workflow_elements.sql
// migrations/20181114_214137_devices.sql
// migrations/20181114_225604_device_group.sql
// migrations/20181119_092050_add_workers.sql
// migrations/20181219_205800_add_images.sql
// migrations/20181219_205810_add_users.sql
// migrations/20181223_231535_add_variables.sql
// migrations/20190122_002953_add_map.sql
// migrations/20190309_123940_add_logs.sql
// migrations/20190610_215124_add_passw_to_node.sql
// migrations/20190730_175759_update_node.sql
// migrations/20190730_193837_update_user.sql
// migrations/20190730_235533_fix_workflow_scenario_ref.sql
// migrations/20190910_234100_add_map_element_zone_attr.sql
// migrations/20190913_172212_rename_zone_tags.sql
// migrations/20191012_010345_update_device_actions_2_scripts_fk.sql
// migrations/20191019_150307_fix_constraints.sql
// DO NOT EDIT!

package database

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20170121_004649_nodesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xbd\x6e\xdb\x30\x18\xdc\xf9\x14\xb7\xc9\x41\xed\x25\x40\xa6\x4c\xaa\xa5\x00\x06\x04\xb9\x89\xa5\x22\x9b\x40\x8b\x1f\xe2\x0f\x96\x48\x96\xa4\xe0\xb8\x4f\x5f\xd0\x52\x5c\xdb\x2d\xd0\x86\x93\x7e\xee\x87\xb8\xbb\xc5\x02\x5f\x7a\x7e\x73\x32\x10\x6a\x2b\x16\x0b\x6c\x9e\x0b\xb0\x86\xa7\x36\xb0\xd1\x48\x6a\x9b\x80\x3d\xe8\x9d\xda\x21\x90\xc2\x61\x47\x1a\x61\xc7\x1e\x23\x2f\x82\xd8\x43\x5a\xdb\x31\x29\xd1\x3a\x8a\x5a\xe1\x68\x09\xda\x28\xf2\x8d\x0f\x32\x0c\x1e\xd2\x83\xf4\xd0\x63\x96\x90\x96\xdb\x8e\x54\x32\x47\xa2\xd8\x8f\xcf\x77\x8f\x42\x2c\x5f\xf2\xb4\xca\x51\xa5\x5f\x8b\x7c\xe4\x62\x26\x00\x56\x38\x9f\x2d\xbf\x79\x72\x2c\x3b\xdc\x1c\x6d\x02\xf4\xd0\x75\x68\x8d\xf6\xc1\x49\xd6\x61\xb2\xb7\x7b\x3a\xc2\x3a\xee\xa5\x3b\x62\x4f\xc7\x79\x94\xb4\xbf\x99\xdf\xa5\x5b\xee\xa4\x9b\xdd\x3f\x3c\xdc\x5d\x49\x96\xeb\x0a\x65\x5d\x14\x91\x60\x8d\x0b\x67\xab\xa1\x27\xc7\xed\xed\x0d\xae\x09\x5a\xf6\xf4\x29\x07\x45\xbe\x75\x6c\x4f\x71\x56\xf4\x1e\xfe\x94\xbf\x21\x8c\x41\xab\x46\x06\x20\x70\x4f\x3e\xc8\xde\xe2\xc0\x61\x77\x7a\xc5\x4f\xa3\x29\xe2\x06\xab\xfe\x89\x3b\x45\x17\xc1\x53\x57\x53\xa4\x17\xed\xfd\xed\x16\xc8\xf2\xa7\xb4\x2e\x2a\x9c\x1b\x15\x17\x35\xd6\xe5\xea\xb9\xce\xb1\x2a\xb3\xfc\xf5\x94\x5f\xc3\xb6\xb9\x6f\x46\xd5\x41\xff\x10\xc0\xba\xfc\xa8\x39\xfe\x9f\x83\x6d\xe4\x5f\x4e\x32\x33\x07\xfd\x31\xca\xf3\x22\xe3\xc7\xff\xda\xa4\x33\x5d\x47\x0a\x5b\xd9\xee\x45\xf6\xb2\xfe\x36\x4d\x6b\xf5\x84\xfc\x75\xb5\xa9\x36\x93\xfb\x32\xdd\x2c\xd3\x2c\x7f\x14\xbf\x02\x00\x00\xff\xff\x93\x5e\x11\x77\x0d\x03\x00\x00")

func migrations20170121_004649_nodesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20170121_004649_nodesSql,
		"migrations/20170121_004649_nodes.sql",
	)
}

func migrations20170121_004649_nodesSql() (*asset, error) {
	bytes, err := migrations20170121_004649_nodesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20170121_004649_nodes.sql", size: 781, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20170121_005244_workflowsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x6e\xe2\x30\x10\xbd\xe7\x2b\xe6\x06\xd5\x96\x4b\xa5\x9e\x7a\xa2\x90\xae\x90\x50\xd8\x42\x58\xf5\x16\xb9\xf6\x00\x5e\x12\x3b\x6b\x3b\x4b\xd9\xaf\x5f\x39\x04\xe3\x90\x40\xd3\xd5\xaa\xda\x39\x91\x64\x9e\x33\xf3\xde\x9b\x30\x83\x01\x7c\xc9\xf8\x5a\x11\x83\xb0\xcc\x83\xc1\x00\x16\xcf\x53\xe0\x02\x34\x52\xc3\xa5\x80\xde\x32\xef\x01\xd7\x80\x6f\x48\x0b\x83\x0c\x76\x1b\x14\x60\x36\x5c\xc3\x01\x67\x93\xb8\x06\x92\xe7\x29\x47\x16\x50\x85\xf6\x2c\xb3\xcf\x11\x34\x55\x3c\x37\x3a\x49\x89\x58\x03\xd1\x80\xa2\xc8\xa0\xdf\x33\xba\x77\x0b\x3d\x2a\x57\x2b\xc4\x43\x8a\xbd\xfe\x41\x7e\x91\xea\xea\xe6\x21\x08\x46\xf3\x70\x18\x87\x10\x0f\x1f\xa7\xe1\xf1\x20\xe8\x07\x00\x9c\x81\x8b\x57\xbe\xd6\xa8\x38\x49\x41\x48\x03\xa2\x48\x53\xa0\x52\x68\xa3\x08\x17\xc6\xbd\x3e\xdf\xe2\x1e\x72\xc5\x33\xa2\xf6\xb0\xc5\xfd\x6d\x00\x50\x96\x54\x45\xad\xcc\x68\x16\x43\xb4\x9c\x4e\x61\x1c\x3e\x0d\x97\xd3\xb8\x56\x98\x45\x0a\x92\xe1\x11\xf9\x9d\xa8\xd1\x86\xa8\xfe\xdd\xfd\xfd\x8d\x43\xda\x24\x2d\x0b\x45\xab\xb4\x18\xdf\x8c\x7b\xc0\xaa\x8e\x2d\x6b\xb5\x07\x54\x66\x39\x4f\x91\x35\x10\x07\x42\x59\x42\x0c\x80\xe1\x19\x6a\x43\xb2\x1c\x76\xdc\x6c\xca\x4b\xf8\x2d\x05\xba\xf6\x2d\xa0\xc8\x99\x03\xbc\x8f\x08\x2c\xd9\xbe\x68\x3b\xa9\xb6\xab\x54\xee\x74\xa2\x0d\x31\x85\xf6\x84\x43\x41\x5e\x53\x64\x56\x2d\xc6\xf5\xe1\x77\x43\x2b\x87\x6f\xa8\xd5\x22\xdb\x59\xb4\xa9\x78\xaa\xa7\x4d\x47\x5f\x0d\x68\x95\xc5\x8f\x9a\x44\x87\xee\xea\xd1\x68\xfe\x1c\x79\xb2\x85\x23\xe3\x4c\x55\x17\xa5\x8a\x6d\xd1\xa6\xac\x8b\x8f\x4b\xdc\x1d\x1a\x5c\x14\x2b\xd1\x14\x05\x51\x5c\x5e\x9b\xb1\x0f\x88\x75\x3a\xaf\x55\x35\x97\xc6\x19\x3c\x4e\xbe\x4e\xa2\x18\x46\xb3\x68\x11\xcf\x87\xf6\x67\xcb\x21\x77\xc9\x49\x99\xd5\x16\xe6\xe1\x53\x38\x0f\xa3\x51\xb8\xf0\xed\xc6\xd9\x0d\x48\x51\x91\x03\x94\x68\x4a\x18\xda\x3b\x0c\x53\x3c\xdd\xb9\x3a\xc4\x17\xdd\xb2\xd7\x06\xb3\xa4\xc4\x75\x02\x7c\xc6\xd8\x56\x52\x2e\xa3\xc9\xf3\x32\x84\x49\x34\x0e\x5f\xfc\x42\x3d\xd6\x3c\x2a\x0b\xf1\x33\x00\x98\x45\xad\xda\x7b\xe8\xf7\xbd\x92\x5c\xfa\x2c\xb7\x78\xa7\x93\x59\x92\x6b\x5f\xec\x66\xf6\xbf\x33\x8f\x4f\xc1\x7b\x2e\x52\xa8\x8d\xe2\xd4\x94\xae\x28\xeb\x4d\xea\xbd\x37\x6b\xaa\xd2\xfc\x8a\x8e\x9d\xd6\xeb\x71\x84\x76\xb4\x72\xe9\x82\xc1\xe0\xa2\x4e\x7f\xf3\xaf\x79\x0e\xff\x3f\x07\xd8\x67\xfe\x13\x09\x2f\x7b\x47\xbe\xde\x54\x1f\x5e\x4b\x58\x7d\xf6\x2f\x0e\xe6\xd9\x44\xb6\x0c\xa2\x86\xfe\x71\xf0\xfc\xb5\x6c\x2c\x77\xe2\xb8\x98\xb9\xad\xcc\xde\xec\xb4\x97\x29\x99\xda\xad\xe2\x95\xd0\x6d\x30\x9e\xcf\xbe\x55\x26\x99\x3c\x41\xf8\x32\x59\xc4\x3e\xff\xa3\xe1\x62\x34\x1c\x87\x0f\xd7\xf3\x9c\xad\x3a\xa7\x1f\x47\xeb\x83\x80\x8e\x2f\x6a\x64\x31\x25\xf3\xf6\x55\xc6\x7f\xe6\x2f\x7d\x0f\x7f\x02\x00\x00\xff\xff\x94\x9a\x1e\x28\x06\x0b\x00\x00")

func migrations20170121_005244_workflowsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20170121_005244_workflowsSql,
		"migrations/20170121_005244_workflows.sql",
	)
}

func migrations20170121_005244_workflowsSql() (*asset, error) {
	bytes, err := migrations20170121_005244_workflowsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20170121_005244_workflows.sql", size: 2822, mode: os.FileMode(420), modTime: time.Unix(1571472528, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181109_220911_workflow_add_scenarioSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x3f\x6b\xc3\x30\x10\xc5\x77\x7d\x8a\xb7\xa5\xa5\xb8\x43\xd7\x4e\x8e\xad\x96\x80\xeb\x50\xff\x99\x8d\x2c\x5d\x1a\x61\x45\x12\x92\x8c\xfb\xf1\x8b\x29\x49\x0a\xc9\xd0\xed\xf8\xf1\xde\x71\xf7\xcb\x32\x3c\x9d\xf4\x57\x10\x89\xd0\x7b\x96\x65\x68\x3f\x2b\x68\x8b\x48\x32\x69\x67\xb1\xe9\xfd\x06\x3a\x82\xbe\x49\xce\x89\x14\x96\x23\x59\xa4\xa3\x8e\xf8\xed\xad\x21\x1d\x21\xbc\x37\x9a\x14\xcb\xab\x8e\x37\xe8\xf2\x6d\xc5\xe1\xe7\xd1\x68\xf9\xbc\xb8\x30\x1d\x8c\x5b\x22\x03\xf2\xb2\x44\xb1\xaf\xfa\x8f\x1a\x67\x3c\x44\x49\x56\x04\xed\x06\xad\xb0\xdd\xbd\xef\xea\x0e\xc5\xbe\x6e\xbb\x26\x5f\xc7\x4b\xec\x65\xb8\x69\xc4\xe1\x30\xa1\xe1\x6f\xbc\xe1\x75\xc1\xdb\xdb\x95\x11\x0f\x5a\x3d\xc2\x59\xcc\x5e\xad\x3f\x4a\x11\xa5\x50\xb4\x12\x45\x86\xae\xe4\x95\xb1\xbf\x2e\x4a\xb7\xd8\xb3\x8d\x8b\x8a\x15\xfe\x4b\x46\x70\xc6\x90\xc2\x28\xe4\xc4\x84\x49\x14\x90\xc4\x68\xe8\x9e\x10\x15\x9c\x87\x74\x66\x3e\xd9\xfb\x46\xae\xf7\xfd\x04\x00\x00\xff\xff\x4a\xae\xf8\x19\xac\x01\x00\x00")

func migrations20181109_220911_workflow_add_scenarioSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181109_220911_workflow_add_scenarioSql,
		"migrations/20181109_220911_workflow_add_scenario.sql",
	)
}

func migrations20181109_220911_workflow_add_scenarioSql() (*asset, error) {
	bytes, err := migrations20181109_220911_workflow_add_scenarioSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181109_220911_workflow_add_scenario.sql", size: 428, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181113_013141_workflow_elementsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x41\x8f\xe2\x36\x14\xc7\xef\xf9\x14\xef\x06\xa3\xee\x5c\x46\xda\x13\x27\x06\x3c\x5b\x5a\x36\xec\x92\x50\xcd\x9e\x22\x4f\xfc\x00\x8b\xc4\x4e\x6d\x47\x0c\xad\xfa\xdd\x2b\x27\x24\x24\x21\x2c\xac\x34\x3b\xed\xc1\xbf\xcb\x30\xf6\xb3\xdf\xcb\xcb\xb3\x64\xc7\xff\xfb\x7b\xf8\x25\xe5\x1b\x45\x0d\xc2\x2a\xf3\xee\xef\x21\xf8\x3a\x07\x2e\x40\x63\x6c\xb8\x14\x30\x58\x65\x03\xe0\x1a\xf0\x15\xe3\xdc\x20\x83\xfd\x16\x05\x98\x2d\xd7\x50\x8e\xb3\x46\x5c\x03\xcd\xb2\x84\x23\xf3\x26\x4b\x32\x0e\x09\x90\xe7\x90\xf8\xc1\x6c\xe1\x03\x5f\x83\x90\x06\xf0\x95\x6b\xa3\x21\xdb\xc4\xea\x90\x19\x39\xf2\x02\x32\x27\x93\x10\x36\x28\x22\x45\x05\x93\x69\x94\xe7\x9c\x0d\xef\x46\x5e\xac\xd0\x86\x63\x0e\x19\xc2\x3a\x91\x7b\x1d\x69\x43\x4d\xae\x81\x6a\x40\x91\xa7\x30\x1c\xa0\xa0\x2f\x09\xb2\xc1\x07\x18\x30\xae\xcb\xdf\x77\x23\xaf\xf2\x1e\x8e\x1f\xe7\xa4\x1c\x0b\x43\x0f\x80\x33\x38\xe7\x85\x6f\x34\x2a\x4e\x93\x6e\x87\x0d\x57\xe4\x49\x02\xb1\x14\xda\x28\xca\x85\x39\xc6\x91\xed\xf0\x00\x99\xe2\x29\x55\x07\xd8\xe1\xe1\x83\x07\x20\x68\x8a\x67\x73\xff\x41\xd5\x64\x4b\xd5\xf0\xe1\xe3\xc7\xbb\x56\x87\xbf\x08\xc1\x5f\xcd\xe7\x76\x24\x43\x1d\x2b\x9e\x15\x19\xac\x09\xf1\xd5\xf4\x04\x0b\xf5\xa8\x63\x2e\xda\xb4\xd2\xd4\xe7\x0f\xa6\xe4\x69\xbc\x9a\x87\x70\x4a\x9d\x07\xb0\x97\x6a\x67\x87\x46\xcd\x04\x3d\xce\x3e\xcd\xfc\x10\x26\x0b\x3f\x08\x97\x63\xfb\xb3\x9c\xfd\x21\xaa\xcc\x75\xb4\xde\xc1\x92\x3c\x91\x25\xf1\x27\x24\xa8\xa7\xd1\x30\xe4\xec\x0e\xa4\x80\x3c\x63\xf6\x15\xc6\x54\xc7\x94\xa1\x6d\x61\x98\xe0\xa9\xa5\xe5\x5c\xc7\x28\xa8\xe2\xd2\x46\x71\xdd\x79\x6d\x7e\x29\x8a\x93\xc1\xf5\x70\x14\x6a\xa3\x78\x6c\x6c\x3c\x65\xd9\xb1\x88\x36\xf3\x6f\x78\x8a\xda\xd0\x34\x83\x3d\x37\xdb\xe2\x5f\xf8\x4b\x8a\xe2\x01\xca\x59\x6f\x1c\x50\x54\x94\x67\x6b\xb4\x5b\xde\x11\x26\x98\xa2\x30\xb7\x97\xf9\xe5\x19\x32\x25\x8d\xb4\xed\x51\xd1\x79\x9a\x89\xe1\x9a\xe6\x89\xb1\x33\x7d\x46\xad\xe9\x06\x7f\xa5\x82\x25\xa8\x1a\x2d\x24\xe5\xc6\x94\x2d\x21\xd5\x3b\xfb\xf7\x13\x35\xb8\xa7\x07\xfb\xf3\x29\x91\xfb\xfe\x35\x56\xbb\x2f\xd6\x9a\x5d\xc5\x8d\x7c\xac\x56\xb3\x29\x7c\x59\xce\x3e\x8f\x97\xdf\xe0\x77\xf2\xad\xb7\xb6\x1d\x0e\x87\xc3\xe1\x70\x38\xfe\x07\x54\xfb\xe5\xb3\xf3\x49\xcf\x9e\xff\xe2\x6e\xff\xad\xf9\xce\xe9\xa1\x75\x6e\xb8\x70\x56\xe8\xdd\x6d\xd6\xa7\x1d\x87\xc3\xe1\x70\x38\x1c\x8e\x77\xa3\xf7\xd3\xe4\x46\xd1\x6c\x1b\x69\x34\x86\x8b\x8d\x86\xdf\x82\x85\xff\xf8\x5f\x07\xea\x70\x38\x1c\x0e\x87\xc3\x01\x70\xbc\x56\x83\xc1\xdf\xff\x14\xbb\x96\xe2\x0b\x4b\xc2\xc5\xae\xec\x16\x79\x8a\x8a\xc7\xed\x31\xd5\xc7\x99\xce\x5d\xdd\x77\x2f\xf2\xdc\x47\x1a\x87\xc3\xe1\x70\x38\x1c\xef\x47\xbd\xc3\xa9\x15\x44\xd5\x36\xe7\x24\xf3\xe9\x17\x6d\x9d\x36\x33\x0f\x51\x9f\x6a\xec\xc7\x15\x63\xe5\x85\x57\xed\xf8\xba\xdb\x72\x40\xd7\xf1\xb1\xf5\x66\xd7\xf5\x8e\xad\xa3\x10\xfb\x01\x6d\xd8\x45\x55\xd8\x5b\x63\x43\xf5\x1a\x2a\xad\x95\x3f\xfb\xba\x22\x30\xf3\xa7\xe4\xb9\x90\x66\x1d\x5f\xc6\x29\x4b\xb9\xf8\xd3\x03\x58\xf8\x5d\x29\x97\x35\x3e\x93\x7b\xc5\x52\x88\x52\x18\x7a\x9b\xd8\xeb\xfa\x2d\xea\x0d\x77\xa7\x55\xfa\x8f\xb1\x45\x6b\x25\xd3\xd2\x55\xe3\xd5\x37\x22\x2b\x0c\xce\x9e\xf3\xbc\xf8\xba\x0f\x7b\x6b\x19\x56\x71\x18\x59\x3d\xf2\x85\x38\x8c\xfc\x89\x51\xb4\xd6\xe0\xf9\x52\x68\xc6\xf1\x56\xeb\xef\xda\x37\xd9\xee\x69\x28\x93\xbc\x7a\x5d\x16\x9d\xd2\x24\xe1\xc2\xb4\xae\xb1\x4b\x9b\x22\x95\x17\x6d\x18\x57\x47\x35\x72\x41\xab\x64\x9a\x76\x3f\x61\x7d\xd6\xaa\xcd\xa6\x50\x7a\x2a\xf7\xa2\x92\x4a\xd7\x3a\x69\xdb\x78\x93\x52\x5a\xc9\x24\x41\x06\x2f\x34\xde\x79\xd3\xe5\xe2\xcb\x71\x69\xcd\x9e\x80\x3c\xcf\x82\x30\x68\x2d\xb2\xc9\x38\x98\x8c\xa7\x64\xd4\x6f\xd9\xae\x9f\xeb\xb6\x0d\x1b\xa6\x64\x06\xf8\x6a\x50\x68\x1b\xd7\x49\x97\x5d\x74\x9c\x69\xaf\xbb\xed\x5d\x19\xc1\xe5\xfe\xf6\x49\x76\xf4\x6f\x00\x00\x00\xff\xff\x92\xea\xfe\x84\x71\x2e\x00\x00")

func migrations20181113_013141_workflow_elementsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181113_013141_workflow_elementsSql,
		"migrations/20181113_013141_workflow_elements.sql",
	)
}

func migrations20181113_013141_workflow_elementsSql() (*asset, error) {
	bytes, err := migrations20181113_013141_workflow_elementsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181113_013141_workflow_elements.sql", size: 11889, mode: os.FileMode(420), modTime: time.Unix(1571548141, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181114_214137_devicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x4f\xe3\x3a\x14\xdd\xe7\x57\x5c\xb1\x49\xa2\xd7\x6e\x90\xd8\x50\x09\x29\xb4\xee\x53\xa5\x2a\x7d\xaf\x4d\x47\xec\x22\x13\x1b\xf0\x90\x38\x19\xdb\x19\xe8\x20\xfe\xfb\xc8\x89\x9d\x0f\x68\x21\xa5\x78\xe5\xa6\xf6\xf1\xbd\xc7\xe7\x9c\x64\x3c\x86\x7f\x32\x76\x2f\xb0\xa2\xb0\x2d\x9c\x44\x50\x3d\x53\xbb\x82\x02\xa1\xbf\x59\x42\x65\x2c\x15\x56\xa5\x04\x2c\x81\xf2\x32\x03\xcf\xa5\x1c\xdf\xa6\x94\xb8\x23\x70\x09\x93\xf5\xdc\x9f\x38\xce\x74\x8d\x82\x08\x41\x14\x5c\x2f\x91\xdd\x0d\x9e\x03\xc0\x08\x34\xe3\x96\xdd\x4b\x2a\x18\x4e\x21\xc9\xb9\x54\x02\x33\xae\x9a\xa3\x8a\x47\xba\x83\x42\xb0\x0c\x8b\x1d\xe8\x39\xcf\x15\xf0\x32\x4d\x47\x0e\x00\xc7\x19\xb5\x28\x3f\xb0\x98\x3e\x60\xe1\x9d\x5f\x5c\xf8\xf0\xe9\x08\x57\x11\x84\xdb\xe5\x52\xa3\x10\x2a\x13\xc1\x0a\xc5\x72\x7e\x24\x0a\xa1\x77\xb8\x4c\x15\xb8\x6e\x8d\xa3\x4b\x8e\xab\xd6\x64\x86\xd3\x54\xf7\x31\x68\xd8\x4a\x78\x4e\xcc\x7e\x80\xeb\xc5\xbf\x8b\x30\x82\xe9\x2a\xdc\x44\xeb\x40\x4f\x2d\x25\xe7\xb1\x5e\x27\xe3\xbb\x47\x58\xa3\x39\x5a\xa3\x70\x8a\x36\xd5\x5e\x09\x1e\x23\x3e\xe4\x1c\xca\x82\xe8\x5b\x4b\xb0\x4c\x30\xa1\xfa\x09\xa1\x29\xed\x3c\xb1\x14\x16\x22\x2f\xa8\x50\x8c\x4a\x80\x9f\x32\xe7\xb7\xc3\x2a\xee\x36\xff\x72\x56\x60\x81\x33\x79\x76\xf9\xf2\xfa\x5a\x31\x51\x89\xc5\x0c\x45\x9f\x07\xb2\xd0\x03\x35\x13\xb7\x77\xdf\x46\x77\x66\x65\x4f\x8b\x9f\x31\x6c\xee\x1b\x66\x68\x1e\x6c\x97\x11\xb4\x92\xd5\x6a\x94\xf1\xbd\xc8\xcb\xa2\xe2\x7d\xb5\x5a\xa2\x20\x1c\x58\xaf\x85\x9b\x07\xcb\x0d\xd2\x50\xb5\x5d\x48\x8c\x15\x80\x62\x19\x95\x0a\x67\x05\x3c\x31\xf5\x50\xfd\x84\x3f\x39\xa7\xfb\xa1\xba\x8d\xd6\xd7\x77\x0a\x8a\xd3\xb1\xdf\x36\x5c\xfc\xbf\x45\xb0\x08\x67\xe8\xa6\xf2\x4c\x6c\xa4\x8a\x09\x11\x54\x6a\x45\x59\x36\x4b\xfe\x0b\x56\x61\x6b\x55\xbd\x7a\xd4\x2a\xdb\x9f\x58\xcc\x1a\xac\x55\xcf\x1e\x2c\x46\x9e\x7b\x58\x9e\xe7\x75\xd4\x36\xbe\x02\xb7\xd6\x8d\xeb\xc3\xf8\xea\x0a\x5c\x83\xe0\xfa\x97\x97\x8c\x2b\xff\x40\x7e\xc4\x38\xd1\x4e\x3d\x2a\x46\xec\x9e\xf7\x69\xf2\xa5\xd1\x0f\x8f\xd6\xf4\x87\x2c\xdb\x1c\xdf\x72\xd3\xf7\x6e\x43\xd1\x40\xf7\x9e\x96\x7d\xa7\x8c\xef\xc9\xcd\x93\x2a\x30\xa7\xd7\x67\x0f\x26\xbe\x5e\xfe\x96\x78\xf3\x74\x78\x6c\xda\xd3\xbf\x6e\xf3\x93\x7a\xef\xb0\xff\xf5\x88\xf8\x8e\x0a\xaa\x78\x19\x8f\x61\x5f\xc2\x18\xee\xab\xa0\x39\x8f\xdf\xdc\x44\x2f\x60\x5a\x2f\x37\x36\x1a\x55\xc2\x3e\xe4\x7d\x1d\xf6\x1f\x7e\x41\xbc\x19\x36\x0d\xf7\x44\x42\x0d\xf5\x2e\x11\x2a\x69\xed\xa4\xa2\x59\xd5\xc0\x61\x61\x1f\x72\x42\x74\xe8\x7d\x77\x74\x6a\x98\x0a\xbf\x33\x34\x06\xc9\xf6\xe8\x17\xd1\xa7\xef\x1c\xab\x88\x0e\xb1\xad\x32\x4c\x9b\x7d\x61\xd8\x8b\xee\xe8\xa2\xb3\xd9\x88\xaf\xf9\x4c\x9d\xe5\x4f\xdc\x99\xad\x57\xff\x19\xb5\x2c\xe6\x80\x6e\x16\x9b\xa8\x25\x69\x1a\x6c\xa6\xc1\x0c\x4d\x3e\x5a\xd5\xa8\x71\xd0\x62\x53\x61\xb3\x96\x88\xbc\xd8\xf7\x95\xbc\xef\x1f\xfd\x63\xf2\x37\x00\x00\xff\xff\x07\x85\x1f\x74\x68\x0b\x00\x00")

func migrations20181114_214137_devicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181114_214137_devicesSql,
		"migrations/20181114_214137_devices.sql",
	)
}

func migrations20181114_214137_devicesSql() (*asset, error) {
	bytes, err := migrations20181114_214137_devicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181114_214137_devices.sql", size: 2920, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181114_225604_device_groupSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x4b\xfb\x40\x10\xc5\xef\xf9\x14\xef\xd6\xff\x1f\xc9\xc5\x6b\x4e\x5a\xa3\x14\x42\xc4\xa4\x39\x87\xed\xce\xd4\x0e\x9d\xec\x2e\xd9\x8d\xf5\xe3\x4b\x6c\xaa\x82\x08\x5e\xbc\xfe\x78\xef\x31\xf3\xcb\x73\x5c\x0d\xf2\x3c\x9a\xc4\xe8\x42\x96\xe7\x68\x9f\x2a\x88\x43\x64\x9b\xc4\x3b\xac\xba\xb0\x82\x44\xf0\x2b\xdb\x29\x31\xe1\x74\x60\x87\x74\x90\x88\x73\x6f\x0e\x49\x84\x09\x41\x85\x29\x33\x9a\x78\x44\x32\x3b\x65\x10\xbf\x88\xe5\x98\x01\x34\xfa\x00\xeb\x75\x1a\xdc\x42\x7b\x21\x58\x13\xad\x21\x2e\x7e\x28\x19\xa2\xef\x9d\xdb\xcd\xc3\xa6\xde\x82\x78\x6f\x26\x4d\x70\x93\x2a\xd6\x8f\x75\xbb\x6d\x6e\xce\xfc\x3d\x78\xdd\x2f\x33\xfd\xfe\x88\xa6\xbc\x2f\x9b\xb2\x5e\x97\xed\x65\x1c\xff\x84\xfe\xc3\x3b\x4c\x81\xe6\xcf\x97\x43\x66\x42\xac\xfc\x49\x8a\x2c\xfb\x6a\xe8\xce\x9f\xdc\xc5\xd1\x87\xa0\x19\xfe\x4a\xd1\xe8\x55\x99\xb0\x33\xf6\xf8\xe7\x9a\xe2\x60\x54\xc5\x25\xd4\x5d\x55\x15\x6f\x01\x00\x00\xff\xff\xc3\x72\x5d\x09\xe6\x01\x00\x00")

func migrations20181114_225604_device_groupSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181114_225604_device_groupSql,
		"migrations/20181114_225604_device_group.sql",
	)
}

func migrations20181114_225604_device_groupSql() (*asset, error) {
	bytes, err := migrations20181114_225604_device_groupSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181114_225604_device_group.sql", size: 486, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181119_092050_add_workersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\xae\x9b\x30\x10\xbc\xfb\x2b\xf6\x16\xa2\xbe\x77\x79\xea\x3b\xe5\x44\xc0\xa9\x90\x10\xa9\x80\x54\xbd\x21\x07\x6f\x12\x0b\xb0\x91\x6d\x8a\xe8\xd7\x57\x2e\x09\x09\x69\x13\x29\x3e\xad\xd6\x3b\x3b\x66\x98\x79\x7f\x87\x2f\x8d\x38\x6a\x66\x11\x76\x2d\x29\x35\xba\xca\x0e\x2d\x42\xaf\x74\x85\xda\x14\xc6\x32\xdb\x19\x60\x06\x50\x76\x0d\x78\x0b\x94\x6c\x5f\x23\x5f\xbc\xc1\x82\x0b\x33\xd6\xcb\x15\x21\x41\x4a\xfd\x9c\x42\xee\xaf\x63\x7a\x41\x83\x47\x00\x04\x87\xf9\xd9\x8b\xa3\x41\x2d\x58\x7d\xd7\x07\xa9\x2c\xc8\xae\xae\xa1\x54\xd2\x58\xcd\x84\xb4\xd3\x3b\xda\x0a\x07\x68\xb5\x68\x98\x1e\xa0\xc2\xe1\x8d\x00\x48\xd6\xe0\x6c\xc1\x0f\xa6\x83\x13\xd3\xde\xc7\xe7\xe7\x72\x76\x91\x6c\x73\x48\x76\x71\xec\x50\x56\x3c\x44\x7d\x7d\x8c\x3a\xeb\x70\x3d\x1c\x7f\x89\x12\x27\x81\xfe\x45\x41\x48\x37\xfe\x2e\xce\xe1\x2a\x19\x01\x38\xd4\xaa\x2f\x6e\x25\x59\x47\xdf\xa2\x24\x87\x60\x9b\x64\x79\xea\xbb\xf2\xf2\xc9\x1f\x85\x1b\x36\xc5\xa1\x82\x94\x6e\x68\x4a\x93\x80\x66\x7f\x17\x18\xf0\x04\x5f\x82\x92\xd0\xb5\xdc\xfd\xb2\x92\x99\x92\x71\x74\x1d\x8e\x35\x5e\x3b\x8e\xd2\xed\x9b\xd1\x3e\xa3\xbc\x0c\xdf\xd3\x4e\xfd\x97\xa8\x47\x91\x0a\x56\x5a\xa1\xa4\xe3\x7f\x46\x3d\x1b\xbe\xe7\x9f\x5f\xbe\xf4\x88\xd1\xd6\xbc\x60\xf6\x2c\xb9\x73\x80\xb1\xac\x69\xa1\x17\xf6\x34\x1a\xe2\xb7\x92\x38\x19\xd0\xa1\xc6\xcd\xaf\xa0\x88\x8b\xc1\x6d\xa4\x42\xd5\x4b\x12\xa6\xdb\xef\xe7\x54\x44\x1b\xa0\x3f\xa3\x2c\xcf\xa6\x7c\x04\x7e\x16\xf8\x21\x5d\x11\xae\x55\xfb\xbf\xe0\xad\xc8\x9f\x00\x00\x00\xff\xff\x71\x19\xba\xa3\xa4\x03\x00\x00")

func migrations20181119_092050_add_workersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181119_092050_add_workersSql,
		"migrations/20181119_092050_add_workers.sql",
	)
}

func migrations20181119_092050_add_workersSql() (*asset, error) {
	bytes, err := migrations20181119_092050_add_workersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181119_092050_add_workers.sql", size: 932, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181219_205800_add_imagesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xcf\x4a\xc3\x40\x10\xc7\xf1\xfb\x3c\xc5\x1c\x15\xed\x13\xf4\xb4\x4d\x46\x59\xdc\xa4\x61\x77\x0a\xd6\x4b\x59\xed\x50\x17\xdc\x18\x92\x11\xff\x3c\xbd\xf8\x67\x55\x90\xe8\x9c\x3f\xfc\x18\xbe\x8b\x05\x9e\xe4\x74\x18\xa3\x0a\x6e\x06\xa8\x3c\x19\x26\x64\xb3\x72\x84\x29\xc7\x83\x4c\x78\x04\x88\x69\x8f\xe5\x56\xf6\x3c\x90\xb7\xc6\x61\xe7\x6d\x63\xfc\x16\x2f\x68\x7b\x0a\x88\x7a\xfb\x90\xaf\x3f\x8c\xca\x93\x16\xdf\xae\x19\xdb\x8d\x73\x6f\xe4\x7d\xf1\x6f\x92\x53\x96\x9d\x3e\x0f\x32\x4f\x34\xe9\xdd\x3f\x2b\x53\x7a\x91\xef\x7f\x6d\xcb\xbf\x49\x1f\x73\x21\x73\x2b\x37\xa3\x44\x95\xfd\x2e\x2a\xb2\x6d\x28\xb0\x69\x3a\xbe\xfa\x22\x70\xbc\x04\xf8\x19\xb0\xbe\x7f\xec\xa1\xf6\xeb\xee\x33\xa0\x3d\x43\xba\xb4\x81\x43\x49\x59\x99\x50\x99\x9a\x96\xf0\x1a\x00\x00\xff\xff\x96\x1a\x0b\xaf\x77\x01\x00\x00")

func migrations20181219_205800_add_imagesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181219_205800_add_imagesSql,
		"migrations/20181219_205800_add_images.sql",
	)
}

func migrations20181219_205800_add_imagesSql() (*asset, error) {
	bytes, err := migrations20181219_205800_add_imagesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181219_205800_add_images.sql", size: 375, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181219_205810_add_usersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4b\x6f\xe3\x36\x10\xbe\xeb\x57\xcc\x2d\x31\x9a\x5c\x02\xec\x29\x27\xc5\x66\xb6\x6a\x1d\x39\x2b\xc9\xc5\x6e\x2f\x02\x2b\xcd\xda\x84\x64\x4a\x25\x29\x3b\x46\xd1\xff\x5e\x50\x2f\x53\x4f\xbb\xbb\x3c\x4a\xdf\x0c\xbf\xf9\xe6\xc5\xc7\x47\xf8\xe5\xc0\x76\x82\x2a\x84\x6d\x6e\x3d\x3e\x82\xff\x65\x0d\x8c\x83\xc4\x48\xb1\x8c\xc3\xdd\x36\xbf\x03\x26\x01\x3f\x30\x2a\x14\xc6\x70\xda\x23\x07\xb5\x67\x12\x2a\x3b\x0d\x62\x12\x68\x9e\xa7\x0c\x63\x6b\xe9\x11\x3b\x20\x10\xd8\x2f\x6b\x02\x22\x4b\x51\xc2\xbd\x05\xc0\xe9\x01\xa1\x3e\x7f\xd8\xde\xf2\x57\xdb\xbb\x7f\xfa\xf4\x69\x01\xee\x26\x00\x77\xbb\x5e\xc3\xbb\xe7\xbc\xd9\xde\x37\xf8\x9d\x7c\x7b\xb0\x00\x62\x94\x91\x60\x79\xe9\x7e\xd4\x40\x83\x72\x2a\x90\xab\x31\xaf\xda\xe3\x72\xe3\xfa\x81\x67\x3b\x6e\x50\x03\x43\xaa\xc2\x92\x52\xf8\x3d\x01\x8f\xbc\x12\x8f\xb8\x4b\xe2\x37\x34\x35\xc7\x05\x6c\x5c\xd8\xbe\xaf\x74\x0c\x4b\xdb\x5f\xda\x2b\xa2\xbf\xac\xc8\x9a\x04\x04\x3c\xe2\x07\x9e\xb3\x0c\xf4\xdd\x91\x40\xaa\x30\x0e\xa9\x02\x08\x9c\x37\xe2\x07\xf6\xdb\x7b\xf0\x27\x74\x08\x16\x79\x3c\x0f\xb2\x16\xcf\x56\x57\xb3\x1c\xc5\x81\x49\xc9\x32\x5e\x29\xc7\x62\xb8\x9c\x17\xe7\xb3\x4f\x3c\xc7\x1e\xc8\xa5\x43\x08\x1b\x91\x8f\x54\x44\x7b\x2a\x7a\x02\x1b\x72\x94\x68\xaa\x42\xe3\xae\x1f\x95\xa4\xfe\x52\x65\x23\x4a\xe8\xae\xa6\x31\xca\x41\xa3\x52\x3c\x62\xda\x50\x1d\x45\x99\x9a\x6c\x5d\xe7\xcb\x96\x80\xe3\xae\xc8\x57\x53\x9a\xb0\xe0\x7f\x5b\xa0\x79\x74\xf4\x6a\x65\x78\xe8\xb0\x79\x30\x6e\x1d\x08\x5e\x48\x14\x23\x52\xdf\x20\x3a\x67\x51\x62\x16\xf6\x5c\x7d\x6b\xfc\x77\x26\xa4\x0a\x07\x16\x93\xf8\x94\x8e\xc1\xa7\xf1\xc8\x23\x71\xce\x75\xbd\xe5\x54\xca\x53\x26\xe2\x2b\xf8\x03\x65\xe9\x30\xde\x19\x3e\x7c\x37\xa2\x4f\x8b\x5f\xc0\xa5\xb0\x61\x45\x5e\xed\xed\x3a\x80\x3b\xe4\x77\xda\x78\xcf\xa4\xca\xc4\xb9\x6f\xfc\x9b\xbf\x71\x5f\x06\x2e\x5b\xe3\x7f\xfe\x2d\x8d\xa5\xa2\xaa\x90\xb7\x31\xbd\x18\xd3\x48\xb1\x23\x96\x0e\x04\x4a\x54\xad\x2c\xa1\xca\x12\xe4\x73\xa1\xd2\x42\xed\x91\x2b\x16\x95\x03\xee\x3a\x9e\x1d\x74\xad\x0d\x0a\xe8\xc5\xf9\xac\xfb\xcd\x68\xbd\x0a\x48\x55\x58\x96\x5d\xaf\xeb\xca\x9f\x12\xee\x59\x3c\xdf\x74\x3e\xb9\xdc\x2c\xd9\x8e\x87\x8c\x87\x51\x56\x34\xa3\xd0\xb8\xb9\x3a\x26\xd3\xa8\x10\xe5\x2c\x6c\xec\x58\x7e\x43\x11\xf6\xc0\x63\xe3\xb6\x1c\x77\x12\xc5\x50\x84\x1e\x97\xde\x2c\x2a\x6d\x26\xf4\xa8\x5b\xf3\xff\xc8\xd1\x19\x84\x13\x95\xd2\x9f\x84\x1a\x3e\x45\xe1\x87\x76\x43\xaf\xda\x64\xb5\x7b\x7a\x1b\x60\x22\x1f\xb4\x4a\xe2\x28\xb6\x93\x0b\xda\x66\x7b\xdc\xaf\xb1\x9f\x8c\x73\xd3\xaa\xba\x05\x1f\x63\x8a\x57\xf1\x73\xd3\xbc\x9c\x3e\xe1\x53\xad\x7a\x3b\xcf\xeb\x9c\x97\x7f\x17\xcf\xa3\x96\xcd\xdc\x9d\x34\x6e\x00\x13\xf6\x63\xcd\x3d\xe9\x6b\x0c\x6c\x84\x34\x8c\x25\x64\xf1\xc7\x5c\x28\x57\x39\x0c\x1c\x5c\xa1\x70\x59\x63\xe1\x01\x15\xed\xee\xb2\xc9\xe5\xd5\xf4\xea\x70\x44\x99\x1d\x59\x79\xfc\xf9\xb6\x4c\xf0\x3c\x3f\x66\x8e\x34\x2d\x74\xcf\x2a\xfc\xb8\x14\xd4\xd5\x17\x41\x42\xcf\x15\xcd\x27\x93\x6d\x27\x85\x8d\x26\x09\x9e\x1f\x9a\xa0\xb5\x3b\xf3\xe5\xbb\xca\x4e\xbc\x79\xfb\xb6\x0f\x5f\xfd\xf1\xa6\xa7\xaf\xc8\xd2\x14\x63\xf8\x8b\x46\x89\xb5\xf2\x36\xef\x75\x42\x9c\x57\x20\x5f\x1d\x3f\xf0\xe1\x94\x89\x44\x2b\x56\x4b\xf4\x3c\x8e\xaa\x26\xcd\x3c\xa6\x52\xfe\x3a\xa6\x0e\x7a\x1e\x68\xbe\x9c\x5a\xa4\xf5\x5f\x00\x00\x00\xff\xff\x85\xc1\xc4\x09\x12\x0c\x00\x00")

func migrations20181219_205810_add_usersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181219_205810_add_usersSql,
		"migrations/20181219_205810_add_users.sql",
	)
}

func migrations20181219_205810_add_usersSql() (*asset, error) {
	bytes, err := migrations20181219_205810_add_usersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181219_205810_add_users.sql", size: 3090, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20181223_231535_add_variablesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xb1\x6e\xea\x30\x14\xc6\xf1\xdd\x4f\xf1\x6d\x80\xee\xcd\x52\x89\x89\xc9\x24\x46\x8d\x6a\x08\x8d\x9d\xaa\x74\xa9\x4c\x7c\x54\xac\x9a\x24\x4a\x1c\xe0\xf1\xab\x08\x52\xd1\xa5\xea\x19\xad\xff\xe7\xe1\x17\x45\xf8\x77\x74\x1f\xad\x09\x84\xa2\x61\x51\x04\xf5\x2c\xe1\x2a\x74\x54\x06\x57\x57\x98\x14\xcd\x04\xae\x03\x5d\xa8\xec\x03\x59\x9c\x0f\x54\x21\x1c\x5c\x87\xeb\x6e\x88\x5c\x07\xd3\x34\xde\x91\x65\x71\x2e\xb8\x16\xd0\x7c\x29\x05\x4e\xa6\x75\x66\xef\xa9\xc3\x94\x01\x95\x39\x12\xae\xf7\xc2\xf3\xf8\x91\xe7\xd3\x87\xf9\x7c\x86\x4d\xa6\xb1\x29\xa4\xc4\x36\x4f\xd7\x3c\xdf\xe1\x49\xec\xfe\x33\xe0\x64\x7c\x7f\x1b\x04\xba\x04\x8c\x37\xf6\x43\x63\xfa\x50\xfb\xda\x58\x00\xcb\x2c\x93\x82\x6f\x90\x88\x15\x2f\xa4\xc6\x8a\x4b\x25\x86\xa6\x6c\xc9\x04\xb2\xef\x26\x40\xa7\x6b\xa1\x34\x5f\x6f\xf5\xdb\xcf\x7f\xfa\xc6\xfe\xda\xb0\xd9\x82\xb1\x7b\xac\xa4\x3e\x57\x23\xd7\xb7\xd5\xf0\xf8\x27\xad\xb6\xf6\x9e\x2c\xf6\xa6\xfc\x64\x49\x9e\x6d\x6f\x5e\xe9\x0a\xe2\x35\x55\x5a\xdd\xc9\xc5\x5c\xc5\x3c\x11\x0b\xc6\xbe\x02\x00\x00\xff\xff\x9c\x2c\xcd\x5b\xac\x01\x00\x00")

func migrations20181223_231535_add_variablesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20181223_231535_add_variablesSql,
		"migrations/20181223_231535_add_variables.sql",
	)
}

func migrations20181223_231535_add_variablesSql() (*asset, error) {
	bytes, err := migrations20181223_231535_add_variablesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20181223_231535_add_variables.sql", size: 428, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190122_002953_add_mapSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4d\x4f\xe3\x3a\x14\xdd\xe7\x57\xdc\x5d\xa8\x1e\x95\x9e\x2a\xb1\xea\x2a\x6d\x0d\x2f\xef\x85\xb4\xe4\xe3\x09\x66\x13\x85\xc6\xb4\x16\x6d\x92\x89\xdd\xa1\x9d\xd1\xfc\xf7\x51\x3e\xec\x3a\xdf\x81\x29\x9a\x2c\x50\x30\x27\xf7\x1e\x5f\x9f\x73\x6d\x33\x1e\xc3\x5f\x7b\xb2\x49\x7c\x86\xc1\x8d\x95\xf1\x18\xec\x07\x03\x48\x08\x14\xaf\x19\x89\x42\x50\xdd\x58\x05\x42\x01\x1f\xf1\xfa\xc0\x70\x00\x6f\x5b\x1c\x02\xdb\x12\x0a\xf9\x77\x29\x88\x50\xf0\xe3\x78\x47\x70\xa0\xac\x13\x9c\xc6\x62\xa7\x18\xc3\xce\x3f\xe1\xc4\xa3\xcc\x67\x07\x0a\x3e\x05\x1c\x1e\xf6\x70\xa5\xe2\xd0\x7f\xde\xe1\x40\xbd\x06\x35\x20\x54\xbc\xbf\x24\xd1\x77\x1c\xaa\xa3\x69\x29\xc6\xde\x8f\x3d\xbc\xc3\x7b\x1c\xb2\x0f\x44\x52\xe6\x16\xd2\x1c\x04\x8e\x36\x33\x50\x1a\x8b\xc2\x95\x02\x40\x02\x10\xcf\x4c\xbf\xb3\x91\xa5\x6b\x06\xac\x2c\xfd\x5e\xb3\x9e\xe0\x3f\xf4\x74\xad\x00\x84\xfe\x1e\x73\xd0\xff\x9a\x35\xff\x47\xb3\xae\x26\x37\x37\x23\x30\x97\x0e\x98\xae\x61\xa4\xa0\x00\xd3\x75\x42\xe2\xac\x0a\x0e\x3e\x32\x11\x56\x06\x45\xd9\xdf\x69\x36\xfe\xaf\xbd\x34\x67\xb0\x40\xb7\x9a\x6b\x38\xa0\xfe\xf8\xa9\xa6\x88\x7c\xc6\x81\xe7\x33\x00\x47\xbf\x47\xb6\xa3\xdd\xaf\x9c\x2f\xe5\x30\x87\x38\xe8\x06\x29\x4d\x33\xf6\x18\x3e\x32\x79\xda\xad\x13\xce\xf9\x67\x3f\xe5\xb4\x94\x9d\x76\x38\x1f\x96\x69\x37\x27\xcb\x96\xfc\x8f\x14\x39\xcd\xce\x53\xce\xf4\x3b\xdd\x74\x38\xc8\x35\x0c\x98\x2f\x4d\xdb\xb1\xb4\x74\xf4\x4c\xd3\x9b\x78\xa9\x24\xbc\x97\x57\xb0\xd0\x2d\xb2\x90\x39\x47\x76\xa1\x12\x12\x8c\x60\x69\x82\xbb\x5a\xa4\x13\x9c\x6b\xf6\x5c\x5b\xa0\x74\x64\x81\x0c\xe4\x20\xb0\x90\xed\x58\xfa\xdc\xc9\x2b\x94\xe9\x32\x7b\x4a\x9a\x97\xf9\xbd\x61\xb2\xd9\x16\xd4\x75\xd3\x41\x77\xc8\x2a\x4f\x42\x54\xf7\xef\xcf\x56\x04\xd9\xfb\x1b\x5c\x59\xa4\xd6\x15\xca\xc0\x69\x65\x8b\xa2\x56\x2a\x99\xc7\xf2\x26\xfc\xa5\x5c\x4b\x9e\xa9\xaf\x9a\x36\xaa\xea\x0d\x60\xa8\xe4\x8a\xee\x50\x17\xdd\x50\xdd\x55\xa5\x57\xd7\x96\x2c\x40\x4e\xac\xfc\xc8\xe8\x38\x89\x58\x94\x36\xaf\x5c\x8f\x83\xd1\x59\xbf\xeb\x61\xb2\x49\xfc\x78\xeb\x51\xcc\x18\x09\x37\xb4\xe8\x26\x8d\xb1\x6b\x3d\x46\xe8\x3e\xa7\x55\xf2\x48\xbb\x53\x78\x75\x73\xaf\x70\xe3\xd4\x1c\x23\x8c\xff\x1e\xdf\xc8\x96\xfd\x28\xa3\xcb\xba\x17\xa0\x69\xc3\x69\xb3\x71\xd5\xc9\x43\xfd\x0c\x15\xb7\xd6\x97\x59\x36\x76\x37\xba\xd9\x13\x01\xfe\x46\xd6\x55\x8b\x77\xf9\x81\x9e\x28\xc3\x7b\x2f\xb3\x45\x47\x1f\x4e\xa3\x96\xe4\x53\x59\x9b\x22\xaf\x37\x11\x6f\xe5\xd5\x11\xbc\xde\xd3\x10\x44\x07\x1a\x90\xf6\x62\x5d\xe8\xf2\xfd\xd7\x35\xf5\x07\x17\x81\x6e\x2e\xd0\xa3\x5c\x6f\x4f\x94\xd5\xf3\x99\x27\x4f\xe7\x10\x7e\x4d\xd9\x95\x16\x54\xfa\xf0\xfa\xbc\x20\xa3\x29\xcf\x52\x0f\x5f\x09\x4a\x82\x63\x57\xd0\x6a\xa4\x22\xc5\x80\x20\x32\x99\x36\x45\x66\x8e\x6a\xd0\x65\xa7\x36\xe5\x4f\xdb\x37\xa2\x52\x02\x21\x40\xfe\x7b\x93\x0c\x05\x99\xf7\xe8\x42\x4a\xd5\xeb\x83\x33\x19\x69\xac\xde\x3a\x07\x9b\xa2\x18\xa9\x7a\xa2\xcf\x17\x67\x1a\x97\xdf\xa3\x8b\xa7\xb6\x55\x37\xb4\xbc\x92\x43\x3a\x9a\x5d\x23\xae\xab\xcd\x79\xfe\x3a\x3f\x5f\x37\xa9\xaa\x57\x56\xf9\xc7\xbd\xba\x2a\x72\x9c\x85\xc5\x07\x1a\x95\x25\x18\xfd\x8e\xb4\x86\x12\x92\x8d\xf9\x39\xea\x1a\xca\xe4\x62\xfa\xca\x8e\x42\x50\x15\x58\xc3\x46\x59\xd5\xd8\x60\x91\xb5\xab\x4c\xbe\x12\x2f\xa2\xb7\x90\x5f\x8a\xc5\x8d\x38\x1d\x1c\x74\x27\x4e\xa2\xdd\x0e\x07\xf0\xec\xaf\x5f\x15\x65\x61\x2d\x57\x85\x74\xf5\x5b\x40\x8f\xba\xed\xd8\xd2\xfd\xac\xa8\xc7\xb4\x15\x37\x00\xc2\x0f\x61\xfd\xc0\x62\x4d\xfa\x81\xe2\x70\xdd\x0f\xe5\x42\x1b\x8a\xe4\xed\x77\x30\x9e\x9b\x4a\x7c\x10\x24\x51\x5c\xff\x4f\x83\x3c\x5e\x3f\xcc\x4d\x7f\x05\x00\x00\xff\xff\x7c\x71\x23\x42\xf2\x10\x00\x00")

func migrations20190122_002953_add_mapSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190122_002953_add_mapSql,
		"migrations/20190122_002953_add_map.sql",
	)
}

func migrations20190122_002953_add_mapSql() (*asset, error) {
	bytes, err := migrations20190122_002953_add_mapSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190122_002953_add_map.sql", size: 4338, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190309_123940_add_logsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6f\x9b\x30\x1c\xc5\xef\xfe\x14\xef\x46\xa7\x35\x97\x5d\x7b\x72\xc1\x9d\xac\x11\x92\x81\xd1\xda\x5d\x10\x81\xff\xa8\x35\xc7\x46\xc6\x59\x93\x6f\x3f\x39\x90\x26\xd3\x34\x69\x5c\x78\x82\xdf\x83\xf7\xfc\x56\x2b\x7c\xdc\xeb\xc1\xb7\x81\x50\x8f\x6c\xb5\x42\xf5\x35\x87\xb6\x98\xa8\x0b\xda\x59\x24\xf5\x98\x40\x4f\xa0\x23\x75\x87\x40\x3d\xde\x5e\xc9\x22\xbc\xea\x09\xb3\x2f\x42\x7a\x42\x3b\x8e\x46\x53\xcf\x3a\x4f\xf1\x5b\xe1\x34\x12\x0c\xfd\x22\xd3\x9c\x65\x3b\x81\xec\x61\x8f\xbb\x44\xec\xc9\x0f\x64\xbb\x53\x72\x8f\x84\x1b\xf2\x21\x8a\xd4\xeb\xa0\xbb\xd6\x44\x2d\xbc\x77\x3e\x8a\x6f\xad\xb7\xda\x0e\x51\x16\x2e\xe8\x8e\xa2\x92\xf6\x87\x8b\xf7\x8c\x76\x87\x21\xf9\xf0\xc0\x58\x5a\x0a\xae\x04\x14\x7f\xcc\x05\x8c\x1b\x26\xdc\x31\x40\xf7\xb8\x5c\x8f\xf2\x73\x25\x4a\xc9\x73\x6c\x4b\xb9\xe6\xe5\x0b\xbe\x88\x97\x7b\x06\xec\x5c\x7f\x5a\x98\x40\xc7\x70\xe1\x8b\x8d\x42\x51\xe7\x79\x44\xe6\x3e\x7d\xd3\x06\x28\xb9\x16\x95\xe2\xeb\xad\xfa\xfe\x07\x72\xae\x39\x3b\x6f\x1a\xbf\x23\xc8\xc4\x13\xaf\x73\xb5\x44\x67\x37\x91\x65\x91\x89\xe7\xc5\xf4\xa9\x89\xd1\x1b\xdd\x1f\x19\xb0\x29\x96\x22\xe7\x77\x7f\x39\xae\xa1\xfe\x61\xbb\x02\xd1\x7b\x3b\x72\xe6\xde\xec\x65\xe6\xf7\x8d\xe3\xc3\xff\x5a\xd9\x3b\x63\xa8\xc7\xae\xed\x7e\xb2\xac\xdc\x6c\x97\x43\x97\x4f\x10\xcf\xb2\x52\xd5\xfc\xfb\x94\x57\x29\xcf\xc4\x03\x63\xbf\x03\x00\x00\xff\xff\xc7\xb0\xc5\xc9\x5f\x02\x00\x00")

func migrations20190309_123940_add_logsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190309_123940_add_logsSql,
		"migrations/20190309_123940_add_logs.sql",
	)
}

func migrations20190309_123940_add_logsSql() (*asset, error) {
	bytes, err := migrations20190309_123940_add_logsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190309_123940_add_logs.sql", size: 607, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190610_215124_add_passw_to_nodeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6a\x03\x41\x0c\x45\xfb\x39\xc5\xef\x5c\x84\x3d\x81\xdb\x94\x69\x42\x70\x1d\xc6\x23\xc5\x16\x91\xa5\x61\xa4\x65\x37\xb7\x0f\xc6\x38\x18\xb2\x90\xb4\x9f\xff\xe0\xbd\x69\xc2\xd3\x45\x4e\xa3\x26\xe3\xd0\xcb\x34\xe1\xed\xf5\x05\x62\x08\x6e\x29\x6e\xd8\x1d\xfa\x0e\x12\xe0\x95\xdb\x9c\x4c\x58\xce\x6c\xc8\xb3\x04\x6e\xdc\xf5\x24\x81\xda\xbb\x0a\x53\xa9\x9a\x3c\x90\xf5\xa8\x0c\x73\xe2\x28\x40\x25\x42\x73\x9d\x2f\x06\xf5\x93\x18\x92\xd7\x84\xcd\xaa\xfb\xbf\xfe\x6c\x6d\x7c\xf5\x64\x7a\xef\x35\x62\xf1\x41\x8f\x70\x79\xd4\x7f\xf6\xc5\xee\x01\x3f\xf6\xd7\xf1\x5f\xfe\xc3\x55\x99\x70\xac\xed\x73\xd3\x89\x86\xf7\xbb\x94\x7c\x80\x57\x89\x8c\x5b\xce\x76\xc4\x36\xf0\xbb\x67\x5f\xca\x77\x00\x00\x00\xff\xff\xae\x65\x27\x6e\x85\x01\x00\x00")

func migrations20190610_215124_add_passw_to_nodeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190610_215124_add_passw_to_nodeSql,
		"migrations/20190610_215124_add_passw_to_node.sql",
	)
}

func migrations20190610_215124_add_passw_to_nodeSql() (*asset, error) {
	bytes, err := migrations20190610_215124_add_passw_to_nodeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190610_215124_add_passw_to_node.sql", size: 389, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190730_175759_update_nodeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4a\x04\x41\x10\x04\xd0\x7c\xbe\xa2\xb2\x53\x64\x13\xe1\xa2\x4d\x0d\x4d\x44\xee\x03\xfa\x66\x5a\xb7\x71\xb6\x7b\xe8\xe9\xf5\xee\xf3\x65\x11\x75\x93\x05\x2f\x2d\xaa\xe0\xd5\x30\xe0\x61\x96\x77\xa7\x60\x9c\x5a\x1a\x06\xbc\xbe\x3c\x43\x14\x9d\x73\x88\x29\x0e\xa7\x76\x80\x74\xf0\x95\xf3\x12\x5c\x70\x99\x58\x11\x93\x74\x7c\xef\xd6\x92\x74\x50\x6b\x55\xb8\x24\xaa\xc1\x8e\xa0\x73\x65\xa8\x15\xee\x09\x00\x8a\x5b\x43\xb6\xba\xcc\x0a\x79\x03\x5f\xa5\x47\x87\xb4\xf1\xa6\x7e\x33\x8f\x31\xa5\xad\xf9\xc9\x2e\xfa\xa3\xfe\x25\xaf\xe1\xbf\xd0\x6e\xb5\x72\xc1\x99\xf2\xc7\x0e\x84\x4a\xd9\x38\xd4\xe2\xcf\x8e\x4f\xf2\x3c\x91\xdf\x3d\x1e\x8f\xf7\x7b\x47\x76\xf7\xeb\x17\xe8\x32\xb3\x4b\x1e\x53\xfa\x0a\x00\x00\xff\xff\x43\xb9\x66\x89\x88\x01\x00\x00")

func migrations20190730_175759_update_nodeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190730_175759_update_nodeSql,
		"migrations/20190730_175759_update_node.sql",
	)
}

func migrations20190730_175759_update_nodeSql() (*asset, error) {
	bytes, err := migrations20190730_175759_update_nodeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190730_175759_update_node.sql", size: 392, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190730_193837_update_userSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x4e\x43\x31\x0c\x85\xe1\x3d\x4f\x71\xb6\x0e\xe8\x3e\x41\x57\x46\x16\x84\x3a\xa3\x34\x39\xe5\x5a\x75\x9d\x28\x76\xd4\xfb\xf8\xa8\x20\x50\x17\x50\x57\xcb\xe7\x97\xbe\x65\xc1\xd3\x45\x3e\x46\x0e\xe2\xd0\xd3\xb2\xe0\xed\xf5\x05\x62\x70\x96\x90\x66\xd8\x1d\xfa\x0e\xe2\xe0\xc6\x32\x83\x15\xd7\x95\x86\x58\xc5\xf1\xbd\xbb\x3d\x89\x23\xf7\xae\xc2\x9a\xb2\x06\x07\x22\x1f\x95\x98\xce\xe1\x09\x00\xea\x68\x1d\xa5\xe9\xbc\x18\xe4\x04\x6e\xe2\xe1\xc8\x33\x56\x5a\x48\xf9\xaa\xbc\x47\x3b\xd3\xf6\x7f\x14\x72\xad\x77\x01\x6b\xf1\x5f\x04\xc1\x2d\x50\x79\xca\x53\x03\x36\x55\xf7\x29\xdd\x53\x9f\xdb\xd5\x7e\xb0\xbf\xd2\xdb\xf1\x21\xeb\x68\xaa\xac\x38\xe6\x72\x4e\x29\x7d\x06\x00\x00\xff\xff\x62\x13\xc8\x7a\x43\x01\x00\x00")

func migrations20190730_193837_update_userSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190730_193837_update_userSql,
		"migrations/20190730_193837_update_user.sql",
	)
}

func migrations20190730_193837_update_userSql() (*asset, error) {
	bytes, err := migrations20190730_193837_update_userSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190730_193837_update_user.sql", size: 323, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190730_235533_fix_workflow_scenario_refSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x4e\xc3\x30\x14\x45\x77\x7f\xc5\xdd\xda\x0a\x65\x61\xed\x64\xe2\x57\x54\x61\x39\xc5\x71\x06\xa6\x28\x24\x2e\x7d\x6a\x88\xa3\x38\x28\xfd\x7c\x14\x10\x51\xa5\x4a\x80\x27\xeb\xea\xbc\x33\x9c\x24\xc1\xdd\x3b\xbf\x0d\xd5\xe8\x51\xf4\x22\x49\x90\x3f\x6b\x70\x87\xe8\xeb\x91\x43\x87\x55\xd1\xaf\xc0\x11\xfe\xe2\xeb\x8f\xd1\x37\x98\x4e\xbe\xc3\x78\xe2\x88\xef\xbb\x19\xe2\x88\xaa\xef\x5b\xf6\x8d\x90\xda\x91\x85\x93\x0f\x9a\x30\x85\xe1\x7c\x6c\xc3\x14\x05\x00\x28\x9b\x1d\x90\x66\x26\x77\x56\xee\x8d\x03\x1f\xe1\x2f\x1c\xc7\xb8\x70\xe5\x7d\xb9\x7c\x63\xed\xbb\x6a\xe0\x10\xcb\xe3\x79\xfb\x8b\x55\x2a\x75\x2d\xfd\x4b\x85\x5d\x66\x69\xff\x68\xf0\x44\x2f\x58\xdf\x20\x25\x37\x9b\x2f\xed\xfc\x2c\xed\xc8\x92\x49\x29\xc7\xad\x0b\x6b\x6e\x36\xc8\x0c\x8a\x83\x92\x8e\x90\xca\x3c\x95\x8a\xe6\x45\x91\x26\x47\xc8\xc9\xc1\x14\x5a\x6f\x85\xb8\xae\xac\xc2\xd4\xfd\x74\x5e\x22\xcf\xe3\xbf\x32\x0f\xa1\x6d\x7d\x83\xd7\xaa\x3e\x0b\xf1\x19\x00\x00\xff\xff\x93\x6b\x0f\x9b\xbd\x01\x00\x00")

func migrations20190730_235533_fix_workflow_scenario_refSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190730_235533_fix_workflow_scenario_refSql,
		"migrations/20190730_235533_fix_workflow_scenario_ref.sql",
	)
}

func migrations20190730_235533_fix_workflow_scenario_refSql() (*asset, error) {
	bytes, err := migrations20190730_235533_fix_workflow_scenario_refSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190730_235533_fix_workflow_scenario_ref.sql", size: 445, mode: os.FileMode(420), modTime: time.Unix(1568213048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190910_234100_add_map_element_zone_attrSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x3d\x6f\xdb\x30\x10\xdd\xf9\x2b\xde\x96\x18\xad\x97\xae\x9e\x18\xf1\x1c\x10\x65\x28\x87\x94\x80\x64\x12\x54\x8b\x4d\x88\x48\x94\x1a\x31\x48\xd0\x5f\x5f\x90\x72\x0c\xb5\x43\x61\x8e\xbc\x7b\x5f\xf7\xb6\x5b\x7c\x19\xfc\xd3\x6b\x1b\x1d\xea\x89\x6d\xb7\xb0\xf7\x0a\x3e\x60\x76\xc7\xe8\xc7\x80\xab\x7a\xba\x82\x9f\xe1\x3e\xdc\xf1\x2d\xba\x0e\xef\xcf\x2e\x20\x3e\xfb\x19\x0b\x2e\x2d\xf9\x19\xed\x34\xf5\xde\x75\xac\x30\xc4\x2b\x42\xc5\x6f\x14\xe1\xf7\x18\x5c\x13\xdb\xa7\x19\xd7\x0c\x00\x7c\x07\xe0\x46\xde\x5a\x32\x92\x2b\x1c\x8c\xbc\xe3\xe6\x11\xdf\xe9\xf1\x6b\x9e\x87\x76\x70\x88\xee\x23\x42\x97\x15\x74\xad\x14\xdb\xec\xd8\x27\x67\xad\xe5\x7d\x4d\x90\x5a\xd0\x43\x5e\x6d\xda\xd8\x9c\x25\x9a\xb7\xf0\x2b\x93\x94\x7a\xad\x9b\xf6\x12\x07\x57\x15\x99\x93\xad\xa1\x9d\x1a\xd7\xbb\xc1\x85\x38\x67\x08\x17\x02\x45\xa9\xea\x3b\x0d\xb9\xcf\xda\xf4\x20\x6d\x65\x17\x22\xdf\x25\xcf\x52\x2f\x8e\x2e\xe3\xd2\xb6\x32\x3c\x41\xd6\xf3\xe6\xdb\xca\xee\xcf\x17\xec\x4b\x43\xf2\x56\xa7\xfc\xb8\x3e\x49\x6d\x32\x49\x7a\x86\xf6\x64\x48\x17\x64\xd7\x79\x7c\xb7\x49\x09\xeb\x83\x48\x27\x29\xb8\x2d\xb8\xa0\xf4\x23\x48\x51\x45\xb0\x74\xb6\xb9\xee\x56\x8c\xef\xe1\xb3\xdd\x73\xb5\xe9\xf3\xa2\x72\x5f\xc7\xbe\x77\x1d\x7e\xb4\xc7\x97\xff\x87\x17\xa6\x3c\xac\x2e\xf9\xf7\x15\x77\x8c\xe5\xf9\x82\xfd\x67\x9c\xd3\x9d\xe2\xec\x18\xfb\x13\x00\x00\xff\xff\xaf\xbd\xd4\xea\x98\x02\x00\x00")

func migrations20190910_234100_add_map_element_zone_attrSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190910_234100_add_map_element_zone_attrSql,
		"migrations/20190910_234100_add_map_element_zone_attr.sql",
	)
}

func migrations20190910_234100_add_map_element_zone_attrSql() (*asset, error) {
	bytes, err := migrations20190910_234100_add_map_element_zone_attrSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190910_234100_add_map_element_zone_attr.sql", size: 664, mode: os.FileMode(420), modTime: time.Unix(1568223338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20190913_172212_rename_zone_tagsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbf\x0e\x82\x30\x10\xc7\xf1\xfd\x9e\xe2\xb7\x31\x98\x3e\x01\x13\xc6\x6e\xa8\x11\x61\x26\x15\x2e\x70\x11\xda\x86\xd6\x60\x7c\x7a\x43\x8c\x44\x9d\x5c\xef\x4f\xbe\x1f\xa5\xb0\x19\xa5\x9b\x4c\x64\x54\x9e\x94\xc2\xf9\x94\x43\x2c\x02\x37\x51\x9c\x45\x52\xf9\x04\x12\xc0\x77\x6e\x6e\x91\x5b\xcc\x3d\x5b\xc4\x5e\x02\x5e\x7f\xcb\x91\x04\x18\xef\x07\xe1\x96\xb2\xbc\xd4\x05\xca\x6c\x9b\x6b\x3c\x9c\xe5\x3a\x9a\x2e\x10\x00\x14\xfa\x90\xed\x35\xca\x23\x46\xe3\xeb\x65\x17\x52\xa2\x4f\xc0\xce\xcd\xf6\x4d\x58\xfb\xcb\xf0\x2f\xc1\xe4\x86\x81\x5b\x5c\x4c\x73\xfd\x52\xac\xb5\x1f\xc5\xaa\x4b\x89\x9e\x01\x00\x00\xff\xff\xf3\x30\xe8\xe9\x07\x01\x00\x00")

func migrations20190913_172212_rename_zone_tagsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190913_172212_rename_zone_tagsSql,
		"migrations/20190913_172212_rename_zone_tags.sql",
	)
}

func migrations20190913_172212_rename_zone_tagsSql() (*asset, error) {
	bytes, err := migrations20190913_172212_rename_zone_tagsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190913_172212_rename_zone_tags.sql", size: 263, mode: os.FileMode(420), modTime: time.Unix(1568376221, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20191012_010345_update_device_actions_2_scripts_fkSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\xb7\xb5\x15\xca\xc2\xda\xc9\x24\x57\x54\x11\xa5\x90\x38\x03\x53\x94\x26\x57\x6a\xd5\xb5\x2d\xdb\x28\xfc\x7c\x14\x0a\x15\x48\x08\x71\xe3\xa7\xf7\x9e\x4e\x5f\x96\xe1\xe6\xac\x5f\x42\x9f\x18\xad\x17\x59\x86\xe6\xa9\x84\xb6\x88\x3c\x24\xed\x2c\x16\xad\x5f\x40\x47\xf0\x1b\x0f\xaf\x89\x47\x4c\x47\xb6\x48\x47\x1d\x71\xe9\xcd\x21\x1d\xd1\x7b\x6f\x34\x8f\xa2\x37\x89\x03\x52\xbf\x37\x8c\x83\x71\x53\xc7\x86\xcf\x6c\x53\x14\x00\x30\x06\xe7\x31\x38\x1b\x53\xe8\xb5\x4d\x1f\x6c\xbe\x1f\xc9\xee\xb6\x8b\x43\xd0\x3e\xc5\xee\x70\x5a\x0b\x21\x4b\x45\x35\x94\xbc\x2b\xe9\x97\x49\x59\x14\xc8\x77\x55\xa3\x6a\xb9\xad\xd4\x1f\x4b\xd8\xec\x6a\xda\xde\x57\x78\xa0\x67\x2c\x2f\xbc\xd3\xe3\xea\xfa\x44\x4d\x1b\xaa\xa9\xca\xa9\xc1\x67\x0b\x4b\x3d\xae\xb0\xab\xd0\x3e\x16\x52\x11\x72\xd9\xe4\xb2\xa0\x99\x14\x54\x92\x22\x34\xa4\x50\xb5\x65\xb9\x16\xe2\xbb\xca\xc2\x4d\xf6\x4b\xe6\xd5\xe4\x0c\xff\xe5\x32\x38\x63\x78\xc4\xbe\x1f\x4e\xe2\x3d\x00\x00\xff\xff\x87\xf6\xb2\xea\xa1\x01\x00\x00")

func migrations20191012_010345_update_device_actions_2_scripts_fkSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20191012_010345_update_device_actions_2_scripts_fkSql,
		"migrations/20191012_010345_update_device_actions_2_scripts_fk.sql",
	)
}

func migrations20191012_010345_update_device_actions_2_scripts_fkSql() (*asset, error) {
	bytes, err := migrations20191012_010345_update_device_actions_2_scripts_fkSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20191012_010345_update_device_actions_2_scripts_fk.sql", size: 417, mode: os.FileMode(420), modTime: time.Unix(1570818188, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20191019_150307_fix_constraintsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\xb7\x75\x40\x59\x58\x3b\x05\xc8\x80\x14\x52\x91\xba\xb3\x15\x9c\x2b\x3d\xc5\xd8\x96\xcf\xc8\x7c\x7c\x54\x55\xe1\x7f\x05\xa8\x5d\xcf\x3f\xdb\xef\x9d\x7e\x55\x85\x8b\x27\x7e\x4c\x43\x26\x6c\xa2\xaa\x2a\xac\xef\x5b\xb0\x87\x90\xcd\x1c\x3c\x16\x9b\xb8\x00\x0b\xe8\x85\xec\x73\xa6\x11\x65\x47\x1e\x79\xc7\x82\xc3\xbd\x3d\xc4\x82\x21\x46\xc7\x34\x2a\x55\xb7\xba\xe9\xa1\xeb\xab\xb6\x41\x09\x69\xda\xba\x50\x8c\x58\xf2\x43\xe2\x60\xc4\x26\x8e\x59\x14\x00\xf4\x4d\x57\xdf\x35\xb8\x5e\x75\x6b\xdd\xd7\xb7\x9d\xfe\xce\x8b\xb9\x34\xf3\x50\xcc\x76\x82\x5e\x1d\x7f\xf4\x0b\xbb\x3c\x29\xca\xe1\xf4\x53\x90\xf9\x9b\xdf\x63\xbc\x93\xcb\xa3\x0b\x39\xe7\x1e\xfe\x55\xff\x5c\xad\x7f\x2c\xfb\xd1\xa7\x9b\x50\xfc\x6c\xd4\x9b\x4e\xfb\xe1\x9f\x84\x4a\xc1\x39\x1a\xf1\x30\xd8\x49\x29\xf5\x1a\x00\x00\xff\xff\x41\x67\xec\x4d\xa8\x02\x00\x00")

func migrations20191019_150307_fix_constraintsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20191019_150307_fix_constraintsSql,
		"migrations/20191019_150307_fix_constraints.sql",
	)
}

func migrations20191019_150307_fix_constraintsSql() (*asset, error) {
	bytes, err := migrations20191019_150307_fix_constraintsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20191019_150307_fix_constraints.sql", size: 680, mode: os.FileMode(420), modTime: time.Unix(1571472628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20170121_004649_nodes.sql": migrations20170121_004649_nodesSql,
	"migrations/20170121_005244_workflows.sql": migrations20170121_005244_workflowsSql,
	"migrations/20181109_220911_workflow_add_scenario.sql": migrations20181109_220911_workflow_add_scenarioSql,
	"migrations/20181113_013141_workflow_elements.sql": migrations20181113_013141_workflow_elementsSql,
	"migrations/20181114_214137_devices.sql": migrations20181114_214137_devicesSql,
	"migrations/20181114_225604_device_group.sql": migrations20181114_225604_device_groupSql,
	"migrations/20181119_092050_add_workers.sql": migrations20181119_092050_add_workersSql,
	"migrations/20181219_205800_add_images.sql": migrations20181219_205800_add_imagesSql,
	"migrations/20181219_205810_add_users.sql": migrations20181219_205810_add_usersSql,
	"migrations/20181223_231535_add_variables.sql": migrations20181223_231535_add_variablesSql,
	"migrations/20190122_002953_add_map.sql": migrations20190122_002953_add_mapSql,
	"migrations/20190309_123940_add_logs.sql": migrations20190309_123940_add_logsSql,
	"migrations/20190610_215124_add_passw_to_node.sql": migrations20190610_215124_add_passw_to_nodeSql,
	"migrations/20190730_175759_update_node.sql": migrations20190730_175759_update_nodeSql,
	"migrations/20190730_193837_update_user.sql": migrations20190730_193837_update_userSql,
	"migrations/20190730_235533_fix_workflow_scenario_ref.sql": migrations20190730_235533_fix_workflow_scenario_refSql,
	"migrations/20190910_234100_add_map_element_zone_attr.sql": migrations20190910_234100_add_map_element_zone_attrSql,
	"migrations/20190913_172212_rename_zone_tags.sql": migrations20190913_172212_rename_zone_tagsSql,
	"migrations/20191012_010345_update_device_actions_2_scripts_fk.sql": migrations20191012_010345_update_device_actions_2_scripts_fkSql,
	"migrations/20191019_150307_fix_constraints.sql": migrations20191019_150307_fix_constraintsSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"20170121_004649_nodes.sql": &bintree{migrations20170121_004649_nodesSql, map[string]*bintree{}},
		"20170121_005244_workflows.sql": &bintree{migrations20170121_005244_workflowsSql, map[string]*bintree{}},
		"20181109_220911_workflow_add_scenario.sql": &bintree{migrations20181109_220911_workflow_add_scenarioSql, map[string]*bintree{}},
		"20181113_013141_workflow_elements.sql": &bintree{migrations20181113_013141_workflow_elementsSql, map[string]*bintree{}},
		"20181114_214137_devices.sql": &bintree{migrations20181114_214137_devicesSql, map[string]*bintree{}},
		"20181114_225604_device_group.sql": &bintree{migrations20181114_225604_device_groupSql, map[string]*bintree{}},
		"20181119_092050_add_workers.sql": &bintree{migrations20181119_092050_add_workersSql, map[string]*bintree{}},
		"20181219_205800_add_images.sql": &bintree{migrations20181219_205800_add_imagesSql, map[string]*bintree{}},
		"20181219_205810_add_users.sql": &bintree{migrations20181219_205810_add_usersSql, map[string]*bintree{}},
		"20181223_231535_add_variables.sql": &bintree{migrations20181223_231535_add_variablesSql, map[string]*bintree{}},
		"20190122_002953_add_map.sql": &bintree{migrations20190122_002953_add_mapSql, map[string]*bintree{}},
		"20190309_123940_add_logs.sql": &bintree{migrations20190309_123940_add_logsSql, map[string]*bintree{}},
		"20190610_215124_add_passw_to_node.sql": &bintree{migrations20190610_215124_add_passw_to_nodeSql, map[string]*bintree{}},
		"20190730_175759_update_node.sql": &bintree{migrations20190730_175759_update_nodeSql, map[string]*bintree{}},
		"20190730_193837_update_user.sql": &bintree{migrations20190730_193837_update_userSql, map[string]*bintree{}},
		"20190730_235533_fix_workflow_scenario_ref.sql": &bintree{migrations20190730_235533_fix_workflow_scenario_refSql, map[string]*bintree{}},
		"20190910_234100_add_map_element_zone_attr.sql": &bintree{migrations20190910_234100_add_map_element_zone_attrSql, map[string]*bintree{}},
		"20190913_172212_rename_zone_tags.sql": &bintree{migrations20190913_172212_rename_zone_tagsSql, map[string]*bintree{}},
		"20191012_010345_update_device_actions_2_scripts_fk.sql": &bintree{migrations20191012_010345_update_device_actions_2_scripts_fkSql, map[string]*bintree{}},
		"20191019_150307_fix_constraints.sql": &bintree{migrations20191019_150307_fix_constraintsSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

